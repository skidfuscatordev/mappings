{
  "md5": "34c8ec40831d77372b2bea95139783b0",
  "sha2": "d858f142ea189c62771c505a6548d8606ac098fe",
  "sha256": "eaf537d98e033d0f0451cd1b8cc74e02d7b55ec882da63c88060d806ba89c348",
  "contents": {
    "classes": {
      "org/conscrypt/ConscryptCertStore.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/ConscryptCertStore",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getTrustAnchor",
            "acc": 1025,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;"
          },
          {
            "nme": "findAllIssuers",
            "acc": 1025,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set;",
            "sig": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set<Ljava/security/cert/X509Certificate;>;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLMac$HmacSHA1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacSHA1",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/Internal.class": {
        "ver": 51,
        "acc": 9729,
        "nme": "org/conscrypt/Internal",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": [],
        "vanns": [
          {
            "dsc": "Ljava/lang/annotation/Retention;",
            "vals": [
              "value",
              [
                "Ljava/lang/annotation/RetentionPolicy;",
                "SOURCE"
              ]
            ]
          },
          {
            "dsc": "Ljava/lang/annotation/Target;",
            "vals": [
              "value",
              [
                [
                  "Ljava/lang/annotation/ElementType;",
                  "ANNOTATION_TYPE"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "CONSTRUCTOR"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "FIELD"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "METHOD"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "PACKAGE"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "TYPE"
                ]
              ]
            ]
          },
          {
            "dsc": "Ljava/lang/annotation/Documented;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMac.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLMac",
        "super": "javax/crypto/MacSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JI)V"
          },
          {
            "nme": "engineGetMacLength",
            "acc": 4,
            "dsc": "()I"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "resetContext",
            "acc": 18,
            "dsc": "()V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(B)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "()[B"
          },
          {
            "nme": "engineReset",
            "acc": 4,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(JILorg/conscrypt/OpenSSLMac$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "ctx",
            "dsc": "Lorg/conscrypt/NativeRef$HMAC_CTX;"
          },
          {
            "acc": 18,
            "nme": "evp_md",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "keyBytes",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "size",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "singleByte",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/ConscryptEngineSocket.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptEngineSocket",
        "super": "org/conscrypt/OpenSSLSocketImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "newEngine",
            "acc": 10,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngineSocket;)Lorg/conscrypt/ConscryptEngine;"
          },
          {
            "nme": "getDelegatingTrustManager",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;Lorg/conscrypt/ConscryptEngineSocket;)Ljavax/net/ssl/X509TrustManager;"
          },
          {
            "nme": "getSSLParameters",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLParameters;"
          },
          {
            "nme": "setSSLParameters",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)V"
          },
          {
            "nme": "startHandshake",
            "acc": 17,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "doHandshake",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getInputStream",
            "acc": 17,
            "dsc": "()Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getOutputStream",
            "acc": 17,
            "dsc": "()Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getHandshakeSession",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getSession",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getActiveSession",
            "acc": 16,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 17,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 17,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setHostname",
            "acc": 17,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 17,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 17,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getUseClientMode",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setUseClientMode",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "close",
            "acc": 17,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setHandshakeTimeout",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 16,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 16,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 17,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 16,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelectorAdapter;)V"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "onHandshakeFinished",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "waitForHandshake",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "drainOutgoingQueue",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "getUnderlyingOutputStream",
            "acc": 2,
            "dsc": "()Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getUnderlyingInputStream",
            "acc": 2,
            "dsc": "()Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "chooseServerAlias",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientAlias",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;[Ljavax/security/auth/x500/X500Principal;[Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)V"
          },
          {
            "nme": "access$400",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Lorg/conscrypt/ConscryptEngine;"
          },
          {
            "nme": "access$500",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$600",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Lorg/conscrypt/BufferAllocator;"
          },
          {
            "nme": "access$700",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Ljava/lang/Object;"
          },
          {
            "nme": "access$800",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)I"
          },
          {
            "nme": "access$900",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Ljava/lang/Object;"
          },
          {
            "nme": "access$1000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$1100",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "EMPTY_BUFFER",
            "dsc": "Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "engine",
            "dsc": "Lorg/conscrypt/ConscryptEngine;"
          },
          {
            "acc": 18,
            "nme": "stateLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 18,
            "nme": "handshakeLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 2,
            "nme": "out",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket$SSLOutputStream;"
          },
          {
            "acc": 2,
            "nme": "in",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket$SSLInputStream;"
          },
          {
            "acc": 2,
            "nme": "bufferAllocator",
            "dsc": "Lorg/conscrypt/BufferAllocator;"
          },
          {
            "acc": 2,
            "nme": "state",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/SSLParametersImpl$AliasChooser.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/SSLParametersImpl$AliasChooser",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "chooseClientAlias",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;[Ljavax/security/auth/x500/X500Principal;[Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "chooseServerAlias",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;Ljava/lang/String;)Ljava/lang/String;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeCrypto$SSLHandshakeCallbacks.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/NativeCrypto$SSLHandshakeCallbacks",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "verifyCertificateChain",
            "acc": 1025,
            "dsc": "([[BLjava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "clientCertificateRequested",
            "acc": 1025,
            "dsc": "([B[I[[B)V",
            "exs": [
              "java/security/cert/CertificateEncodingException",
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "serverCertificateRequested",
            "acc": 1025,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "clientPSKKeyRequested",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;[B[B)I"
          },
          {
            "nme": "serverPSKKeyRequested",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;[B)I"
          },
          {
            "nme": "onSSLStateChange",
            "acc": 1025,
            "dsc": "(II)V"
          },
          {
            "nme": "onNewSessionEstablished",
            "acc": 1025,
            "dsc": "(J)V"
          },
          {
            "nme": "serverSessionRequested",
            "acc": 1025,
            "dsc": "([B)J"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1025,
            "dsc": "([B)I"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OAEPParameters.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OAEPParameters",
        "super": "java/security/AlgorithmParametersSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([BLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readHash",
            "acc": 8,
            "dsc": "(J)Ljava/lang/String;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readMgfHash",
            "acc": 8,
            "dsc": "(J)Ljava/lang/String;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getHashName",
            "acc": 10,
            "dsc": "(J)Ljava/lang/String;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;",
            "sig": "<T::Ljava/security/spec/AlgorithmParameterSpec;>(Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writeHashAndMgfHash",
            "acc": 8,
            "dsc": "(JLjava/lang/String;Ljava/security/spec/MGF1ParameterSpec;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writeAlgorithmIdentifier",
            "acc": 10,
            "dsc": "(JLjava/lang/String;)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineToString",
            "acc": 4,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "OID_TO_NAME",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
          },
          {
            "acc": 26,
            "nme": "NAME_TO_OID",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
          },
          {
            "acc": 26,
            "nme": "MGF1_OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.2.840.113549.1.1.8"
          },
          {
            "acc": 26,
            "nme": "PSPECIFIED_OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.2.840.113549.1.1.9"
          },
          {
            "acc": 2,
            "nme": "spec",
            "dsc": "Ljavax/crypto/spec/OAEPParameterSpec;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/BufferUtils.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/BufferUtils",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "checkNotNull",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "remaining",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;)J"
          },
          {
            "nme": "consume",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;I)V"
          },
          {
            "nme": "getBufferLargerThan",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "copyNoConsume",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/SSLNullSession$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/SSLNullSession$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/ConscryptHostnameVerifier.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/ConscryptHostnameVerifier",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "verify",
            "acc": 1025,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ByteArray.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ByteArray",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "([B)V"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "bytes",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "hashCode",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/Serialization.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/Serialization",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "readDEROctetString",
            "acc": 9,
            "dsc": "([B)[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readDEROctetString",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readList",
            "acc": 9,
            "dsc": "([BII)[[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readList",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;II)[[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readVariableBytes",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;I)[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readFixedBytes",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;I)[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readNumber",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;I)I",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readLong",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;I)J",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "readByte",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "writeVariableBytes",
            "acc": 9,
            "dsc": "(Ljava/io/OutputStream;[BI)V",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "writeFixedBytes",
            "acc": 9,
            "dsc": "(Ljava/io/OutputStream;[B)V",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "writeNumber",
            "acc": 9,
            "dsc": "(Ljava/io/OutputStream;JI)V",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "DER_TAG_MASK",
            "dsc": "I",
            "val": 63
          },
          {
            "acc": 26,
            "nme": "DER_TAG_OCTET_STRING",
            "dsc": "I",
            "val": 4
          },
          {
            "acc": 26,
            "nme": "DER_LENGTH_LONG_FORM_FLAG",
            "dsc": "I",
            "val": 128
          }
        ]
      },
      "org/conscrypt/Conscrypt.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/Conscrypt",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "isAvailable",
            "acc": 9,
            "dsc": "()Z"
          },
          {
            "nme": "version",
            "acc": 9,
            "dsc": "()Lorg/conscrypt/Conscrypt$Version;"
          },
          {
            "nme": "checkAvailability",
            "acc": 9,
            "dsc": "()V"
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljava/security/Provider;)Z"
          },
          {
            "nme": "newProvider",
            "acc": 9,
            "dsc": "()Ljava/security/Provider;"
          },
          {
            "nme": "newProvider",
            "acc": 131081,
            "dsc": "(Ljava/lang/String;)Ljava/security/Provider;",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "newProviderBuilder",
            "acc": 9,
            "dsc": "()Lorg/conscrypt/Conscrypt$ProviderBuilder;"
          },
          {
            "nme": "maxEncryptedPacketLength",
            "acc": 9,
            "dsc": "()I"
          },
          {
            "nme": "getDefaultX509TrustManager",
            "acc": 9,
            "dsc": "()Ljavax/net/ssl/X509TrustManager;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLContext;)Z"
          },
          {
            "nme": "newPreferredSSLContextSpi",
            "acc": 9,
            "dsc": "()Ljavax/net/ssl/SSLContextSpi;"
          },
          {
            "nme": "setClientSessionCache",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLContext;Lorg/conscrypt/SSLClientSessionCache;)V"
          },
          {
            "nme": "setServerSessionCache",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLContext;Lorg/conscrypt/SSLServerSessionCache;)V"
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocketFactory;)Z"
          },
          {
            "nme": "toConscrypt",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLSocketFactory;)Lorg/conscrypt/OpenSSLSocketFactoryImpl;"
          },
          {
            "nme": "setUseEngineSocketByDefault",
            "acc": 9,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseEngineSocket",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocketFactory;Z)V"
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLServerSocketFactory;)Z"
          },
          {
            "nme": "toConscrypt",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLServerSocketFactory;)Lorg/conscrypt/OpenSSLServerSocketFactoryImpl;"
          },
          {
            "nme": "setUseEngineSocket",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLServerSocketFactory;Z)V"
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Z"
          },
          {
            "nme": "toConscrypt",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Lorg/conscrypt/AbstractConscryptSocket;"
          },
          {
            "nme": "setHostname",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;)V"
          },
          {
            "nme": "getHostname",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Z)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)[Ljava/lang/String;"
          },
          {
            "nme": "getTlsUnique",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Z"
          },
          {
            "nme": "toConscrypt",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Lorg/conscrypt/AbstractConscryptEngine;"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "setDefaultBufferAllocator",
            "acc": 9,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "setHostname",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/lang/String;)V"
          },
          {
            "nme": "getHostname",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "maxSealOverhead",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)I"
          },
          {
            "nme": "setHandshakeListener",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Lorg/conscrypt/HandshakeListener;)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "unwrap",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;[Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;[Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Z)V"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;[Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)[Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "getTlsUnique",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "isConscrypt",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/TrustManager;)Z"
          },
          {
            "nme": "toConscrypt",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/TrustManager;)Lorg/conscrypt/TrustManagerImpl;"
          },
          {
            "nme": "setDefaultHostnameVerifier",
            "acc": 41,
            "dsc": "(Lorg/conscrypt/ConscryptHostnameVerifier;)V"
          },
          {
            "nme": "getDefaultHostnameVerifier",
            "acc": 41,
            "dsc": "(Ljavax/net/ssl/TrustManager;)Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "setHostnameVerifier",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/TrustManager;Lorg/conscrypt/ConscryptHostnameVerifier;)V"
          },
          {
            "nme": "getHostnameVerifier",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/TrustManager;)Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "wrapHostnameVerifier",
            "acc": 9,
            "dsc": "(Ljavax/net/ssl/HostnameVerifier;)Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "VERSION",
            "dsc": "Lorg/conscrypt/Conscrypt$Version;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA1RSAPSS.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA1RSAPSS",
        "super": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES",
        "super": "org/conscrypt/OpenSSLEvpCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherName",
            "acc": 0,
            "dsc": "(ILorg/conscrypt/OpenSSLCipher$Mode;)Ljava/lang/String;"
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "AES_BLOCK_SIZE",
            "dsc": "I",
            "val": 16
          }
        ]
      },
      "org/conscrypt/EmptyArray.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EmptyArray",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "BOOLEAN",
            "dsc": "[Z"
          },
          {
            "acc": 24,
            "nme": "BYTE",
            "dsc": "[B"
          },
          {
            "acc": 24,
            "nme": "CHAR",
            "dsc": "[C"
          },
          {
            "acc": 24,
            "nme": "DOUBLE",
            "dsc": "[D"
          },
          {
            "acc": 24,
            "nme": "INT",
            "dsc": "[I"
          },
          {
            "acc": 24,
            "nme": "CLASS",
            "dsc": "[Ljava/lang/Class;",
            "sig": "[Ljava/lang/Class<*>;"
          },
          {
            "acc": 24,
            "nme": "OBJECT",
            "dsc": "[Ljava/lang/Object;"
          },
          {
            "acc": 24,
            "nme": "STRING",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "THROWABLE",
            "dsc": "[Ljava/lang/Throwable;"
          },
          {
            "acc": 24,
            "nme": "STACK_TRACE_ELEMENT",
            "dsc": "[Ljava/lang/StackTraceElement;"
          }
        ]
      },
      "org/conscrypt/FileClientSessionCache$Impl.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/FileClientSessionCache$Impl",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/io/File;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "newAccessOrder",
            "acc": 10,
            "dsc": "()Ljava/util/Map;",
            "sig": "()Ljava/util/Map<Ljava/lang/String;Ljava/io/File;>;"
          },
          {
            "nme": "fileName",
            "acc": 10,
            "dsc": "(Ljava/lang/String;I)Ljava/lang/String;"
          },
          {
            "nme": "getSessionData",
            "acc": 33,
            "dsc": "(Ljava/lang/String;I)[B"
          },
          {
            "nme": "logReadError",
            "acc": 8,
            "dsc": "(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V"
          },
          {
            "nme": "putSessionData",
            "acc": 33,
            "dsc": "(Ljavax/net/ssl/SSLSession;[B)V"
          },
          {
            "nme": "makeRoom",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "indexFiles",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "delete",
            "acc": 2,
            "dsc": "(Ljava/io/File;)V"
          },
          {
            "nme": "logWriteError",
            "acc": 8,
            "dsc": "(Ljava/lang/String;Ljava/io/File;Ljava/lang/Throwable;)V"
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "directory",
            "dsc": "Ljava/io/File;"
          },
          {
            "acc": 0,
            "nme": "accessOrder",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/io/File;>;"
          },
          {
            "acc": 0,
            "nme": "size",
            "dsc": "I"
          },
          {
            "acc": 0,
            "nme": "initialFiles",
            "dsc": "[Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/NativeLibraryLoader.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeLibraryLoader",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getWorkDir",
            "acc": 10,
            "dsc": "()Ljava/io/File;"
          },
          {
            "nme": "loadFirstAvailable",
            "acc": 136,
            "dsc": "(Ljava/lang/ClassLoader;Ljava/util/List;[Ljava/lang/String;)Z",
            "sig": "(Ljava/lang/ClassLoader;Ljava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;[Ljava/lang/String;)Z"
          },
          {
            "nme": "load",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/List;)Z",
            "sig": "(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;)Z"
          },
          {
            "nme": "loadFromWorkdir",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/List;)Z",
            "sig": "(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;)Z"
          },
          {
            "nme": "copyLibrary",
            "acc": 10,
            "dsc": "(Ljava/net/URL;Ljava/io/File;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "loadLibrary",
            "acc": 10,
            "dsc": "(Ljava/lang/ClassLoader;Ljava/lang/String;ZLjava/util/List;)Z",
            "sig": "(Ljava/lang/ClassLoader;Ljava/lang/String;ZLjava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;)Z"
          },
          {
            "nme": "loadLibraryFromHelperClassloader",
            "acc": 10,
            "dsc": "(Ljava/lang/Class;Ljava/lang/String;Z)Lorg/conscrypt/NativeLibraryLoader$LoadResult;",
            "sig": "(Ljava/lang/Class<*>;Ljava/lang/String;Z)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "loadLibraryFromCurrentClassloader",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Z)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "tryToLoadClass",
            "acc": 10,
            "dsc": "(Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;",
            "sig": "(Ljava/lang/ClassLoader;Ljava/lang/Class<*>;)Ljava/lang/Class<*>;",
            "exs": [
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "classToByteArray",
            "acc": 10,
            "dsc": "(Ljava/lang/Class;)[B",
            "sig": "(Ljava/lang/Class<*>;)[B",
            "exs": [
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "closeQuietly",
            "acc": 10,
            "dsc": "(Ljava/io/Closeable;)V"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "log",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "log",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
          },
          {
            "nme": "log",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V"
          },
          {
            "nme": "debug",
            "acc": 10,
            "dsc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Throwable;)V"
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          },
          {
            "acc": 26,
            "nme": "WORK_DIR_PROPERTY_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "org.conscrypt.native.workdir"
          },
          {
            "acc": 26,
            "nme": "DELETE_LIB_PROPERTY_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "org.conscrypt.native.deleteLibAfterLoading"
          },
          {
            "acc": 26,
            "nme": "NATIVE_RESOURCE_HOME",
            "dsc": "Ljava/lang/String;",
            "val": "META-INF/native/"
          },
          {
            "acc": 26,
            "nme": "WORKDIR",
            "dsc": "Ljava/io/File;"
          },
          {
            "acc": 26,
            "nme": "DELETE_NATIVE_LIB_AFTER_LOADING",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/OkHostnameVerifier.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OkHostnameVerifier",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Z)V"
          },
          {
            "nme": "strictInstance",
            "acc": 9,
            "dsc": "()Lorg/conscrypt/OkHostnameVerifier;"
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z"
          },
          {
            "nme": "verifyAsIpAddress",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Z"
          },
          {
            "nme": "verifyIpAddress",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z"
          },
          {
            "nme": "verifyHostName",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z"
          },
          {
            "nme": "allSubjectAltNames",
            "acc": 9,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/util/List;",
            "sig": "(Ljava/security/cert/X509Certificate;)Ljava/util/List<Ljava/lang/String;>;"
          },
          {
            "nme": "getSubjectAltNames",
            "acc": 10,
            "dsc": "(Ljava/security/cert/X509Certificate;I)Ljava/util/List;",
            "sig": "(Ljava/security/cert/X509Certificate;I)Ljava/util/List<Ljava/lang/String;>;"
          },
          {
            "nme": "verifyHostName",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)Z"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 25,
            "nme": "INSTANCE",
            "dsc": "Lorg/conscrypt/OkHostnameVerifier;"
          },
          {
            "acc": 26,
            "nme": "VERIFY_AS_IP_ADDRESS",
            "dsc": "Ljava/util/regex/Pattern;"
          },
          {
            "acc": 26,
            "nme": "ALT_DNS_NAME",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 26,
            "nme": "ALT_IPA_NAME",
            "dsc": "I",
            "val": 7
          },
          {
            "acc": 18,
            "nme": "strictWildcardMode",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4120,
            "nme": "$SwitchMap$org$conscrypt$OpenSSLCipher$Mode",
            "dsc": "[I"
          },
          {
            "acc": 4120,
            "nme": "$SwitchMap$org$conscrypt$OpenSSLCipher$Padding",
            "dsc": "[I"
          }
        ]
      },
      "org/conscrypt/EvpMdRef$MD5.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$MD5",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "MD5"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.2.840.113549.2.5"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLSignature$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4120,
            "nme": "$SwitchMap$org$conscrypt$OpenSSLSignature$EngineType",
            "dsc": "[I"
          }
        ]
      },
      "org/conscrypt/ConscryptEngineSocket$3.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/ConscryptEngineSocket$3",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4120,
            "nme": "$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus",
            "dsc": "[I"
          },
          {
            "acc": 4120,
            "nme": "$SwitchMap$javax$net$ssl$SSLEngineResult$Status",
            "dsc": "[I"
          }
        ]
      },
      "org/conscrypt/NativeRef$EC_GROUP.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EC_GROUP",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/HostProperties$OperatingSystem.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/HostProperties$OperatingSystem",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "getFileComponent",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "AIX",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "HPUX",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "OS400",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "LINUX",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "OSX",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "FREEBSD",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "OPENBSD",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "NETBSD",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "SUNOS",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "WINDOWS",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 16409,
            "nme": "UNKNOWN",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/HostProperties$OperatingSystem;"
          }
        ]
      },
      "org/conscrypt/NativeSsl$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/NativeSsl$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/GCMParameters.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/GCMParameters",
        "super": "java/security/AlgorithmParametersSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(I[B)V"
          },
          {
            "nme": "getTLen",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getIV",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([BLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;",
            "sig": "<T::Ljava/security/spec/AlgorithmParameterSpec;>(Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineToString",
            "acc": 4,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "DEFAULT_TLEN",
            "dsc": "I",
            "val": 96
          },
          {
            "acc": 2,
            "nme": "tLen",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "iv",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/NativeSslSession$Impl.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeSslSession$Impl",
        "super": "org/conscrypt/NativeSslSession",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;Lorg/conscrypt/NativeRef$SSL_SESSION;Ljava/lang/String;I[Ljava/security/cert/X509Certificate;[B[B)V"
          },
          {
            "nme": "getId",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "getCreationTime",
            "acc": 2,
            "dsc": "()J"
          },
          {
            "nme": "isValid",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "isSingleUse",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "offerToResume",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSsl;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getCipherSuite",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getPeerOcspStapledResponse",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "toBytes",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "toSSLSession",
            "acc": 0,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;Lorg/conscrypt/NativeRef$SSL_SESSION;Ljava/lang/String;I[Ljava/security/cert/X509Certificate;[B[BLorg/conscrypt/NativeSslSession$1;)V"
          },
          {
            "nme": "access$300",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/NativeSslSession$Impl;)J"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "ref",
            "dsc": "Lorg/conscrypt/NativeRef$SSL_SESSION;"
          },
          {
            "acc": 18,
            "nme": "context",
            "dsc": "Lorg/conscrypt/AbstractSessionContext;"
          },
          {
            "acc": 18,
            "nme": "host",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "port",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "protocol",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "cipherSuite",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "peerCertificates",
            "dsc": "[Ljava/security/cert/X509Certificate;"
          },
          {
            "acc": 18,
            "nme": "peerOcspStapledResponse",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "peerSignedCertificateTimestamp",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/OpenSSLBIOSource.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLBIOSource",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "wrap",
            "acc": 8,
            "dsc": "(Ljava/nio/ByteBuffer;)Lorg/conscrypt/OpenSSLBIOSource;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLBIOInputStream;)V"
          },
          {
            "nme": "getContext",
            "acc": 0,
            "dsc": "()J"
          },
          {
            "nme": "release",
            "acc": 34,
            "dsc": "()V"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "source",
            "dsc": "Lorg/conscrypt/OpenSSLBIOInputStream;"
          }
        ]
      },
      "org/conscrypt/OpenSSLX509CertificateFactory$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLX509CertificateFactory$1",
        "super": "org/conscrypt/OpenSSLX509CertificateFactory$Parser",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLX509CertificateFactory;)V"
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7PemInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+Lorg/conscrypt/OpenSSLX509Certificate;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7DerInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+Lorg/conscrypt/OpenSSLX509Certificate;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 4161,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 4161,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertificateFactory;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipher$Mode.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/OpenSSLCipher$Mode",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "getNormalized",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "NONE",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "CBC",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "CTR",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "ECB",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "GCM",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "GCM_SIV",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 16409,
            "nme": "POLY1305",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/OpenSSLCipher$Mode;"
          }
        ]
      },
      "org/conscrypt/ConscryptFileDescriptorSocket$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptFileDescriptorSocket$2",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)V"
          },
          {
            "nme": "provideSession",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket;"
          }
        ]
      },
      "org/conscrypt/SSLNullSession.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/SSLNullSession",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getNullSession",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getStatusResponses",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherSuite",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCreationTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getId",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getLocalCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 1,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "getValueNames",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "invalidate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "isValid",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "putValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "removeValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 4161,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/SSLNullSession$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "INVALID_CIPHER",
            "dsc": "Ljava/lang/String;",
            "val": "SSL_NULL_WITH_NULL_NULL"
          },
          {
            "acc": 2,
            "nme": "creationTime",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "lastAccessedTime",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$HmacSHA1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacSHA1",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ConscryptEngine$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptEngine$2",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "provideSession",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptEngine;"
          }
        ]
      },
      "org/conscrypt/OpenSSLBIOSink.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLBIOSink",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "create",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/OpenSSLBIOSink;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/io/ByteArrayOutputStream;)V"
          },
          {
            "nme": "available",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "reset",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "skip",
            "acc": 0,
            "dsc": "(J)J"
          },
          {
            "nme": "getContext",
            "acc": 0,
            "dsc": "()J"
          },
          {
            "nme": "toByteArray",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "position",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "ctx",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "buffer",
            "dsc": "Ljava/io/ByteArrayOutputStream;"
          },
          {
            "acc": 2,
            "nme": "position",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV$AES_128.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV$AES_128",
        "super": "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/IvParameters$ChaCha20.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/IvParameters$ChaCha20",
        "super": "org/conscrypt/IvParameters",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/HandshakeListener.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/HandshakeListener",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "onHandshakeFinished",
            "acc": 1025,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/CTLogInfo.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/CTLogInfo",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "getID",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getPublicKey",
            "acc": 1,
            "dsc": "()Ljava/security/PublicKey;"
          },
          {
            "nme": "getDescription",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getUrl",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "verifySingleSCT",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/SignedCertificateTimestamp;Lorg/conscrypt/ct/CertificateEntry;)Lorg/conscrypt/ct/VerifiedSCT$Status;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "logId",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "publicKey",
            "dsc": "Ljava/security/PublicKey;"
          },
          {
            "acc": 18,
            "nme": "description",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "url",
            "dsc": "Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/NativeCryptoJni$ErrorComparator.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeCryptoJni$ErrorComparator",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "compare",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/NativeLibraryLoader$LoadResult;Lorg/conscrypt/NativeLibraryLoader$LoadResult;)I"
          },
          {
            "nme": "compare",
            "acc": 4161,
            "dsc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "INSTANCE",
            "dsc": "Lorg/conscrypt/NativeCryptoJni$ErrorComparator;"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES",
        "super": "org/conscrypt/OpenSSLAeadCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/security/AlgorithmParameters;)Ljava/security/spec/AlgorithmParameterSpec;",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineGetParameters",
            "acc": 4,
            "dsc": "()Ljava/security/AlgorithmParameters;"
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 0,
            "dsc": "(I)I"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "AES_BLOCK_SIZE",
            "dsc": "I",
            "val": 16
          }
        ]
      },
      "org/conscrypt/ct/CertificateEntry.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/CertificateEntry",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/ct/CertificateEntry$LogEntryType;[B[B)V"
          },
          {
            "nme": "createForPrecertificate",
            "acc": 9,
            "dsc": "([B[B)Lorg/conscrypt/ct/CertificateEntry;"
          },
          {
            "nme": "createForPrecertificate",
            "acc": 9,
            "dsc": "(Lorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/OpenSSLX509Certificate;)Lorg/conscrypt/ct/CertificateEntry;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "createForX509Certificate",
            "acc": 9,
            "dsc": "([B)Lorg/conscrypt/ct/CertificateEntry;"
          },
          {
            "nme": "createForX509Certificate",
            "acc": 9,
            "dsc": "(Ljava/security/cert/X509Certificate;)Lorg/conscrypt/ct/CertificateEntry;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getEntryType",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "nme": "getCertificate",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getIssuerKeyHash",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "encode",
            "acc": 1,
            "dsc": "(Ljava/io/OutputStream;)V",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "entryType",
            "dsc": "Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "acc": 18,
            "nme": "issuerKeyHash",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "certificate",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/NativeRef$EVP_CIPHER_CTX.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EVP_CIPHER_CTX",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/EvpMdRef$SHA224.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$SHA224",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "SHA-224"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "2.16.840.1.101.3.4.2.4"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$MD5RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$MD5RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/PSSParameters.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/PSSParameters",
        "super": "java/security/AlgorithmParametersSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([BLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;",
            "sig": "<T::Ljava/security/spec/AlgorithmParameterSpec;>(Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineToString",
            "acc": 4,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "spec",
            "dsc": "Ljava/security/spec/PSSParameterSpec;"
          }
        ]
      },
      "org/conscrypt/ct/CertificateEntry$LogEntryType.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/CertificateEntry$LogEntryType",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "X509_ENTRY",
            "dsc": "Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "acc": 16409,
            "nme": "PRECERT_ENTRY",
            "dsc": "Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/CertificateEntry$LogEntryType;"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV",
        "super": "org/conscrypt/OpenSSLAeadCipherAES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "allowsNonceReuse",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "checkSupportedTagLength",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "getEVP_AEAD",
            "acc": 0,
            "dsc": "(I)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ConscryptFileDescriptorSocket$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptFileDescriptorSocket$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)V"
          },
          {
            "nme": "provideSession",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherDESEDE$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLEvpCipherDESEDE$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4120,
            "nme": "$SwitchMap$org$conscrypt$OpenSSLCipher$Padding",
            "dsc": "[I"
          }
        ]
      },
      "org/conscrypt/ct/DigitallySigned.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/DigitallySigned",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;[B)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(II[B)V"
          },
          {
            "nme": "getHashAlgorithm",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "nme": "getSignatureAlgorithm",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "nme": "getSignature",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getAlgorithm",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "decode",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/ct/DigitallySigned;",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "decode",
            "acc": 9,
            "dsc": "([B)Lorg/conscrypt/ct/DigitallySigned;",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "hashAlgorithm",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 18,
            "nme": "signatureAlgorithm",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 18,
            "nme": "signature",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/Conscrypt$Version.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/Conscrypt$Version",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(III)V"
          },
          {
            "nme": "major",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "minor",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "patch",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(IIILorg/conscrypt/Conscrypt$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "major",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "minor",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "patch",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$HmacSHA256.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacSHA256",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeLibraryLoader$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/NativeLibraryLoader$2",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/ClassLoader;Ljava/lang/Class;[B)V"
          },
          {
            "nme": "run",
            "acc": 1,
            "dsc": "()Ljava/lang/Class;",
            "sig": "()Ljava/lang/Class<*>;"
          },
          {
            "nme": "run",
            "acc": 4161,
            "dsc": "()Ljava/lang/Object;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$loader",
            "dsc": "Ljava/lang/ClassLoader;"
          },
          {
            "acc": 4112,
            "nme": "val$helper",
            "dsc": "Ljava/lang/Class;"
          },
          {
            "acc": 4112,
            "nme": "val$classBinary",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/BufferAllocator.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/BufferAllocator",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "unpooled",
            "acc": 9,
            "dsc": "()Lorg/conscrypt/BufferAllocator;"
          },
          {
            "nme": "allocateDirectBuffer",
            "acc": 1025,
            "dsc": "(I)Lorg/conscrypt/AllocatedBuffer;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "UNPOOLED",
            "dsc": "Lorg/conscrypt/BufferAllocator;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException",
        "super": "java/lang/Exception",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/Exception;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;Ljava/lang/Exception;)V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 8390802697728301325
          }
        ]
      },
      "org/conscrypt/NativeSsl.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeSsl",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JLorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;Lorg/conscrypt/SSLParametersImpl$AliasChooser;Lorg/conscrypt/SSLParametersImpl$PSKCallbacks;)V"
          },
          {
            "nme": "newInstance",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;Lorg/conscrypt/SSLParametersImpl$AliasChooser;Lorg/conscrypt/SSLParametersImpl$PSKCallbacks;)Lorg/conscrypt/NativeSsl;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "newBio",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/NativeSsl$BioWrapper;"
          },
          {
            "nme": "offerToResumeSession",
            "acc": 0,
            "dsc": "(J)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getSessionId",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "getTime",
            "acc": 0,
            "dsc": "()J"
          },
          {
            "nme": "getTimeout",
            "acc": 0,
            "dsc": "()J"
          },
          {
            "nme": "setTimeout",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "getCipherSuite",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 0,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 0,
            "dsc": "()[Ljava/security/cert/X509Certificate;"
          },
          {
            "nme": "getPeerCertificateOcspData",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "getTlsUnique",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getPeerTlsSctData",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "clientPSKKeyRequested",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[B[B)I"
          },
          {
            "nme": "serverPSKKeyRequested",
            "acc": 0,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;[B)I"
          },
          {
            "nme": "chooseClientCertificate",
            "acc": 0,
            "dsc": "([B[I[[B)V",
            "exs": [
              "javax/net/ssl/SSLException",
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "setCertificate",
            "acc": 2,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateEncodingException",
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getVersion",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getTlsChannelId",
            "acc": 0,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "initialize",
            "acc": 0,
            "dsc": "(Ljava/lang/String;Lorg/conscrypt/OpenSSLKey;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "configureServerCertificate",
            "acc": 0,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "verifyWithSniMatchers",
            "acc": 2,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "javax/net/ssl/SSLHandshakeException"
            ]
          },
          {
            "nme": "getCipherKeyTypes",
            "acc": 2,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "doHandshake",
            "acc": 0,
            "dsc": "(Ljava/io/FileDescriptor;I)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/io/IOException"
            ]
          },
          {
            "nme": "doHandshake",
            "acc": 0,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 0,
            "dsc": "(Ljava/io/FileDescriptor;[BIII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "write",
            "acc": 0,
            "dsc": "(Ljava/io/FileDescriptor;[BIII)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "enablePSKKeyManagerIfRequested",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setTlsChannelId",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setCertificateValidation",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "interrupt",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "shutdown",
            "acc": 0,
            "dsc": "(Ljava/io/FileDescriptor;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "shutdown",
            "acc": 0,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "wasShutdownReceived",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "wasShutdownSent",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "readDirectByteBuffer",
            "acc": 0,
            "dsc": "(JI)I",
            "exs": [
              "java/io/IOException",
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "writeDirectByteBuffer",
            "acc": 0,
            "dsc": "(JI)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "forceRead",
            "acc": 0,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getPendingReadableBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getMaxSealOverhead",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "close",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "isClosed",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "getError",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "isClient",
            "acc": 2,
            "dsc": "()Z"
          },
          {
            "nme": "finalize",
            "acc": 20,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "access$200",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/NativeSsl;)Ljava/util/concurrent/locks/ReadWriteLock;"
          },
          {
            "nme": "access$300",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/NativeSsl;)Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "parameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 18,
            "nme": "handshakeCallbacks",
            "dsc": "Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;"
          },
          {
            "acc": 18,
            "nme": "aliasChooser",
            "dsc": "Lorg/conscrypt/SSLParametersImpl$AliasChooser;"
          },
          {
            "acc": 18,
            "nme": "pskCallbacks",
            "dsc": "Lorg/conscrypt/SSLParametersImpl$PSKCallbacks;"
          },
          {
            "acc": 2,
            "nme": "localCertificates",
            "dsc": "[Ljava/security/cert/X509Certificate;"
          },
          {
            "acc": 18,
            "nme": "lock",
            "dsc": "Ljava/util/concurrent/locks/ReadWriteLock;"
          },
          {
            "acc": 66,
            "nme": "ssl",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$DirectRSA.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLCipherRSA$DirectRSA",
        "super": "org/conscrypt/OpenSSLCipherRSA",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(I)V"
          },
          {
            "nme": "doCryptoOperation",
            "acc": 0,
            "dsc": "([B[B)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "javax/crypto/IllegalBlockSizeException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/SSLNullSession$DefaultHolder.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/SSLNullSession$DefaultHolder",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "NULL_SESSION",
            "dsc": "Lorg/conscrypt/SSLNullSession;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/VerifiedSCT.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/ct/VerifiedSCT",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/SignedCertificateTimestamp;Lorg/conscrypt/ct/VerifiedSCT$Status;)V"
          }
        ],
        "flds": [
          {
            "acc": 17,
            "nme": "sct",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp;"
          },
          {
            "acc": 17,
            "nme": "status",
            "dsc": "Lorg/conscrypt/ct/VerifiedSCT$Status;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMac$HmacSHA384.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacSHA384",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLMac$HmacSHA512.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacSHA512",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherARC4.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherARC4",
        "super": "org/conscrypt/OpenSSLEvpCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherName",
            "acc": 0,
            "dsc": "(ILorg/conscrypt/OpenSSLCipher$Mode;)Ljava/lang/String;"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "supportsVariableSizeKey",
            "acc": 0,
            "dsc": "()Z"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLSignature",
        "super": "java/security/SignatureSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JLorg/conscrypt/OpenSSLSignature$EngineType;)V"
          },
          {
            "nme": "resetContext",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "configureEVP_PKEY_CTX",
            "acc": 4,
            "dsc": "(J)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(B)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "engineGetParameter",
            "acc": 131076,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;",
            "exs": [
              "java/security/InvalidParameterException"
            ],
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "checkEngineType",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "initInternal",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;Z)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitSign",
            "acc": 4,
            "dsc": "(Ljava/security/PrivateKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitVerify",
            "acc": 4,
            "dsc": "(Ljava/security/PublicKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineSetParameter",
            "acc": 131076,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V",
            "exs": [
              "java/security/InvalidParameterException"
            ],
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "engineSign",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "engineVerify",
            "acc": 4,
            "dsc": "([B)Z",
            "exs": [
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "getEVP_PKEY_CTX",
            "acc": 20,
            "dsc": "()J"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(JLorg/conscrypt/OpenSSLSignature$EngineType;Lorg/conscrypt/OpenSSLSignature$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "ctx",
            "dsc": "Lorg/conscrypt/NativeRef$EVP_MD_CTX;"
          },
          {
            "acc": 2,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 18,
            "nme": "engineType",
            "dsc": "Lorg/conscrypt/OpenSSLSignature$EngineType;"
          },
          {
            "acc": 18,
            "nme": "evpMdRef",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "singleByte",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "signing",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "evpPkeyCtx",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/SSLUtils$EngineStates.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/SSLUtils$EngineStates",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "STATE_NEW",
            "dsc": "I",
            "val": 0
          },
          {
            "acc": 24,
            "nme": "STATE_MODE_SET",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "STATE_HANDSHAKE_STARTED",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "STATE_HANDSHAKE_COMPLETED",
            "dsc": "I",
            "val": 3
          },
          {
            "acc": 24,
            "nme": "STATE_READY_HANDSHAKE_CUT_THROUGH",
            "dsc": "I",
            "val": 4
          },
          {
            "acc": 24,
            "nme": "STATE_READY",
            "dsc": "I",
            "val": 5
          },
          {
            "acc": 24,
            "nme": "STATE_CLOSED_INBOUND",
            "dsc": "I",
            "val": 6
          },
          {
            "acc": 24,
            "nme": "STATE_CLOSED_OUTBOUND",
            "dsc": "I",
            "val": 7
          },
          {
            "acc": 24,
            "nme": "STATE_CLOSED",
            "dsc": "I",
            "val": 8
          }
        ]
      },
      "org/conscrypt/OpenSSLX509CRLEntry.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLX509CRLEntry",
        "super": "java/security/cert/X509CRLEntry",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "getCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "getExtensionValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)[B"
          },
          {
            "nme": "getNonCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "hasUnsupportedCriticalExtension",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CRLException"
            ]
          },
          {
            "nme": "getSerialNumber",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getRevocationDate",
            "acc": 1,
            "dsc": "()Ljava/util/Date;"
          },
          {
            "nme": "hasExtensions",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "mContext",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "revocationDate",
            "dsc": "Ljava/util/Date;"
          }
        ]
      },
      "org/conscrypt/PSKKeyManager.class": {
        "ver": 51,
        "acc": 132609,
        "nme": "org/conscrypt/PSKKeyManager",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "chooseServerKeyIdentityHint",
            "acc": 1025,
            "dsc": "(Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "chooseServerKeyIdentityHint",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientKeyIdentity",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientKeyIdentity",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "getKey",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljava/net/Socket;)Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "getKey",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljavax/crypto/SecretKey;"
          }
        ],
        "flds": [
          {
            "acc": 25,
            "nme": "MAX_IDENTITY_HINT_LENGTH_BYTES",
            "dsc": "I",
            "val": 128
          },
          {
            "acc": 25,
            "nme": "MAX_IDENTITY_LENGTH_BYTES",
            "dsc": "I",
            "val": 128
          },
          {
            "acc": 25,
            "nme": "MAX_KEY_LENGTH_BYTES",
            "dsc": "I",
            "val": 256
          }
        ],
        "vanns": [
          {
            "dsc": "Ljava/lang/Deprecated;"
          }
        ]
      },
      "org/conscrypt/NativeLibraryLoader$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/NativeLibraryLoader$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/Class;Ljava/lang/String;Z)V"
          },
          {
            "nme": "run",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "run",
            "acc": 4161,
            "dsc": "()Ljava/lang/Object;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$helper",
            "dsc": "Ljava/lang/Class;"
          },
          {
            "acc": 4112,
            "nme": "val$name",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 4112,
            "nme": "val$absolute",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA256.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA256",
        "super": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/DigitallySigned$SignatureAlgorithm.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/DigitallySigned$SignatureAlgorithm",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(I)Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "ANONYMOUS",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "RSA",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "DSA",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "ECDSA",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 10,
            "nme": "values",
            "dsc": "[Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/DigitallySigned$SignatureAlgorithm;"
          }
        ]
      },
      "org/conscrypt/ConscryptEngine.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ConscryptEngine",
        "super": "org/conscrypt/AbstractConscryptEngine",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/PeerInfoProvider;Lorg/conscrypt/SSLParametersImpl$AliasChooser;)V"
          },
          {
            "nme": "newSsl",
            "acc": 10,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;Lorg/conscrypt/SSLParametersImpl$AliasChooser;)Lorg/conscrypt/NativeSsl;"
          },
          {
            "nme": "setDefaultBufferAllocator",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "getDefaultBufferAllocator",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/BufferAllocator;"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "maxSealOverhead",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 0,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 0,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "setHandshakeListener",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/HandshakeListener;)V"
          },
          {
            "nme": "isHandshakeStarted",
            "acc": 2,
            "dsc": "()Z"
          },
          {
            "nme": "setHostname",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "beginHandshake",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "beginHandshakeInternal",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "closeInbound",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "closeOutbound",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "getDelegatedTask",
            "acc": 1,
            "dsc": "()Ljava/lang/Runnable;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getSSLParameters",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLParameters;"
          },
          {
            "nme": "setSSLParameters",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)V"
          },
          {
            "nme": "getHandshakeStatus",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"
          },
          {
            "nme": "getHandshakeStatusInternal",
            "acc": 2,
            "dsc": "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"
          },
          {
            "nme": "pendingOutboundEncryptedBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "pendingInboundCleartextBytes",
            "acc": 2,
            "dsc": "()I"
          },
          {
            "nme": "pendingStatus",
            "acc": 10,
            "dsc": "(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "handshakeSession",
            "acc": 0,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getSession",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "provideSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "provideHandshakeSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "provideAfterHandshakeSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getUseClientMode",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isInboundDone",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isOutboundDone",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseClientMode",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 0,
            "dsc": "([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 0,
            "dsc": "([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "calcDstsLength",
            "acc": 10,
            "dsc": "([Ljava/nio/ByteBuffer;II)I"
          },
          {
            "nme": "calcSrcsLength",
            "acc": 10,
            "dsc": "([Ljava/nio/ByteBuffer;II)J"
          },
          {
            "nme": "handshake",
            "acc": 2,
            "dsc": "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "finishHandshake",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "writePlaintextData",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)I",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "writePlaintextDataDirect",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writePlaintextDataHeap",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readPlaintextData",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readPlaintextDataDirect",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException",
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "readPlaintextDataHeap",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)I",
            "exs": [
              "java/io/IOException",
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "convertException",
            "acc": 2,
            "dsc": "(Ljava/lang/Throwable;)Ljavax/net/ssl/SSLException;"
          },
          {
            "nme": "writeEncryptedData",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)I",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "writeEncryptedDataDirect",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writeEncryptedDataHeap",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getOrCreateLazyDirectBuffer",
            "acc": 2,
            "dsc": "()Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "directByteBufferAddress",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)J"
          },
          {
            "nme": "readPendingBytesFromBIO",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "readEncryptedData",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)I",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "readEncryptedDataDirect",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;II)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readEncryptedDataHeap",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;I)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "mayFinishHandshake",
            "acc": 2,
            "dsc": "(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getHandshakeStatus",
            "acc": 2,
            "dsc": "(I)Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"
          },
          {
            "nme": "getEngineStatus",
            "acc": 2,
            "dsc": "()Ljavax/net/ssl/SSLEngineResult$Status;"
          },
          {
            "nme": "closeAll",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "freeIfDone",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "newSslExceptionWithMessage",
            "acc": 2,
            "dsc": "(Ljava/lang/String;)Ljavax/net/ssl/SSLException;"
          },
          {
            "nme": "newResult",
            "acc": 2,
            "dsc": "(IILjavax/net/ssl/SSLEngineResult$HandshakeStatus;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1,
            "dsc": "([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "clientPSKKeyRequested",
            "acc": 1,
            "dsc": "(Ljava/lang/String;[B[B)I"
          },
          {
            "nme": "serverPSKKeyRequested",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;[B)I"
          },
          {
            "nme": "onSSLStateChange",
            "acc": 1,
            "dsc": "(II)V"
          },
          {
            "nme": "serverCertificateRequested",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "onNewSessionEstablished",
            "acc": 1,
            "dsc": "(J)V"
          },
          {
            "nme": "serverSessionRequested",
            "acc": 1,
            "dsc": "([B)J"
          },
          {
            "nme": "verifyCertificateChain",
            "acc": 1,
            "dsc": "([[BLjava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "clientCertificateRequested",
            "acc": 1,
            "dsc": "([B[I[[B)V",
            "exs": [
              "java/security/cert/CertificateEncodingException",
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "sendSSLShutdown",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "closeAndFreeResources",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          },
          {
            "nme": "chooseServerAlias",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientAlias",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;[Ljavax/security/auth/x500/X500Principal;[Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "chooseServerPSKIdentityHint",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientPSKIdentity",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "getPSKKey",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 0,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelectorAdapter;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "([B)I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "singleSrcBuffer",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "resetSingleSrcBuffer",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "singleDstBuffer",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "resetSingleDstBuffer",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "clientSessionContext",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ClientSessionContext;"
          },
          {
            "nme": "sessionContext",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/AbstractSessionContext;"
          },
          {
            "nme": "transitionTo",
            "acc": 2,
            "dsc": "(I)V"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "NEED_UNWRAP_OK",
            "dsc": "Ljavax/net/ssl/SSLEngineResult;"
          },
          {
            "acc": 26,
            "nme": "NEED_UNWRAP_CLOSED",
            "dsc": "Ljavax/net/ssl/SSLEngineResult;"
          },
          {
            "acc": 26,
            "nme": "NEED_WRAP_OK",
            "dsc": "Ljavax/net/ssl/SSLEngineResult;"
          },
          {
            "acc": 26,
            "nme": "NEED_WRAP_CLOSED",
            "dsc": "Ljavax/net/ssl/SSLEngineResult;"
          },
          {
            "acc": 26,
            "nme": "CLOSED_NOT_HANDSHAKING",
            "dsc": "Ljavax/net/ssl/SSLEngineResult;"
          },
          {
            "acc": 10,
            "nme": "defaultBufferAllocator",
            "dsc": "Lorg/conscrypt/BufferAllocator;"
          },
          {
            "acc": 18,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 2,
            "nme": "bufferAllocator",
            "dsc": "Lorg/conscrypt/BufferAllocator;"
          },
          {
            "acc": 2,
            "nme": "lazyDirectBuffer",
            "dsc": "Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 2,
            "nme": "peerHostname",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "state",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "handshakeFinished",
            "dsc": "Z"
          },
          {
            "acc": 18,
            "nme": "ssl",
            "dsc": "Lorg/conscrypt/NativeSsl;"
          },
          {
            "acc": 18,
            "nme": "networkBio",
            "dsc": "Lorg/conscrypt/NativeSsl$BioWrapper;"
          },
          {
            "acc": 2,
            "nme": "activeSession",
            "dsc": "Lorg/conscrypt/ActiveSession;"
          },
          {
            "acc": 2,
            "nme": "closedSession",
            "dsc": "Lorg/conscrypt/SessionSnapshot;"
          },
          {
            "acc": 18,
            "nme": "externalSession",
            "dsc": "Ljavax/net/ssl/SSLSession;"
          },
          {
            "acc": 2,
            "nme": "channelIdPrivateKey",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 2,
            "nme": "maxSealOverhead",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "handshakeListener",
            "dsc": "Lorg/conscrypt/HandshakeListener;"
          },
          {
            "acc": 18,
            "nme": "singleSrcBuffer",
            "dsc": "[Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "singleDstBuffer",
            "dsc": "[Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "peerInfoProvider",
            "dsc": "Lorg/conscrypt/PeerInfoProvider;"
          }
        ]
      },
      "org/conscrypt/ConscryptFileDescriptorSocket.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptFileDescriptorSocket",
        "super": "org/conscrypt/OpenSSLSocketImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "newSsl",
            "acc": 10,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptFileDescriptorSocket;)Lorg/conscrypt/NativeSsl;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "startHandshake",
            "acc": 17,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "clientCertificateRequested",
            "acc": 17,
            "dsc": "([B[I[[B)V",
            "exs": [
              "java/security/cert/CertificateEncodingException",
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "clientPSKKeyRequested",
            "acc": 17,
            "dsc": "(Ljava/lang/String;[B[B)I"
          },
          {
            "nme": "serverPSKKeyRequested",
            "acc": 17,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;[B)I"
          },
          {
            "nme": "onSSLStateChange",
            "acc": 17,
            "dsc": "(II)V"
          },
          {
            "nme": "onNewSessionEstablished",
            "acc": 17,
            "dsc": "(J)V"
          },
          {
            "nme": "serverSessionRequested",
            "acc": 17,
            "dsc": "([B)J"
          },
          {
            "nme": "serverCertificateRequested",
            "acc": 17,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "verifyCertificateChain",
            "acc": 17,
            "dsc": "([[BLjava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getInputStream",
            "acc": 17,
            "dsc": "()Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getOutputStream",
            "acc": 17,
            "dsc": "()Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "assertReadableOrWriteableState",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "waitForHandshake",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getSession",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "provideSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "provideAfterHandshakeSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "provideHandshakeSession",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "getActiveSession",
            "acc": 16,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getHandshakeSession",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 17,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 17,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "setHostname",
            "acc": 17,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 17,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 17,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getUseClientMode",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setUseClientMode",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 17,
            "dsc": "(Z)V"
          },
          {
            "nme": "setSoWriteTimeout",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoWriteTimeout",
            "acc": 17,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setHandshakeTimeout",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "close",
            "acc": 17,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "shutdownAndFreeSslNative",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "closeUnderlyingSocket",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "free",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "finalize",
            "acc": 20,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 17,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 16,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelectorAdapter;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "([B)I"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 16,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 16,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSSLParameters",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLParameters;"
          },
          {
            "nme": "setSSLParameters",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)V"
          },
          {
            "nme": "chooseServerPSKIdentityHint",
            "acc": 17,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientPSKIdentity",
            "acc": 17,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "getPSKKey",
            "acc": 17,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "chooseServerAlias",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientAlias",
            "acc": 17,
            "dsc": "(Ljavax/net/ssl/X509KeyManager;[Ljavax/security/auth/x500/X500Principal;[Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "clientSessionContext",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ClientSessionContext;"
          },
          {
            "nme": "sessionContext",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/AbstractSessionContext;"
          },
          {
            "nme": "transitionTo",
            "acc": 2,
            "dsc": "(I)V"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)Lorg/conscrypt/ConscryptSession;"
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)Lorg/conscrypt/NativeSsl;"
          },
          {
            "nme": "access$200",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)I"
          },
          {
            "nme": "access$300",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)I"
          },
          {
            "nme": "access$400",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "DBG_STATE",
            "dsc": "Z",
            "val": 0
          },
          {
            "acc": 2,
            "nme": "state",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "ssl",
            "dsc": "Lorg/conscrypt/NativeSsl;"
          },
          {
            "acc": 2,
            "nme": "is",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket$SSLInputStream;"
          },
          {
            "acc": 2,
            "nme": "os",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket$SSLOutputStream;"
          },
          {
            "acc": 18,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 18,
            "nme": "guard",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 2,
            "nme": "channelIdPrivateKey",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 18,
            "nme": "activeSession",
            "dsc": "Lorg/conscrypt/ActiveSession;"
          },
          {
            "acc": 2,
            "nme": "closedSession",
            "dsc": "Lorg/conscrypt/SessionSnapshot;"
          },
          {
            "acc": 18,
            "nme": "externalSession",
            "dsc": "Ljavax/net/ssl/SSLSession;"
          },
          {
            "acc": 2,
            "nme": "writeTimeoutMilliseconds",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "handshakeTimeoutMilliseconds",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipher$Padding.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/OpenSSLCipher$Padding",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "getNormalized",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "NOPADDING",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "acc": 16409,
            "nme": "PKCS5PADDING",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "acc": 16409,
            "nme": "PKCS7PADDING",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/OpenSSLCipher$Padding;"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$ChaCha20.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$ChaCha20",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkKeySize",
            "acc": 4,
            "dsc": "(I)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ExperimentalApi.class": {
        "ver": 51,
        "acc": 9729,
        "nme": "org/conscrypt/ExperimentalApi",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "value",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [],
        "vanns": [
          {
            "dsc": "Ljava/lang/annotation/Retention;",
            "vals": [
              "value",
              [
                "Ljava/lang/annotation/RetentionPolicy;",
                "SOURCE"
              ]
            ]
          },
          {
            "dsc": "Ljava/lang/annotation/Target;",
            "vals": [
              "value",
              [
                [
                  "Ljava/lang/annotation/ElementType;",
                  "ANNOTATION_TYPE"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "CONSTRUCTOR"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "FIELD"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "METHOD"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "PACKAGE"
                ],
                [
                  "Ljava/lang/annotation/ElementType;",
                  "TYPE"
                ]
              ]
            ]
          },
          {
            "dsc": "Ljava/lang/annotation/Documented;"
          }
        ]
      },
      "org/conscrypt/OpenSSLRSAPrivateCrtKey.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLRSAPrivateCrtKey",
        "super": "org/conscrypt/OpenSSLRSAPrivateKey",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;[[B)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/security/spec/RSAPrivateCrtKeySpec;)V",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "init",
            "acc": 10,
            "dsc": "(Ljava/security/spec/RSAPrivateCrtKeySpec;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/RSAPrivateCrtKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "readParams",
            "acc": 32,
            "dsc": "([[B)V"
          },
          {
            "nme": "getPublicExponent",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPrimeP",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPrimeQ",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPrimeExponentP",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPrimeExponentQ",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getCrtCoefficient",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "readObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectInputStream;)V",
            "exs": [
              "java/io/IOException",
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "writeObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 3785291944868707197
          },
          {
            "acc": 2,
            "nme": "publicExponent",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "primeP",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "primeQ",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "primeExponentP",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "primeExponentQ",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "crtCoefficient",
            "dsc": "Ljava/math/BigInteger;"
          }
        ]
      },
      "org/conscrypt/OpenSSLECPointContext.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLECPointContext",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLECGroupContext;Lorg/conscrypt/NativeRef$EC_POINT;)V"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "getECPoint",
            "acc": 0,
            "dsc": "()Ljava/security/spec/ECPoint;"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getNativeRef",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/NativeRef$EC_POINT;"
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/OpenSSLECGroupContext;Ljava/security/spec/ECPoint;)Lorg/conscrypt/OpenSSLECPointContext;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "group",
            "dsc": "Lorg/conscrypt/OpenSSLECGroupContext;"
          },
          {
            "acc": 18,
            "nme": "pointCtx",
            "dsc": "Lorg/conscrypt/NativeRef$EC_POINT;"
          }
        ]
      },
      "org/conscrypt/AbstractConscryptSocket.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/AbstractConscryptSocket",
        "super": "javax/net/ssl/SSLSocket",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZ)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "connect",
            "acc": 17,
            "dsc": "(Ljava/net/SocketAddress;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "connect",
            "acc": 17,
            "dsc": "(Ljava/net/SocketAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "bind",
            "acc": 1,
            "dsc": "(Ljava/net/SocketAddress;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "close",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getInetAddress",
            "acc": 1,
            "dsc": "()Ljava/net/InetAddress;"
          },
          {
            "nme": "getLocalAddress",
            "acc": 1,
            "dsc": "()Ljava/net/InetAddress;"
          },
          {
            "nme": "getLocalPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getRemoteSocketAddress",
            "acc": 1,
            "dsc": "()Ljava/net/SocketAddress;"
          },
          {
            "nme": "getLocalSocketAddress",
            "acc": 1,
            "dsc": "()Ljava/net/SocketAddress;"
          },
          {
            "nme": "getPort",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "addHandshakeCompletedListener",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/HandshakeCompletedListener;)V"
          },
          {
            "nme": "removeHandshakeCompletedListener",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/HandshakeCompletedListener;)V"
          },
          {
            "nme": "getFileDescriptor$",
            "acc": 1,
            "dsc": "()Ljava/io/FileDescriptor;"
          },
          {
            "nme": "setSoTimeout",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoTimeout",
            "acc": 17,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "sendUrgentData",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setOOBInline",
            "acc": 17,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getOOBInline",
            "acc": 1,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getChannel",
            "acc": 1,
            "dsc": "()Ljava/nio/channels/SocketChannel;"
          },
          {
            "nme": "getInputStream",
            "acc": 1,
            "dsc": "()Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getOutputStream",
            "acc": 1,
            "dsc": "()Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setTcpNoDelay",
            "acc": 1,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getTcpNoDelay",
            "acc": 1,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setSoLinger",
            "acc": 1,
            "dsc": "(ZI)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoLinger",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setSendBufferSize",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSendBufferSize",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setReceiveBufferSize",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getReceiveBufferSize",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setKeepAlive",
            "acc": 1,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getKeepAlive",
            "acc": 1,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setTrafficClass",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getTrafficClass",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setReuseAddress",
            "acc": 1,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getReuseAddress",
            "acc": 1,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "shutdownInput",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "shutdownOutput",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "isConnected",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isBound",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isClosed",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isInputShutdown",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isOutputShutdown",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setPerformancePreferences",
            "acc": 1,
            "dsc": "(III)V"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setHostname",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setSoWriteTimeout",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoWriteTimeout",
            "acc": 0,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setHandshakeTimeout",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "checkOpen",
            "acc": 16,
            "dsc": "()V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "peerInfoProvider",
            "acc": 16,
            "dsc": "()Lorg/conscrypt/PeerInfoProvider;"
          },
          {
            "nme": "getActiveSession",
            "acc": 1024,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelectorAdapter;)V"
          },
          {
            "nme": "notifyHandshakeCompletedListeners",
            "acc": 16,
            "dsc": "()V"
          },
          {
            "nme": "isDelegating",
            "acc": 2,
            "dsc": "()Z"
          },
          {
            "nme": "getHandshakeSession",
            "acc": 1025,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 1024,
            "dsc": "(Z)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 1024,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 1024,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 1024,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "getNpnSelectedProtocol",
            "acc": 131072,
            "dsc": "()[B",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setNpnProtocols",
            "acc": 131072,
            "dsc": "([B)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "getAlpnSelectedProtocol",
            "acc": 132096,
            "dsc": "()[B",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setAlpnProtocols",
            "acc": 132096,
            "dsc": "([Ljava/lang/String;)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setAlpnProtocols",
            "acc": 132096,
            "dsc": "([B)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 1024,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 1024,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 1024,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "socket",
            "dsc": "Ljava/net/Socket;"
          },
          {
            "acc": 18,
            "nme": "autoClose",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "peerHostname",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "peerPort",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "peerInfoProvider",
            "dsc": "Lorg/conscrypt/PeerInfoProvider;"
          },
          {
            "acc": 18,
            "nme": "listeners",
            "dsc": "Ljava/util/List;",
            "sig": "Ljava/util/List<Ljavax/net/ssl/HandshakeCompletedListener;>;"
          },
          {
            "acc": 2,
            "nme": "readTimeoutMilliseconds",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/ct/CTConstants.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/CTConstants",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 25,
            "nme": "X509_SCT_LIST_OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.6.1.4.1.11129.2.4.2"
          },
          {
            "acc": 25,
            "nme": "OCSP_SCT_LIST_OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.6.1.4.1.11129.2.4.5"
          },
          {
            "acc": 25,
            "nme": "VERSION_LENGTH",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 25,
            "nme": "LOGID_LENGTH",
            "dsc": "I",
            "val": 32
          },
          {
            "acc": 25,
            "nme": "TIMESTAMP_LENGTH",
            "dsc": "I",
            "val": 8
          },
          {
            "acc": 25,
            "nme": "EXTENSIONS_LENGTH_BYTES",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 25,
            "nme": "HASH_ALGORITHM_LENGTH",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 25,
            "nme": "SIGNATURE_ALGORITHM_LENGTH",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 25,
            "nme": "SIGNATURE_LENGTH_BYTES",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 25,
            "nme": "SIGNATURE_TYPE_LENGTH",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 25,
            "nme": "LOG_ENTRY_TYPE_LENGTH",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 25,
            "nme": "CERTIFICATE_LENGTH_BYTES",
            "dsc": "I",
            "val": 3
          },
          {
            "acc": 25,
            "nme": "SERIALIZED_SCT_LENGTH_BYTES",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 25,
            "nme": "SCT_LIST_LENGTH_BYTES",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 25,
            "nme": "ISSUER_KEY_HASH_LENGTH",
            "dsc": "I",
            "val": 32
          }
        ]
      },
      "org/conscrypt/OpenSSLX509CertificateFactory$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLX509CertificateFactory$2",
        "super": "org/conscrypt/OpenSSLX509CertificateFactory$Parser",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLX509CertificateFactory;)V"
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509CRL;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509CRL;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7PemInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+Lorg/conscrypt/OpenSSLX509CRL;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7DerInputStream",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+Lorg/conscrypt/OpenSSLX509CRL;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 4161,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 4161,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertificateFactory;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA224RSAPSS.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA224RSAPSS",
        "super": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/DefaultSSLContextImpl.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/DefaultSSLContextImpl",
        "super": "org/conscrypt/OpenSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "([Ljava/lang/String;)V",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          },
          {
            "nme": "getKeyManagers",
            "acc": 0,
            "dsc": "()[Ljavax/net/ssl/KeyManager;",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          },
          {
            "nme": "getTrustManagers",
            "acc": 0,
            "dsc": "()[Ljavax/net/ssl/TrustManager;",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 1,
            "dsc": "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "([Ljava/lang/String;Lorg/conscrypt/DefaultSSLContextImpl$1;)V",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 10,
            "nme": "KEY_MANAGERS",
            "dsc": "[Ljavax/net/ssl/KeyManager;"
          },
          {
            "acc": 10,
            "nme": "TRUST_MANAGERS",
            "dsc": "[Ljavax/net/ssl/TrustManager;"
          }
        ]
      },
      "org/conscrypt/IvParameters.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/IvParameters",
        "super": "java/security/AlgorithmParametersSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([BLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;",
            "sig": "<T::Ljava/security/spec/AlgorithmParameterSpec;>(Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineToString",
            "acc": 4,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "iv",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM",
        "super": "org/conscrypt/OpenSSLAeadCipherAES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getEVP_AEAD",
            "acc": 0,
            "dsc": "(I)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLECPublicKey.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLECPublicKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLECGroupContext;Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/security/spec/ECPublicKeySpec;)V",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/ECPublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getAlgorithm",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getFormat",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getParams",
            "acc": 1,
            "dsc": "()Ljava/security/spec/ECParameterSpec;"
          },
          {
            "nme": "getPublicKey",
            "acc": 2,
            "dsc": "()Ljava/security/spec/ECPoint;"
          },
          {
            "nme": "getW",
            "acc": 1,
            "dsc": "()Ljava/security/spec/ECPoint;"
          },
          {
            "nme": "getOpenSSLKey",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "readObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectInputStream;)V",
            "exs": [
              "java/io/IOException",
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "writeObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 3215842926808298020
          },
          {
            "acc": 26,
            "nme": "ALGORITHM",
            "dsc": "Ljava/lang/String;",
            "val": "EC"
          },
          {
            "acc": 132,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 132,
            "nme": "group",
            "dsc": "Lorg/conscrypt/OpenSSLECGroupContext;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$SHA256.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$SHA256",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLContextImpl$TLSv1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLContextImpl$TLSv1",
        "super": "org/conscrypt/OpenSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509CRL.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLX509CRL",
        "super": "java/security/cert/X509CRL",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(J)V",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "toDate",
            "acc": 8,
            "dsc": "(J)Ljava/util/Date;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509CRL;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7DerInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<Lorg/conscrypt/OpenSSLX509CRL;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509CRL;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7PemInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<Lorg/conscrypt/OpenSSLX509CRL;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "getCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "getExtensionValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)[B"
          },
          {
            "nme": "getNonCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "hasUnsupportedCriticalExtension",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CRLException"
            ]
          },
          {
            "nme": "verifyOpenSSL",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verifyInternal",
            "acc": 2,
            "dsc": "(Ljava/security/PublicKey;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CRLException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;)V",
            "exs": [
              "java/security/cert/CRLException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CRLException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "getVersion",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getIssuerDN",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getIssuerX500Principal",
            "acc": 1,
            "dsc": "()Ljavax/security/auth/x500/X500Principal;"
          },
          {
            "nme": "getThisUpdate",
            "acc": 1,
            "dsc": "()Ljava/util/Date;"
          },
          {
            "nme": "getNextUpdate",
            "acc": 1,
            "dsc": "()Ljava/util/Date;"
          },
          {
            "nme": "getRevokedCertificate",
            "acc": 1,
            "dsc": "(Ljava/math/BigInteger;)Ljava/security/cert/X509CRLEntry;"
          },
          {
            "nme": "getRevokedCertificate",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509CRLEntry;"
          },
          {
            "nme": "getRevokedCertificates",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<+Ljava/security/cert/X509CRLEntry;>;"
          },
          {
            "nme": "getTBSCertList",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CRLException"
            ]
          },
          {
            "nme": "getSignature",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSigAlgName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSigAlgOID",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSigAlgParams",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "isRevoked",
            "acc": 1,
            "dsc": "(Ljava/security/cert/Certificate;)Z"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "mContext",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "thisUpdate",
            "dsc": "Ljava/util/Date;"
          },
          {
            "acc": 18,
            "nme": "nextUpdate",
            "dsc": "Ljava/util/Date;"
          }
        ]
      },
      "org/conscrypt/ct/SignedCertificateTimestamp$Origin.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/SignedCertificateTimestamp$Origin",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "EMBEDDED",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "acc": 16409,
            "nme": "TLS_EXTENSION",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "acc": 16409,
            "nme": "OCSP_RESPONSE",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA512.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA512",
        "super": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLRSAKeyPairGenerator.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLRSAKeyPairGenerator",
        "super": "java/security/KeyPairGeneratorSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "generateKeyPair",
            "acc": 1,
            "dsc": "()Ljava/security/KeyPair;"
          },
          {
            "nme": "initialize",
            "acc": 1,
            "dsc": "(ILjava/security/SecureRandom;)V"
          },
          {
            "nme": "initialize",
            "acc": 1,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "publicExponent",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "modulusBits",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/Java8PlatformUtil.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Java8PlatformUtil",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getSniHostName",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)Ljava/lang/String;"
          },
          {
            "nme": "setSSLParameters",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "serverNamePermitted",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Ljava/lang/String;)Z"
          },
          {
            "nme": "wrapEngine",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "unwrapEngine",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "wrapSSLSession",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/ExternalSession;)Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128",
        "super": "org/conscrypt/OpenSSLEvpCipherAES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/SessionSnapshot.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/SessionSnapshot",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptSession;)V"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getStatusResponses",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getId",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getCreationTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "invalidate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "isValid",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "putValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "getValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "removeValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getValueNames",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 1,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getCipherSuite",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 4161,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "sessionContext",
            "dsc": "Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "acc": 18,
            "nme": "id",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "requestedServerName",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "statusResponses",
            "dsc": "Ljava/util/List;",
            "sig": "Ljava/util/List<[B>;"
          },
          {
            "acc": 18,
            "nme": "peerTlsSctData",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "creationTime",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "lastAccessedTime",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "cipherSuite",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "protocol",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "peerHost",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "applicationProtocol",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "peerPort",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLRandom.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLRandom",
        "super": "java/security/SecureRandomSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineSetSeed",
            "acc": 4,
            "dsc": "([B)V"
          },
          {
            "nme": "engineNextBytes",
            "acc": 4,
            "dsc": "([B)V"
          },
          {
            "nme": "engineGenerateSeed",
            "acc": 4,
            "dsc": "(I)[B"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 8506210602917522861
          }
        ]
      },
      "org/conscrypt/Preconditions.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Preconditions",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "checkNotNull",
            "acc": 8,
            "dsc": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;",
            "sig": "<T:Ljava/lang/Object;>(TT;Ljava/lang/String;)TT;"
          },
          {
            "nme": "checkArgument",
            "acc": 8,
            "dsc": "(ZLjava/lang/String;)V"
          },
          {
            "nme": "checkArgument",
            "acc": 8,
            "dsc": "(ZLjava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "checkPositionIndexes",
            "acc": 8,
            "dsc": "(III)V"
          },
          {
            "nme": "badPositionIndexes",
            "acc": 10,
            "dsc": "(III)Ljava/lang/String;"
          },
          {
            "nme": "badPositionIndex",
            "acc": 10,
            "dsc": "(IILjava/lang/String;)Ljava/lang/String;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC",
        "super": "org/conscrypt/OpenSSLEvpCipherDESEDE",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$SHA224RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA224RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ConscryptServerSocket.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ConscryptServerSocket",
        "super": "javax/net/ssl/SSLServerSocket",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(IILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(IILjava/net/InetAddress;Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setUseEngineSocket",
            "acc": 0,
            "dsc": "(Z)Lorg/conscrypt/ConscryptServerSocket;"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "isChannelIdEnabled",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseClientMode",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "getUseClientMode",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "accept",
            "acc": 1,
            "dsc": "()Ljava/net/Socket;",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 2,
            "nme": "channelIdEnabled",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "useEngineSocket",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV$AES_256.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV$AES_256",
        "super": "org/conscrypt/OpenSSLAeadCipherAES$GCM_SIV",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLCipherChaCha20.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLCipherChaCha20",
        "super": "org/conscrypt/OpenSSLCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInitInternal",
            "acc": 0,
            "dsc": "([BLjava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "updateInternal",
            "acc": 0,
            "dsc": "([BII[BII)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "doFinalInternal",
            "acc": 0,
            "dsc": "([BII)I",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException",
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "reset",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "getOutputSizeForUpdate",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "BLOCK_SIZE_BYTES",
            "dsc": "I",
            "val": 64
          },
          {
            "acc": 26,
            "nme": "NONCE_SIZE_BYTES",
            "dsc": "I",
            "val": 12
          },
          {
            "acc": 2,
            "nme": "currentBlockConsumedBytes",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "blockCounter",
            "dsc": "I"
          },
          {
            "acc": 4120,
            "nme": "$assertionsDisabled",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/ct/SignedCertificateTimestamp$SignatureType.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/SignedCertificateTimestamp$SignatureType",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/SignedCertificateTimestamp$SignatureType;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/SignedCertificateTimestamp$SignatureType;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "CERTIFICATE_TIMESTAMP",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$SignatureType;"
          },
          {
            "acc": 16409,
            "nme": "TREE_HASH",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$SignatureType;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/SignedCertificateTimestamp$SignatureType;"
          }
        ]
      },
      "org/conscrypt/SSLUtils.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/SSLUtils",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "decodeX509CertificateChain",
            "acc": 8,
            "dsc": "([[B)[Ljava/security/cert/X509Certificate;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getCertificateFactory",
            "acc": 10,
            "dsc": "()Ljava/security/cert/CertificateFactory;"
          },
          {
            "nme": "decodeX509Certificate",
            "acc": 10,
            "dsc": "(Ljava/security/cert/CertificateFactory;[B)Ljava/security/cert/X509Certificate;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getServerX509KeyType",
            "acc": 8,
            "dsc": "(J)Ljava/lang/String;"
          },
          {
            "nme": "getClientKeyType",
            "acc": 8,
            "dsc": "(B)Ljava/lang/String;"
          },
          {
            "nme": "getClientKeyTypeFromSignatureAlg",
            "acc": 8,
            "dsc": "(I)Ljava/lang/String;"
          },
          {
            "nme": "getSupportedClientKeyTypes",
            "acc": 8,
            "dsc": "([B[I)Ljava/util/Set;",
            "sig": "([B[I)Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "encodeSubjectX509Principals",
            "acc": 8,
            "dsc": "([Ljava/security/cert/X509Certificate;)[[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "toCertificateChain",
            "acc": 8,
            "dsc": "([Ljava/security/cert/X509Certificate;)[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "calculateOutNetBufSize",
            "acc": 8,
            "dsc": "(I)I"
          },
          {
            "nme": "toSSLHandshakeException",
            "acc": 8,
            "dsc": "(Ljava/lang/Throwable;)Ljavax/net/ssl/SSLHandshakeException;"
          },
          {
            "nme": "toSSLException",
            "acc": 8,
            "dsc": "(Ljava/lang/Throwable;)Ljavax/net/ssl/SSLException;"
          },
          {
            "nme": "toProtocolString",
            "acc": 8,
            "dsc": "([B)Ljava/lang/String;"
          },
          {
            "nme": "toProtocolBytes",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)[B"
          },
          {
            "nme": "decodeProtocols",
            "acc": 8,
            "dsc": "([B)[Ljava/lang/String;"
          },
          {
            "nme": "encodeProtocols",
            "acc": 8,
            "dsc": "([Ljava/lang/String;)[B"
          },
          {
            "nme": "getEncryptedPacketLength",
            "acc": 8,
            "dsc": "([Ljava/nio/ByteBuffer;I)I"
          },
          {
            "nme": "getEncryptedPacketLength",
            "acc": 10,
            "dsc": "(Ljava/nio/ByteBuffer;)I"
          },
          {
            "nme": "unsignedByte",
            "acc": 10,
            "dsc": "(B)S"
          },
          {
            "nme": "unsignedShort",
            "acc": 10,
            "dsc": "(S)I"
          },
          {
            "nme": "concat",
            "acc": 136,
            "dsc": "([[Ljava/lang/String;)[Ljava/lang/String;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "USE_ENGINE_SOCKET_BY_DEFAULT",
            "dsc": "Z"
          },
          {
            "acc": 26,
            "nme": "MAX_PROTOCOL_LENGTH",
            "dsc": "I",
            "val": 255
          },
          {
            "acc": 26,
            "nme": "US_ASCII",
            "dsc": "Ljava/nio/charset/Charset;"
          },
          {
            "acc": 26,
            "nme": "MAX_ENCRYPTION_OVERHEAD_LENGTH",
            "dsc": "I",
            "val": 86
          },
          {
            "acc": 26,
            "nme": "MAX_ENCRYPTION_OVERHEAD_DIFF",
            "dsc": "I",
            "val": 2147483561
          },
          {
            "acc": 26,
            "nme": "KEY_TYPE_RSA",
            "dsc": "Ljava/lang/String;",
            "val": "RSA"
          },
          {
            "acc": 26,
            "nme": "KEY_TYPE_EC",
            "dsc": "Ljava/lang/String;",
            "val": "EC"
          }
        ]
      },
      "org/conscrypt/CertPinManager.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/CertPinManager",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "checkChainPinning",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;Ljava/util/List;)V",
            "sig": "(Ljava/lang/String;Ljava/util/List<Ljava/security/cert/X509Certificate;>;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/IvParameters$DESEDE.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/IvParameters$DESEDE",
        "super": "org/conscrypt/IvParameters",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/EvpMdRef$SHA512.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$SHA512",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "SHA-512"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "2.16.840.1.101.3.4.2.3"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/Platform.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Platform",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "setup",
            "acc": 8,
            "dsc": "()V"
          },
          {
            "nme": "createTempFile",
            "acc": 8,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getDefaultProviderName",
            "acc": 8,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "provideTrustManagerByDefault",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "canExecuteExecutable",
            "acc": 8,
            "dsc": "(Ljava/io/File;)Z",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getFileDescriptor",
            "acc": 8,
            "dsc": "(Ljava/net/Socket;)Ljava/io/FileDescriptor;"
          },
          {
            "nme": "getFileDescriptorFromSSLSocket",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/AbstractConscryptSocket;)Ljava/io/FileDescriptor;"
          },
          {
            "nme": "getCurveName",
            "acc": 8,
            "dsc": "(Ljava/security/spec/ECParameterSpec;)Ljava/lang/String;"
          },
          {
            "nme": "setCurveName",
            "acc": 8,
            "dsc": "(Ljava/security/spec/ECParameterSpec;Ljava/lang/String;)V"
          },
          {
            "nme": "setSocketWriteTimeout",
            "acc": 8,
            "dsc": "(Ljava/net/Socket;J)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "setEndpointIdentificationAlgorithm",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Ljava/lang/String;)V"
          },
          {
            "nme": "getEndpointIdentificationAlgorithm",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)Ljava/lang/String;"
          },
          {
            "nme": "checkClientTrusted",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;[Ljava/security/cert/X509Certificate;Ljava/lang/String;Lorg/conscrypt/AbstractConscryptSocket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;[Ljava/security/cert/X509Certificate;Ljava/lang/String;Lorg/conscrypt/AbstractConscryptSocket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;[Ljava/security/cert/X509Certificate;Ljava/lang/String;Lorg/conscrypt/ConscryptEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;[Ljava/security/cert/X509Certificate;Ljava/lang/String;Lorg/conscrypt/ConscryptEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "wrapRsaKey",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;)Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "logEvent",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "isSniEnabledByDefault",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "wrapEngine",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "unwrapEngine",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createEngineSocket",
            "acc": 8,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptEngineSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createFileDescriptorSocket",
            "acc": 8,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/ConscryptFileDescriptorSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "wrapSocketFactoryIfNeeded",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/OpenSSLSocketFactoryImpl;)Ljavax/net/ssl/SSLSocketFactory;"
          },
          {
            "nme": "fromGCMParameterSpec",
            "acc": 8,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)Lorg/conscrypt/GCMParameters;"
          },
          {
            "nme": "fromGCMParameters",
            "acc": 8,
            "dsc": "(Ljava/security/AlgorithmParameters;)Ljava/security/spec/AlgorithmParameterSpec;"
          },
          {
            "nme": "toGCMParameterSpec",
            "acc": 8,
            "dsc": "(I[B)Ljava/security/spec/AlgorithmParameterSpec;"
          },
          {
            "nme": "closeGuardGet",
            "acc": 8,
            "dsc": "()Ljava/lang/Object;"
          },
          {
            "nme": "closeGuardOpen",
            "acc": 8,
            "dsc": "(Ljava/lang/Object;Ljava/lang/String;)V"
          },
          {
            "nme": "closeGuardClose",
            "acc": 8,
            "dsc": "(Ljava/lang/Object;)V"
          },
          {
            "nme": "closeGuardWarnIfOpen",
            "acc": 8,
            "dsc": "(Ljava/lang/Object;)V"
          },
          {
            "nme": "blockGuardOnNetwork",
            "acc": 8,
            "dsc": "()V"
          },
          {
            "nme": "oidToAlgorithmName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "wrapSSLSession",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/ExternalSession;)Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getOriginalHostNameFromInetAddress",
            "acc": 9,
            "dsc": "(Ljava/net/InetAddress;)Ljava/lang/String;"
          },
          {
            "nme": "getHostStringFromInetSocketAddress",
            "acc": 8,
            "dsc": "(Ljava/net/InetSocketAddress;)Ljava/lang/String;"
          },
          {
            "nme": "supportsX509ExtendedTrustManager",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "isCTVerificationRequired",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Z"
          },
          {
            "nme": "supportsConscryptCertStore",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "getDefaultCertKeyStore",
            "acc": 8,
            "dsc": "()Ljava/security/KeyStore;",
            "exs": [
              "java/security/KeyStoreException"
            ]
          },
          {
            "nme": "newDefaultCertStore",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/ConscryptCertStore;"
          },
          {
            "nme": "newDefaultBlocklist",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/CertBlocklist;"
          },
          {
            "nme": "newDefaultLogStore",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/ct/CTLogStore;"
          },
          {
            "nme": "newDefaultPolicy",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/ct/CTLogStore;)Lorg/conscrypt/ct/CTPolicy;"
          },
          {
            "nme": "serverNamePermitted",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;Ljava/lang/String;)Z"
          },
          {
            "nme": "isAndroid",
            "acc": 10,
            "dsc": "()Z"
          },
          {
            "nme": "javaVersion",
            "acc": 8,
            "dsc": "()I"
          },
          {
            "nme": "javaVersion0",
            "acc": 10,
            "dsc": "()I"
          },
          {
            "nme": "majorVersionFromJavaSpecificationVersion",
            "acc": 10,
            "dsc": "()I"
          },
          {
            "nme": "majorVersion",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)I"
          },
          {
            "nme": "getSystemClassLoader",
            "acc": 10,
            "dsc": "()Ljava/lang/ClassLoader;"
          },
          {
            "nme": "getDefaultHostnameVerifier",
            "acc": 9,
            "dsc": "()Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "JAVA_VERSION",
            "dsc": "I"
          },
          {
            "acc": 26,
            "nme": "GET_CURVE_NAME_METHOD",
            "dsc": "Ljava/lang/reflect/Method;"
          },
          {
            "acc": 4120,
            "nme": "$assertionsDisabled",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$SHA512.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$SHA512",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CTR.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CTR",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$SHA512ECDSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA512ECDSA",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/AllocatedBuffer$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/AllocatedBuffer$1",
        "super": "org/conscrypt/AllocatedBuffer",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "nioBuffer",
            "acc": 1,
            "dsc": "()Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "release",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/AllocatedBuffer;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$buffer",
            "dsc": "Ljava/nio/ByteBuffer;"
          }
        ]
      },
      "org/conscrypt/io/IoUtils.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/io/IoUtils",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "closeQuietly",
            "acc": 9,
            "dsc": "(Ljava/io/Closeable;)V"
          },
          {
            "nme": "closeQuietly",
            "acc": 9,
            "dsc": "(Ljava/net/Socket;)V"
          },
          {
            "nme": "throwInterruptedIoException",
            "acc": 9,
            "dsc": "()V",
            "exs": [
              "java/io/InterruptedIOException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/KeyGeneratorImpl$AES.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$AES",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkKeySize",
            "acc": 4,
            "dsc": "(I)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/CTPolicy.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/ct/CTPolicy",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "doesResultConformToPolicy",
            "acc": 1025,
            "dsc": "(Lorg/conscrypt/ct/CTVerificationResult;Ljava/lang/String;[Ljava/security/cert/X509Certificate;)Z"
          }
        ],
        "flds": []
      },
      "org/conscrypt/DuckTypedPSKKeyManager.class": {
        "ver": 51,
        "acc": 131120,
        "nme": "org/conscrypt/DuckTypedPSKKeyManager",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/Object;)V"
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/lang/Object;)Lorg/conscrypt/DuckTypedPSKKeyManager;",
            "exs": [
              "java/lang/NoSuchMethodException"
            ]
          },
          {
            "nme": "chooseServerKeyIdentityHint",
            "acc": 1,
            "dsc": "(Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "chooseServerKeyIdentityHint",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientKeyIdentity",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientKeyIdentity",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "getKey",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljava/net/Socket;)Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "getKey",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljavax/crypto/SecretKey;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "mDelegate",
            "dsc": "Ljava/lang/Object;"
          }
        ],
        "vanns": [
          {
            "dsc": "Ljava/lang/Deprecated;"
          }
        ]
      },
      "org/conscrypt/FileClientSessionCache.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/FileClientSessionCache",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "usingDirectory",
            "acc": 41,
            "dsc": "(Ljava/io/File;)Lorg/conscrypt/SSLClientSessionCache;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "reset",
            "acc": 40,
            "dsc": "()V"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "()Ljava/util/logging/Logger;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          },
          {
            "acc": 25,
            "nme": "MAX_SIZE",
            "dsc": "I",
            "val": 12
          },
          {
            "acc": 24,
            "nme": "caches",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/io/File;Lorg/conscrypt/FileClientSessionCache$Impl;>;"
          }
        ]
      },
      "org/conscrypt/NativeLibraryLoader$LoadResult.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeLibraryLoader$LoadResult",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "newSuccessResult",
            "acc": 10,
            "dsc": "(Ljava/lang/String;ZZ)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "newFailureResult",
            "acc": 10,
            "dsc": "(Ljava/lang/String;ZZLjava/lang/Throwable;)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;ZZZLjava/lang/Throwable;)V"
          },
          {
            "nme": "log",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "access$200",
            "acc": 4104,
            "dsc": "(Ljava/lang/String;ZZLjava/lang/Throwable;)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          },
          {
            "nme": "access$300",
            "acc": 4104,
            "dsc": "(Ljava/lang/String;ZZ)Lorg/conscrypt/NativeLibraryLoader$LoadResult;"
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "name",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 16,
            "nme": "absolute",
            "dsc": "Z"
          },
          {
            "acc": 16,
            "nme": "loaded",
            "dsc": "Z"
          },
          {
            "acc": 16,
            "nme": "usingHelperClassloader",
            "dsc": "Z"
          },
          {
            "acc": 16,
            "nme": "error",
            "dsc": "Ljava/lang/Throwable;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSocketFactoryImpl.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLSocketFactoryImpl",
        "super": "javax/net/ssl/SSLSocketFactory",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "setUseEngineSocketByDefault",
            "acc": 8,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseEngineSocket",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getDefaultCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "()Ljava/net/Socket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "(Ljava/lang/String;I)Ljava/net/Socket;",
            "exs": [
              "java/io/IOException",
              "java/net/UnknownHostException"
            ]
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;",
            "exs": [
              "java/io/IOException",
              "java/net/UnknownHostException"
            ]
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "(Ljava/net/InetAddress;I)Ljava/net/Socket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createSocket",
            "acc": 1,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "hasFileDescriptor",
            "acc": 2,
            "dsc": "(Ljava/net/Socket;)Z"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 10,
            "nme": "useEngineSocketByDefault",
            "dsc": "Z"
          },
          {
            "acc": 18,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 18,
            "nme": "instantiationException",
            "dsc": "Ljava/io/IOException;"
          },
          {
            "acc": 2,
            "nme": "useEngineSocket",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/Java7ExtendedSSLSession.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Java7ExtendedSSLSession",
        "super": "javax/net/ssl/ExtendedSSLSession",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ExternalSession;)V"
          },
          {
            "nme": "getLocalSupportedSignatureAlgorithms",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getPeerSupportedSignatureAlgorithms",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getStatusResponses",
            "acc": 17,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 17,
            "dsc": "()[B"
          },
          {
            "nme": "getId",
            "acc": 17,
            "dsc": "()[B"
          },
          {
            "nme": "getSessionContext",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getCreationTime",
            "acc": 17,
            "dsc": "()J"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 17,
            "dsc": "()J"
          },
          {
            "nme": "invalidate",
            "acc": 17,
            "dsc": "()V"
          },
          {
            "nme": "isValid",
            "acc": 17,
            "dsc": "()Z"
          },
          {
            "nme": "putValue",
            "acc": 17,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "getValue",
            "acc": 17,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "removeValue",
            "acc": 17,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getValueNames",
            "acc": 17,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 17,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 17,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 17,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 17,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getCipherSuite",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 4161,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "LOCAL_SUPPORTED_SIGNATURE_ALGORITHMS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 26,
            "nme": "PEER_SUPPORTED_SIGNATURE_ALGORITHMS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 20,
            "nme": "delegate",
            "dsc": "Lorg/conscrypt/ExternalSession;"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherChaCha20.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherChaCha20",
        "super": "org/conscrypt/OpenSSLAeadCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getEVP_AEAD",
            "acc": 0,
            "dsc": "(I)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 0,
            "dsc": "(I)I"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/DigitallySigned$HashAlgorithm.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/DigitallySigned$HashAlgorithm",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(I)Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "NONE",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "MD5",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "SHA1",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "SHA224",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "SHA256",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "SHA384",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 16409,
            "nme": "SHA512",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 10,
            "nme": "values",
            "dsc": "[Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/DigitallySigned$HashAlgorithm;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$SHA1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$SHA1",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeCrypto$Range.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/NativeCrypto$Range",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)V"
          }
        ],
        "flds": [
          {
            "acc": 17,
            "nme": "min",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 17,
            "nme": "max",
            "dsc": "Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/OpenSSLBIOInputStream.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLBIOInputStream",
        "super": "java/io/FilterInputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/io/InputStream;Z)V"
          },
          {
            "nme": "getBioContext",
            "acc": 0,
            "dsc": "()J"
          },
          {
            "nme": "release",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "gets",
            "acc": 0,
            "dsc": "([B)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([B)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "ctx",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA256ECDSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA256ECDSA",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ApplicationProtocolSelector.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/ApplicationProtocolSelector",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignatureRawECDSA.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLSignatureRawECDSA",
        "super": "java/security/SignatureSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(B)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineGetParameter",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;",
            "exs": [
              "java/security/InvalidParameterException"
            ]
          },
          {
            "nme": "verifyKey",
            "acc": 10,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitSign",
            "acc": 4,
            "dsc": "(Ljava/security/PrivateKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitVerify",
            "acc": 4,
            "dsc": "(Ljava/security/PublicKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineSetParameter",
            "acc": 4,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V",
            "exs": [
              "java/security/InvalidParameterException"
            ]
          },
          {
            "nme": "engineSign",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "engineVerify",
            "acc": 4,
            "dsc": "([B)Z",
            "exs": [
              "java/security/SignatureException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 2,
            "nme": "buffer",
            "dsc": "Ljava/io/ByteArrayOutputStream;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherDESEDE.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLEvpCipherDESEDE",
        "super": "org/conscrypt/OpenSSLEvpCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "getBaseCipherName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getCipherName",
            "acc": 0,
            "dsc": "(ILorg/conscrypt/OpenSSLCipher$Mode;)Ljava/lang/String;"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "checkSupportedMode",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 0,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "DES_BLOCK_SIZE",
            "dsc": "I",
            "val": 8
          }
        ]
      },
      "org/conscrypt/CertBlocklist.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/CertBlocklist",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "isPublicKeyBlockListed",
            "acc": 1025,
            "dsc": "(Ljava/security/PublicKey;)Z"
          },
          {
            "nme": "isSerialNumberBlockListed",
            "acc": 1025,
            "dsc": "(Ljava/math/BigInteger;)Z"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/DESEDESecretKeyFactory.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/DESEDESecretKeyFactory",
        "super": "javax/crypto/SecretKeyFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineGenerateSecret",
            "acc": 4,
            "dsc": "(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineGetKeySpec",
            "acc": 4,
            "dsc": "(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineTranslateKey",
            "acc": 4,
            "dsc": "(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ExternalSession$Provider.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/ExternalSession$Provider",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "provideSession",
            "acc": 1025,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/EvpMdRef$SHA256.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$SHA256",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "SHA-256"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "2.16.840.1.101.3.4.2.1"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/IvParameters$AES.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/IvParameters$AES",
        "super": "org/conscrypt/IvParameters",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/TrustManagerImpl.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/TrustManagerImpl",
        "super": "javax/net/ssl/X509ExtendedTrustManager",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;Lorg/conscrypt/CertPinManager;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;Lorg/conscrypt/CertPinManager;Lorg/conscrypt/ConscryptCertStore;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;Lorg/conscrypt/CertPinManager;Lorg/conscrypt/ConscryptCertStore;Lorg/conscrypt/CertBlocklist;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;Lorg/conscrypt/CertPinManager;Lorg/conscrypt/ConscryptCertStore;Lorg/conscrypt/CertBlocklist;Lorg/conscrypt/ct/CTLogStore;Lorg/conscrypt/ct/CTVerifier;Lorg/conscrypt/ct/CTPolicy;)V"
          },
          {
            "nme": "acceptedIssuers",
            "acc": 10,
            "dsc": "(Ljava/security/KeyStore;)[Ljava/security/cert/X509Certificate;"
          },
          {
            "nme": "trustAnchors",
            "acc": 10,
            "dsc": "([Ljava/security/cert/X509Certificate;)Ljava/util/Set;",
            "sig": "([Ljava/security/cert/X509Certificate;)Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;"
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getHandshakeSessionOrThrow",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLSocket;)Ljavax/net/ssl/SSLSession;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getTrustedChainForServer",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getTrustedChainForServer",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "handleTrustStorageUpdate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkTrusted",
            "acc": 2,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;Ljavax/net/ssl/SSLParameters;Z)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;Ljavax/net/ssl/SSLParameters;Z)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getOcspDataFromSession",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLSession;)[B"
          },
          {
            "nme": "getTlsSctDataFromSession",
            "acc": 2,
            "dsc": "(Ljavax/net/ssl/SSLSession;)[B"
          },
          {
            "nme": "checkTrusted",
            "acc": 2,
            "dsc": "([Ljava/security/cert/X509Certificate;[B[BLjava/lang/String;Ljava/lang/String;Z)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;[B[BLjava/lang/String;Ljava/lang/String;Z)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkTrustedRecursive",
            "acc": 2,
            "dsc": "([Ljava/security/cert/X509Certificate;[B[BLjava/lang/String;ZLjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/Set;)Ljava/util/List;",
            "sig": "([Ljava/security/cert/X509Certificate;[B[BLjava/lang/String;ZLjava/util/ArrayList<Ljava/security/cert/X509Certificate;>;Ljava/util/ArrayList<Ljava/security/cert/TrustAnchor;>;Ljava/util/Set<Ljava/security/cert/X509Certificate;>;)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "verifyChain",
            "acc": 2,
            "dsc": "(Ljava/util/List;Ljava/util/List;Ljava/lang/String;Z[B[B)Ljava/util/List;",
            "sig": "(Ljava/util/List<Ljava/security/cert/X509Certificate;>;Ljava/util/List<Ljava/security/cert/TrustAnchor;>;Ljava/lang/String;Z[B[B)Ljava/util/List<Ljava/security/cert/X509Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkBlocklist",
            "acc": 2,
            "dsc": "(Ljava/security/cert/X509Certificate;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkCT",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/util/List;[B[B)V",
            "sig": "(Ljava/lang/String;Ljava/util/List<Ljava/security/cert/X509Certificate;>;[B[B)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "setOcspResponses",
            "acc": 2,
            "dsc": "(Ljava/security/cert/PKIXParameters;Ljava/security/cert/X509Certificate;[B)V"
          },
          {
            "nme": "sortPotentialAnchors",
            "acc": 10,
            "dsc": "(Ljava/util/Set;)Ljava/util/Collection;",
            "sig": "(Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;)Ljava/util/Collection<Ljava/security/cert/TrustAnchor;>;"
          },
          {
            "nme": "findAllTrustAnchorsByIssuerAndSignature",
            "acc": 2,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set;",
            "sig": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;"
          },
          {
            "nme": "findTrustAnchorBySubjectAndPublicKey",
            "acc": 2,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/TrustAnchor;"
          },
          {
            "nme": "getAcceptedIssuers",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;"
          },
          {
            "nme": "setDefaultHostnameVerifier",
            "acc": 40,
            "dsc": "(Lorg/conscrypt/ConscryptHostnameVerifier;)V"
          },
          {
            "nme": "getDefaultHostnameVerifier",
            "acc": 40,
            "dsc": "()Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "setHostnameVerifier",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptHostnameVerifier;)V"
          },
          {
            "nme": "getHostnameVerifier",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "getHttpsVerifier",
            "acc": 2,
            "dsc": "()Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "nme": "setCTEnabledOverride",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setCTVerifier",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/CTVerifier;)V"
          },
          {
            "nme": "setCTPolicy",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/CTPolicy;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          },
          {
            "acc": 26,
            "nme": "TRUST_ANCHOR_COMPARATOR",
            "dsc": "Lorg/conscrypt/TrustManagerImpl$TrustAnchorComparator;"
          },
          {
            "acc": 10,
            "nme": "defaultHostnameVerifier",
            "dsc": "Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "acc": 18,
            "nme": "rootKeyStore",
            "dsc": "Ljava/security/KeyStore;"
          },
          {
            "acc": 2,
            "nme": "pinManager",
            "dsc": "Lorg/conscrypt/CertPinManager;"
          },
          {
            "acc": 18,
            "nme": "trustedCertificateStore",
            "dsc": "Lorg/conscrypt/ConscryptCertStore;"
          },
          {
            "acc": 18,
            "nme": "validator",
            "dsc": "Ljava/security/cert/CertPathValidator;"
          },
          {
            "acc": 18,
            "nme": "trustedCertificateIndex",
            "dsc": "Lorg/conscrypt/TrustedCertificateIndex;"
          },
          {
            "acc": 18,
            "nme": "intermediateIndex",
            "dsc": "Lorg/conscrypt/TrustedCertificateIndex;"
          },
          {
            "acc": 18,
            "nme": "acceptedIssuers",
            "dsc": "[Ljava/security/cert/X509Certificate;"
          },
          {
            "acc": 18,
            "nme": "err",
            "dsc": "Ljava/lang/Exception;"
          },
          {
            "acc": 18,
            "nme": "factory",
            "dsc": "Ljava/security/cert/CertificateFactory;"
          },
          {
            "acc": 18,
            "nme": "blocklist",
            "dsc": "Lorg/conscrypt/CertBlocklist;"
          },
          {
            "acc": 2,
            "nme": "ctVerifier",
            "dsc": "Lorg/conscrypt/ct/CTVerifier;"
          },
          {
            "acc": 2,
            "nme": "ctPolicy",
            "dsc": "Lorg/conscrypt/ct/CTPolicy;"
          },
          {
            "acc": 2,
            "nme": "hostnameVerifier",
            "dsc": "Lorg/conscrypt/ConscryptHostnameVerifier;"
          },
          {
            "acc": 2,
            "nme": "ctEnabledOverride",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/ct/SignedCertificateTimestamp.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/SignedCertificateTimestamp",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;[BJ[BLorg/conscrypt/ct/DigitallySigned;Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;)V"
          },
          {
            "nme": "getVersion",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          },
          {
            "nme": "getLogID",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getTimestamp",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getExtensions",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSignature",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/DigitallySigned;"
          },
          {
            "nme": "getOrigin",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          },
          {
            "nme": "decode",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;)Lorg/conscrypt/ct/SignedCertificateTimestamp;",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "decode",
            "acc": 9,
            "dsc": "([BLorg/conscrypt/ct/SignedCertificateTimestamp$Origin;)Lorg/conscrypt/ct/SignedCertificateTimestamp;",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "encodeTBS",
            "acc": 1,
            "dsc": "(Ljava/io/OutputStream;Lorg/conscrypt/ct/CertificateEntry;)V",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          },
          {
            "nme": "encodeTBS",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/CertificateEntry;)[B",
            "exs": [
              "org/conscrypt/ct/SerializationException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "version",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          },
          {
            "acc": 18,
            "nme": "logId",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "timestamp",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "extensions",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "signature",
            "dsc": "Lorg/conscrypt/ct/DigitallySigned;"
          },
          {
            "acc": 18,
            "nme": "origin",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Origin;"
          }
        ]
      },
      "org/conscrypt/SSLServerSessionCache.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/SSLServerSessionCache",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getSessionData",
            "acc": 1025,
            "dsc": "([B)[B"
          },
          {
            "nme": "putSessionData",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/SSLSession;[B)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/AbstractSessionContext.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/AbstractSessionContext",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(I)V"
          },
          {
            "nme": "getIds",
            "acc": 17,
            "dsc": "()Ljava/util/Enumeration;",
            "sig": "()Ljava/util/Enumeration<[B>;"
          },
          {
            "nme": "getSession",
            "acc": 17,
            "dsc": "([B)Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getSessionCacheSize",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "getSessionTimeout",
            "acc": 17,
            "dsc": "()I"
          },
          {
            "nme": "setSessionTimeout",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/lang/IllegalArgumentException"
            ]
          },
          {
            "nme": "setSessionCacheSize",
            "acc": 17,
            "dsc": "(I)V",
            "exs": [
              "java/lang/IllegalArgumentException"
            ]
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          },
          {
            "nme": "cacheSession",
            "acc": 16,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "removeSession",
            "acc": 16,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "getSessionFromCache",
            "acc": 16,
            "dsc": "([B)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "onBeforeAddSession",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "onBeforeRemoveSession",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "getSessionFromPersistentCache",
            "acc": 1024,
            "dsc": "([B)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "trimToSize",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;)I"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "DEFAULT_SESSION_TIMEOUT_SECONDS",
            "dsc": "I",
            "val": 28800
          },
          {
            "acc": 66,
            "nme": "maximumSize",
            "dsc": "I"
          },
          {
            "acc": 66,
            "nme": "timeout",
            "dsc": "I"
          },
          {
            "acc": 16,
            "nme": "sslCtxNativePointer",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "sessions",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Lorg/conscrypt/ByteArray;Lorg/conscrypt/NativeSslSession;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLRSAKeyFactory.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLRSAKeyFactory",
        "super": "java/security/KeyFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineGeneratePublic",
            "acc": 4,
            "dsc": "(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineGeneratePrivate",
            "acc": 4,
            "dsc": "(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineGetKeySpec",
            "acc": 4,
            "dsc": "(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;",
            "sig": "<T::Ljava/security/spec/KeySpec;>(Ljava/security/Key;Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineTranslateKey",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)Ljava/security/Key;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/AddressUtils.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/AddressUtils",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "isValidSniHostname",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Z"
          },
          {
            "nme": "isLiteralIpAddress",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Z"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "IP_PATTERN",
            "dsc": "Ljava/lang/String;",
            "val": "^(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9]))|(?i:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))(?:%.+)?$"
          },
          {
            "acc": 10,
            "nme": "ipPattern",
            "dsc": "Ljava/util/regex/Pattern;"
          }
        ]
      },
      "org/conscrypt/EvpMdRef$SHA384.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$SHA384",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "SHA-384"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "2.16.840.1.101.3.4.2.2"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC$PKCS5Padding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC$PKCS5Padding",
        "super": "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/KeyGeneratorImpl.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/KeyGeneratorImpl",
        "super": "javax/crypto/KeyGeneratorSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V"
          },
          {
            "nme": "checkKeySize",
            "acc": 4,
            "dsc": "(I)V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/SecureRandom;)V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/SecureRandom;)V"
          },
          {
            "nme": "doKeyGeneration",
            "acc": 4,
            "dsc": "(I)[B"
          },
          {
            "nme": "engineGenerateKey",
            "acc": 4,
            "dsc": "()Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/KeyGeneratorImpl$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "algorithm",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 4,
            "nme": "secureRandom",
            "dsc": "Ljava/security/SecureRandom;"
          },
          {
            "acc": 2,
            "nme": "keySizeBits",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/FileClientSessionCache$CacheFile.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/FileClientSessionCache$CacheFile",
        "super": "java/io/File",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/io/File;Ljava/lang/String;)V"
          },
          {
            "nme": "lastModified",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "compareTo",
            "acc": 1,
            "dsc": "(Ljava/io/File;)I"
          },
          {
            "nme": "compareTo",
            "acc": 4161,
            "dsc": "(Ljava/lang/Object;)I"
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "name",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 0,
            "nme": "lastModified",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA512RSAPSS.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA512RSAPSS",
        "super": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/VerifiedSCT$Status.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/VerifiedSCT$Status",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "VALID",
            "dsc": "Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "acc": 16409,
            "nme": "INVALID_SIGNATURE",
            "dsc": "Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "acc": 16409,
            "nme": "UNKNOWN_LOG",
            "dsc": "Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "acc": 16409,
            "nme": "INVALID_SCT",
            "dsc": "Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/VerifiedSCT$Status;"
          }
        ]
      },
      "org/conscrypt/NativeSsl$BioWrapper.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeSsl$BioWrapper",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/NativeSsl;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getPendingWrittenBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "writeDirectByteBuffer",
            "acc": 0,
            "dsc": "(JI)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readDirectByteBuffer",
            "acc": 0,
            "dsc": "(JI)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "close",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/NativeSsl;Lorg/conscrypt/NativeSsl$1;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 66,
            "nme": "bio",
            "dsc": "J"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/NativeSsl;"
          }
        ]
      },
      "org/conscrypt/ClientSessionContext.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/ClientSessionContext",
        "super": "org/conscrypt/AbstractSessionContext",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "setPersistentCache",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/SSLClientSessionCache;)V"
          },
          {
            "nme": "getCachedSession",
            "acc": 32,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "size",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "getSession",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "putSession",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/ClientSessionContext$HostAndPort;Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "removeSession",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/ClientSessionContext$HostAndPort;Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "onBeforeAddSession",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "onBeforeRemoveSession",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "getSessionFromPersistentCache",
            "acc": 0,
            "dsc": "([B)Lorg/conscrypt/NativeSslSession;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "sessionsByHostAndPort",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Lorg/conscrypt/ClientSessionContext$HostAndPort;Ljava/util/List<Lorg/conscrypt/NativeSslSession;>;>;"
          },
          {
            "acc": 2,
            "nme": "persistentCache",
            "dsc": "Lorg/conscrypt/SSLClientSessionCache;"
          }
        ]
      },
      "org/conscrypt/Java8FileDescriptorSocket.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Java8FileDescriptorSocket",
        "super": "org/conscrypt/ConscryptFileDescriptorSocket",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "(Ljava/util/function/BiFunction;)V",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)V"
          },
          {
            "nme": "getHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "()Ljava/util/function/BiFunction;",
            "sig": "()Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          },
          {
            "nme": "toApplicationProtocolSelector",
            "acc": 10,
            "dsc": "(Ljava/util/function/BiFunction;)Lorg/conscrypt/ApplicationProtocolSelector;",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)Lorg/conscrypt/ApplicationProtocolSelector;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "selector",
            "dsc": "Ljava/util/function/BiFunction;",
            "sig": "Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA384ECDSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA384ECDSA",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/CertificatePriorityComparator.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/CertificatePriorityComparator",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "compare",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I"
          },
          {
            "nme": "compareStrength",
            "acc": 2,
            "dsc": "(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I"
          },
          {
            "nme": "compareKeyAlgorithm",
            "acc": 2,
            "dsc": "(Ljava/security/PublicKey;Ljava/security/PublicKey;)I"
          },
          {
            "nme": "compareKeySize",
            "acc": 2,
            "dsc": "(Ljava/security/PublicKey;Ljava/security/PublicKey;)I"
          },
          {
            "nme": "getKeySize",
            "acc": 2,
            "dsc": "(Ljava/security/PublicKey;)I"
          },
          {
            "nme": "compareSignatureAlgorithm",
            "acc": 2,
            "dsc": "(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)I"
          },
          {
            "nme": "compare",
            "acc": 4161,
            "dsc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "ALGORITHM_OID_PRIORITY_MAP",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_MD5",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_SHA1",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_SHA224",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_SHA256",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_SHA384",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_SHA512",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 26,
            "nme": "PRIORITY_UNKNOWN",
            "dsc": "Ljava/lang/Integer;"
          }
        ]
      },
      "org/conscrypt/NativeSslSession$Impl$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/NativeSslSession$Impl$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSslSession$Impl;)V"
          },
          {
            "nme": "getId",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getCipherSuite",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getCreationTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "isValid",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "invalidate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "putValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "getValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "removeValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getValueNames",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 1,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 1,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/NativeSslSession$Impl;"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$HmacSHA512.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacSHA512",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLECGroupContext.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLECGroupContext",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)V"
          },
          {
            "nme": "getCurveByName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLECGroupContext;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getNativeRef",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/NativeRef$EC_GROUP;"
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/spec/ECParameterSpec;)Lorg/conscrypt/OpenSSLECGroupContext;",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "getCurveName",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getECParameterSpec",
            "acc": 0,
            "dsc": "()Ljava/security/spec/ECParameterSpec;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "ALIASES",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
          },
          {
            "acc": 18,
            "nme": "groupCtx",
            "dsc": "Lorg/conscrypt/NativeRef$EC_GROUP;"
          }
        ]
      },
      "org/conscrypt/OpenSSLECKeyPairGenerator.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLECKeyPairGenerator",
        "super": "java/security/KeyPairGenerator",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "generateKeyPair",
            "acc": 1,
            "dsc": "()Ljava/security/KeyPair;"
          },
          {
            "nme": "initialize",
            "acc": 1,
            "dsc": "(ILjava/security/SecureRandom;)V"
          },
          {
            "nme": "initialize",
            "acc": 1,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "assertCurvesAreValid",
            "acc": 9,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "ALGORITHM",
            "dsc": "Ljava/lang/String;",
            "val": "EC"
          },
          {
            "acc": 26,
            "nme": "DEFAULT_KEY_SIZE",
            "dsc": "I",
            "val": 256
          },
          {
            "acc": 26,
            "nme": "SIZE_TO_CURVE_NAME",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;"
          },
          {
            "acc": 2,
            "nme": "group",
            "dsc": "Lorg/conscrypt/OpenSSLECGroupContext;"
          }
        ]
      },
      "org/conscrypt/OpenSSLRSAPrivateKey.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLRSAPrivateKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;[[B)V"
          },
          {
            "nme": "getOpenSSLKey",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/security/spec/RSAPrivateKeySpec;)V",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "init",
            "acc": 10,
            "dsc": "(Ljava/security/spec/RSAPrivateKeySpec;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)Lorg/conscrypt/OpenSSLRSAPrivateKey;"
          },
          {
            "nme": "wrapPlatformKey",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/RSAPrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapJCAPrivateKeyForTLSStackOnly",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/RSAPrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "ensureReadParams",
            "acc": 48,
            "dsc": "()V"
          },
          {
            "nme": "readParams",
            "acc": 0,
            "dsc": "([[B)V"
          },
          {
            "nme": "getPrivateExponent",
            "acc": 17,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getModulus",
            "acc": 17,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getEncoded",
            "acc": 17,
            "dsc": "()[B"
          },
          {
            "nme": "getFormat",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getAlgorithm",
            "acc": 17,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "readObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectInputStream;)V",
            "exs": [
              "java/io/IOException",
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "writeObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 4872170254439578735
          },
          {
            "acc": 128,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 128,
            "nme": "fetchedParams",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "modulus",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 0,
            "nme": "privateExponent",
            "dsc": "Ljava/math/BigInteger;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipher.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLEvpCipher",
        "super": "org/conscrypt/OpenSSLCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "engineInitInternal",
            "acc": 0,
            "dsc": "([BLjava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "updateInternal",
            "acc": 0,
            "dsc": "([BII[BII)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "doFinalInternal",
            "acc": 0,
            "dsc": "([BII)I",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException",
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "getOutputSizeForUpdate",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "getCipherName",
            "acc": 1024,
            "dsc": "(ILorg/conscrypt/OpenSSLCipher$Mode;)Ljava/lang/String;"
          },
          {
            "nme": "reset",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "cipherCtx",
            "dsc": "Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;"
          },
          {
            "acc": 2,
            "nme": "calledUpdate",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "modeBlockSize",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$HmacSHA384.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacSHA384",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ConscryptEngineSocket$SSLInputStream.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ConscryptEngineSocket$SSLInputStream",
        "super": "java/io/InputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)V"
          },
          {
            "nme": "close",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "release",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([B)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "available",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "isHandshaking",
            "acc": 2,
            "dsc": "(Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;)Z"
          },
          {
            "nme": "readUntilDataAvailable",
            "acc": 2,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "processDataFromSocket",
            "acc": 2,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "isHandshakeFinished",
            "acc": 2,
            "dsc": "()Z"
          },
          {
            "nme": "renegotiate",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "init",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "readFromSocket",
            "acc": 2,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket$SSLInputStream;[BII)I",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "readLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 18,
            "nme": "singleByte",
            "dsc": "[B"
          },
          {
            "acc": 18,
            "nme": "fromEngine",
            "dsc": "Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "fromSocket",
            "dsc": "Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "fromSocketArrayOffset",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "allocatedBuffer",
            "dsc": "Lorg/conscrypt/AllocatedBuffer;"
          },
          {
            "acc": 2,
            "nme": "socketInputStream",
            "dsc": "Ljava/io/InputStream;"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket;"
          }
        ]
      },
      "org/conscrypt/NativeRef$HMAC_CTX.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$HMAC_CTX",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeRef$EVP_MD_CTX.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EVP_MD_CTX",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/SSLClientSessionCache.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/SSLClientSessionCache",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getSessionData",
            "acc": 1025,
            "dsc": "(Ljava/lang/String;I)[B"
          },
          {
            "nme": "putSessionData",
            "acc": 1025,
            "dsc": "(Ljavax/net/ssl/SSLSession;[B)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLECDHKeyAgreement.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLECDHKeyAgreement",
        "super": "javax/crypto/KeyAgreementSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineDoPhase",
            "acc": 1,
            "dsc": "(Ljava/security/Key;Z)Ljava/security/Key;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineGenerateSecret",
            "acc": 4,
            "dsc": "([BI)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "engineGenerateSecret",
            "acc": 4,
            "dsc": "()[B"
          },
          {
            "nme": "engineGenerateSecret",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)Ljavax/crypto/SecretKey;"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/Key;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "checkCompleted",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "mOpenSslPrivateKey",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 2,
            "nme": "mExpectedResultLength",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "mResult",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipher.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLAeadCipher",
        "super": "org/conscrypt/OpenSSLCipher",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V"
          },
          {
            "nme": "checkInitialization",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "arraysAreEqual",
            "acc": 2,
            "dsc": "([B[B)Z"
          },
          {
            "nme": "expand",
            "acc": 2,
            "dsc": "(I)V"
          },
          {
            "nme": "reset",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "engineInitInternal",
            "acc": 0,
            "dsc": "([BLjava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "checkSupportedTagLength",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "allowsNonceReuse",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "([BII[BI)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "updateInternal",
            "acc": 0,
            "dsc": "([BII[BII)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "throwAEADBadTagExceptionIfAvailable",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/Throwable;)V",
            "exs": [
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "doFinalInternal",
            "acc": 0,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "doFinalInternal",
            "acc": 0,
            "dsc": "([BII)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getOutputSizeForUpdate",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 0,
            "dsc": "(I)I"
          },
          {
            "nme": "engineUpdateAAD",
            "acc": 4,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineUpdateAAD",
            "acc": 4,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "getEVP_AEAD",
            "acc": 1024,
            "dsc": "(I)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "ENABLE_BYTEBUFFER_OPTIMIZATIONS",
            "dsc": "Z",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "DEFAULT_TAG_SIZE_BITS",
            "dsc": "I",
            "val": 128
          },
          {
            "acc": 10,
            "nme": "lastGlobalMessageSize",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "previousKey",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "previousIv",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "mustInitialize",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "buf",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "bufCount",
            "dsc": "I"
          },
          {
            "acc": 0,
            "nme": "evpAead",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "aad",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "tagLengthInBytes",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/PeerInfoProvider.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/PeerInfoProvider",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "getHostname",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPort",
            "acc": 1024,
            "dsc": "()I"
          },
          {
            "nme": "nullProvider",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/PeerInfoProvider;"
          },
          {
            "nme": "forHostAndPort",
            "acc": 8,
            "dsc": "(Ljava/lang/String;I)Lorg/conscrypt/PeerInfoProvider;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "NULL_PEER_INFO_PROVIDER",
            "dsc": "Lorg/conscrypt/PeerInfoProvider;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMac$HmacSHA256.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacSHA256",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ConscryptSession.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/ConscryptSession",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getRequestedServerName",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getStatusResponses",
            "acc": 1025,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1025,
            "dsc": "()[B"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1025,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ClientSessionContext$HostAndPort.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ClientSessionContext$HostAndPort",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "host",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 16,
            "nme": "port",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLProvider.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLProvider",
        "super": "java/security/Provider",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ZLjava/lang/String;)V"
          },
          {
            "nme": "putMacImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "putSymmetricCipherImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "putRSACipherImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "putSignatureImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "putRAWRSASignatureImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "putECDHKeyAgreementImplClass",
            "acc": 2,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "putImplClassWithKeyConstraints",
            "acc": 2,
            "dsc": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 2996752495318905136
          },
          {
            "acc": 26,
            "nme": "PREFIX",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 26,
            "nme": "STANDARD_EC_PRIVATE_KEY_INTERFACE_CLASS_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "java.security.interfaces.ECPrivateKey"
          },
          {
            "acc": 26,
            "nme": "STANDARD_RSA_PRIVATE_KEY_INTERFACE_CLASS_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "java.security.interfaces.RSAPrivateKey"
          },
          {
            "acc": 26,
            "nme": "STANDARD_RSA_PUBLIC_KEY_INTERFACE_CLASS_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "java.security.interfaces.RSAPublicKey"
          }
        ]
      },
      "org/conscrypt/OpenSSLMac$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLMac$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/TrustManagerFactoryImpl.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/TrustManagerFactoryImpl",
        "super": "javax/net/ssl/TrustManagerFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 1,
            "dsc": "(Ljava/security/KeyStore;)V",
            "exs": [
              "java/security/KeyStoreException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/ManagerFactoryParameters;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineGetTrustManagers",
            "acc": 1,
            "dsc": "()[Ljavax/net/ssl/TrustManager;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "keyStore",
            "dsc": "Ljava/security/KeyStore;"
          }
        ]
      },
      "org/conscrypt/NativeRef.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/NativeRef",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          },
          {
            "nme": "doFree",
            "acc": 1024,
            "dsc": "(J)V"
          }
        ],
        "flds": [
          {
            "acc": 16,
            "nme": "address",
            "dsc": "J"
          }
        ]
      },
      "org/conscrypt/OpenSSLMac$HmacSHA224.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacSHA224",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/PeerInfoProvider$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/PeerInfoProvider$2",
        "super": "org/conscrypt/PeerInfoProvider",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPort",
            "acc": 1,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$host",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 4112,
            "nme": "val$port",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/Java8EngineSocket.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Java8EngineSocket",
        "super": "org/conscrypt/ConscryptEngineSocket",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;ILorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZLorg/conscrypt/SSLParametersImpl;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "(Ljava/util/function/BiFunction;)V",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)V"
          },
          {
            "nme": "getHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "()Ljava/util/function/BiFunction;",
            "sig": "()Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          },
          {
            "nme": "toApplicationProtocolSelector",
            "acc": 10,
            "dsc": "(Ljava/util/function/BiFunction;)Lorg/conscrypt/ApplicationProtocolSelector;",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)Lorg/conscrypt/ApplicationProtocolSelector;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "selector",
            "dsc": "Ljava/util/function/BiFunction;",
            "sig": "Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeRef$EVP_PKEY_CTX.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EVP_PKEY_CTX",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeSslSession.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/NativeSslSession",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "newInstance",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/NativeRef$SSL_SESSION;Lorg/conscrypt/ConscryptSession;)Lorg/conscrypt/NativeSslSession;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getOcspResponse",
            "acc": 10,
            "dsc": "(Lorg/conscrypt/ConscryptSession;)[B"
          },
          {
            "nme": "newInstance",
            "acc": 8,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;[BLjava/lang/String;I)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "getId",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "isValid",
            "acc": 1024,
            "dsc": "()Z"
          },
          {
            "nme": "isSingleUse",
            "acc": 1024,
            "dsc": "()Z"
          },
          {
            "nme": "offerToResume",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/NativeSsl;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getCipherSuite",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1024,
            "dsc": "()I"
          },
          {
            "nme": "getPeerOcspStapledResponse",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "toBytes",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "toSSLSession",
            "acc": 1024,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "log",
            "acc": 10,
            "dsc": "(Ljava/lang/Throwable;)V"
          },
          {
            "nme": "checkRemaining",
            "acc": 10,
            "dsc": "(Ljava/nio/ByteBuffer;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$100",
            "acc": 4104,
            "dsc": "()Ljava/util/logging/Logger;"
          },
          {
            "nme": "access$200",
            "acc": 4104,
            "dsc": "(Ljava/lang/Throwable;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          }
        ]
      },
      "org/conscrypt/OpenSSLServerSocketFactoryImpl.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLServerSocketFactoryImpl",
        "super": "javax/net/ssl/SSLServerSocketFactory",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "setUseEngineSocketByDefault",
            "acc": 8,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseEngineSocket",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getDefaultCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "createServerSocket",
            "acc": 1,
            "dsc": "()Ljava/net/ServerSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createServerSocket",
            "acc": 1,
            "dsc": "(I)Ljava/net/ServerSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createServerSocket",
            "acc": 1,
            "dsc": "(II)Ljava/net/ServerSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "createServerSocket",
            "acc": 1,
            "dsc": "(IILjava/net/InetAddress;)Ljava/net/ServerSocket;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 10,
            "nme": "useEngineSocketByDefault",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 2,
            "nme": "instantiationException",
            "dsc": "Ljava/io/IOException;"
          },
          {
            "acc": 2,
            "nme": "useEngineSocket",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/ct/CTVerificationResult.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/CTVerificationResult",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "add",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/VerifiedSCT;)V"
          },
          {
            "nme": "getValidSCTs",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<Lorg/conscrypt/ct/VerifiedSCT;>;"
          },
          {
            "nme": "getInvalidSCTs",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<Lorg/conscrypt/ct/VerifiedSCT;>;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "validSCTs",
            "dsc": "Ljava/util/ArrayList;",
            "sig": "Ljava/util/ArrayList<Lorg/conscrypt/ct/VerifiedSCT;>;"
          },
          {
            "acc": 18,
            "nme": "invalidSCTs",
            "dsc": "Ljava/util/ArrayList;",
            "sig": "Ljava/util/ArrayList<Lorg/conscrypt/ct/VerifiedSCT;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CBC",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509CertificateFactory$Parser.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/OpenSSLX509CertificateFactory$Parser",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "generateItem",
            "acc": 0,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "sig": "(Ljava/io/InputStream;)TT;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "generateItems",
            "acc": 0,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/Collection;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/Collection<+TT;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 1028,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "sig": "(Ljava/io/InputStream;)TT;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 1028,
            "dsc": "(Ljava/io/InputStream;)Ljava/lang/Object;",
            "sig": "(Ljava/io/InputStream;)TT;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7PemInputStream",
            "acc": 1028,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+TT;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7DerInputStream",
            "acc": 1028,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<+TT;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/OpenSSLX509CertificateFactory$1;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/SignedCertificateTimestamp$Version.class": {
        "ver": 51,
        "acc": 16433,
        "nme": "org/conscrypt/ct/SignedCertificateTimestamp$Version",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "V1",
            "dsc": "Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/ct/SignedCertificateTimestamp$Version;"
          }
        ]
      },
      "org/conscrypt/OpenSSLContextImpl$TLSv13.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLContextImpl$TLSv13",
        "super": "org/conscrypt/OpenSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ct/CTLogStore.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/ct/CTLogStore",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getKnownLog",
            "acc": 1025,
            "dsc": "([B)Lorg/conscrypt/ct/CTLogInfo;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$EngineType.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/OpenSSLSignature$EngineType",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/OpenSSLSignature$EngineType;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLSignature$EngineType;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "RSA",
            "dsc": "Lorg/conscrypt/OpenSSLSignature$EngineType;"
          },
          {
            "acc": 16409,
            "nme": "EC",
            "dsc": "Lorg/conscrypt/OpenSSLSignature$EngineType;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/OpenSSLSignature$EngineType;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA256RSAPSS.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA256RSAPSS",
        "super": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker",
        "super": "java/security/cert/PKIXCertPathChecker",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(ZLjava/security/cert/X509Certificate;)V"
          },
          {
            "nme": "init",
            "acc": 1,
            "dsc": "(Z)V",
            "exs": [
              "java/security/cert/CertPathValidatorException"
            ]
          },
          {
            "nme": "isForwardCheckingSupported",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getSupportedExtensions",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "check",
            "acc": 1,
            "dsc": "(Ljava/security/cert/Certificate;Ljava/util/Collection;)V",
            "sig": "(Ljava/security/cert/Certificate;Ljava/util/Collection<Ljava/lang/String;>;)V",
            "exs": [
              "java/security/cert/CertPathValidatorException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(ZLjava/security/cert/X509Certificate;Lorg/conscrypt/TrustManagerImpl$1;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "EKU_OID",
            "dsc": "Ljava/lang/String;",
            "val": "2.5.29.37"
          },
          {
            "acc": 26,
            "nme": "EKU_anyExtendedKeyUsage",
            "dsc": "Ljava/lang/String;",
            "val": "2.5.29.37.0"
          },
          {
            "acc": 26,
            "nme": "EKU_clientAuth",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.6.1.5.5.7.3.2"
          },
          {
            "acc": 26,
            "nme": "EKU_serverAuth",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.6.1.5.5.7.3.1"
          },
          {
            "acc": 26,
            "nme": "EKU_nsSGC",
            "dsc": "Ljava/lang/String;",
            "val": "2.16.840.1.113730.4.1"
          },
          {
            "acc": 26,
            "nme": "EKU_msSGC",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.6.1.4.1.311.10.3.3"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_EXTENSIONS",
            "dsc": "Ljava/util/Set;",
            "sig": "Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "acc": 18,
            "nme": "clientAuth",
            "dsc": "Z"
          },
          {
            "acc": 18,
            "nme": "leaf",
            "dsc": "Ljava/security/cert/X509Certificate;"
          }
        ]
      },
      "org/conscrypt/ConscryptEngineSocket$SSLOutputStream.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ConscryptEngineSocket$SSLOutputStream",
        "super": "java/io/OutputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)V"
          },
          {
            "nme": "close",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "write",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "write",
            "acc": 1,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "write",
            "acc": 1,
            "dsc": "([BII)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writeInternal",
            "acc": 2,
            "dsc": "(Ljava/nio/ByteBuffer;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "flush",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "flushInternal",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "init",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "writeToSocket",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$200",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket$SSLOutputStream;Ljava/nio/ByteBuffer;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "access$300",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket$SSLOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "writeLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 18,
            "nme": "target",
            "dsc": "Ljava/nio/ByteBuffer;"
          },
          {
            "acc": 18,
            "nme": "targetArrayOffset",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "socketOutputStream",
            "dsc": "Ljava/io/OutputStream;"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipher.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLCipher",
        "super": "javax/crypto/CipherSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "engineInitInternal",
            "acc": 1024,
            "dsc": "([BLjava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "updateInternal",
            "acc": 1024,
            "dsc": "([BII[BII)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "doFinalInternal",
            "acc": 1024,
            "dsc": "([BII)I",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException",
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "getBaseCipherName",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 1024,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "checkSupportedMode",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "checkSupportedPadding",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getCipherBlockSize",
            "acc": 1024,
            "dsc": "()I"
          },
          {
            "nme": "supportsVariableSizeKey",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "supportsVariableSizeIv",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "engineSetMode",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "engineSetPadding",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "getPadding",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "nme": "engineGetBlockSize",
            "acc": 4,
            "dsc": "()I"
          },
          {
            "nme": "getOutputSizeForFinal",
            "acc": 1024,
            "dsc": "(I)I"
          },
          {
            "nme": "getOutputSizeForUpdate",
            "acc": 1024,
            "dsc": "(I)I"
          },
          {
            "nme": "engineGetOutputSize",
            "acc": 4,
            "dsc": "(I)I"
          },
          {
            "nme": "engineGetIV",
            "acc": 4,
            "dsc": "()[B"
          },
          {
            "nme": "engineGetParameters",
            "acc": 4,
            "dsc": "()Ljava/security/AlgorithmParameters;"
          },
          {
            "nme": "getParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/security/AlgorithmParameters;)Ljava/security/spec/AlgorithmParameterSpec;",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)[B"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII[BI)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "([BII)[B",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "([BII[BI)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "engineWrap",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)[B",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineUnwrap",
            "acc": 4,
            "dsc": "([BLjava/lang/String;I)Ljava/security/Key;",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "engineGetKeySize",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)I",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "checkAndSetEncodedKey",
            "acc": 2,
            "dsc": "(ILjava/security/Key;)[B",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "isEncrypting",
            "acc": 0,
            "dsc": "()Z"
          }
        ],
        "flds": [
          {
            "acc": 0,
            "nme": "mode",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Mode;"
          },
          {
            "acc": 2,
            "nme": "padding",
            "dsc": "Lorg/conscrypt/OpenSSLCipher$Padding;"
          },
          {
            "acc": 0,
            "nme": "encodedKey",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "iv",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "encrypting",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "blockSize",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA512RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA512RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/PeerInfoProvider$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/PeerInfoProvider$1",
        "super": "org/conscrypt/PeerInfoProvider",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPort",
            "acc": 1,
            "dsc": "()I"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherDESEDE$CBC",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509CertificateFactory.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLX509CertificateFactory",
        "super": "java/security/cert/CertificateFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineGenerateCertificate",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/Certificate;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "engineGenerateCertificates",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/Collection;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/Collection<+Ljava/security/cert/Certificate;>;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "engineGenerateCRL",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/CRL;",
            "exs": [
              "java/security/cert/CRLException"
            ]
          },
          {
            "nme": "engineGenerateCRLs",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/Collection;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/Collection<+Ljava/security/cert/CRL;>;",
            "exs": [
              "java/security/cert/CRLException"
            ]
          },
          {
            "nme": "engineGetCertPathEncodings",
            "acc": 1,
            "dsc": "()Ljava/util/Iterator;",
            "sig": "()Ljava/util/Iterator<Ljava/lang/String;>;"
          },
          {
            "nme": "engineGenerateCertPath",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "engineGenerateCertPath",
            "acc": 1,
            "dsc": "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "engineGenerateCertPath",
            "acc": 1,
            "dsc": "(Ljava/util/List;)Ljava/security/cert/CertPath;",
            "sig": "(Ljava/util/List<+Ljava/security/cert/Certificate;>;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "()[B"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "PKCS7_MARKER",
            "dsc": "[B"
          },
          {
            "acc": 26,
            "nme": "PUSHBACK_SIZE",
            "dsc": "I",
            "val": 64
          },
          {
            "acc": 2,
            "nme": "certificateParser",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertificateFactory$Parser;",
            "sig": "Lorg/conscrypt/OpenSSLX509CertificateFactory$Parser<Lorg/conscrypt/OpenSSLX509Certificate;>;"
          },
          {
            "acc": 2,
            "nme": "crlParser",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertificateFactory$Parser;",
            "sig": "Lorg/conscrypt/OpenSSLX509CertificateFactory$Parser<Lorg/conscrypt/OpenSSLX509CRL;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLECKeyFactory.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLECKeyFactory",
        "super": "java/security/KeyFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineGeneratePublic",
            "acc": 4,
            "dsc": "(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineGeneratePrivate",
            "acc": 4,
            "dsc": "(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineGetKeySpec",
            "acc": 4,
            "dsc": "(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;",
            "sig": "<T::Ljava/security/spec/KeySpec;>(Ljava/security/Key;Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "engineTranslateKey",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)Ljava/security/Key;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM$AES_256.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM$AES_256",
        "super": "org/conscrypt/OpenSSLAeadCipherAES$GCM",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSocketImpl.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLSocketImpl",
        "super": "org/conscrypt/AbstractConscryptSocket",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;ILjava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/net/Socket;Ljava/lang/String;IZ)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getHostname",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setHostname",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getFileDescriptor$",
            "acc": 1,
            "dsc": "()Ljava/io/FileDescriptor;"
          },
          {
            "nme": "setSoWriteTimeout",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoWriteTimeout",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setHandshakeTimeout",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getHandshakeSession",
            "acc": 1025,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 1025,
            "dsc": "(Z)V"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 1025,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 1025,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 1025,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "getNpnSelectedProtocol",
            "acc": 131089,
            "dsc": "()[B",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setNpnProtocols",
            "acc": 131089,
            "dsc": "([B)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setAlpnProtocols",
            "acc": 131089,
            "dsc": "([Ljava/lang/String;)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "getAlpnSelectedProtocol",
            "acc": 131089,
            "dsc": "()[B",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "setAlpnProtocols",
            "acc": 131089,
            "dsc": "([B)V",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "toString",
            "acc": 4161,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setPerformancePreferences",
            "acc": 4161,
            "dsc": "(III)V"
          },
          {
            "nme": "isOutputShutdown",
            "acc": 4161,
            "dsc": "()Z"
          },
          {
            "nme": "isInputShutdown",
            "acc": 4161,
            "dsc": "()Z"
          },
          {
            "nme": "isClosed",
            "acc": 4161,
            "dsc": "()Z"
          },
          {
            "nme": "isBound",
            "acc": 4161,
            "dsc": "()Z"
          },
          {
            "nme": "isConnected",
            "acc": 4161,
            "dsc": "()Z"
          },
          {
            "nme": "shutdownOutput",
            "acc": 4161,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "shutdownInput",
            "acc": 4161,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getReuseAddress",
            "acc": 4161,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setReuseAddress",
            "acc": 4161,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getTrafficClass",
            "acc": 4161,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setTrafficClass",
            "acc": 4161,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getKeepAlive",
            "acc": 4161,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setKeepAlive",
            "acc": 4161,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getReceiveBufferSize",
            "acc": 4161,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setReceiveBufferSize",
            "acc": 4161,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSendBufferSize",
            "acc": 4161,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setSendBufferSize",
            "acc": 4161,
            "dsc": "(I)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getSoLinger",
            "acc": 4161,
            "dsc": "()I",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setSoLinger",
            "acc": 4161,
            "dsc": "(ZI)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getTcpNoDelay",
            "acc": 4161,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "setTcpNoDelay",
            "acc": 4161,
            "dsc": "(Z)V",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "getOutputStream",
            "acc": 4161,
            "dsc": "()Ljava/io/OutputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getInputStream",
            "acc": 4161,
            "dsc": "()Ljava/io/InputStream;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getChannel",
            "acc": 4161,
            "dsc": "()Ljava/nio/channels/SocketChannel;"
          },
          {
            "nme": "getOOBInline",
            "acc": 4161,
            "dsc": "()Z",
            "exs": [
              "java/net/SocketException"
            ]
          },
          {
            "nme": "removeHandshakeCompletedListener",
            "acc": 4161,
            "dsc": "(Ljavax/net/ssl/HandshakeCompletedListener;)V"
          },
          {
            "nme": "addHandshakeCompletedListener",
            "acc": 4161,
            "dsc": "(Ljavax/net/ssl/HandshakeCompletedListener;)V"
          },
          {
            "nme": "getLocalSocketAddress",
            "acc": 4161,
            "dsc": "()Ljava/net/SocketAddress;"
          },
          {
            "nme": "getRemoteSocketAddress",
            "acc": 4161,
            "dsc": "()Ljava/net/SocketAddress;"
          },
          {
            "nme": "getLocalPort",
            "acc": 4161,
            "dsc": "()I"
          },
          {
            "nme": "getLocalAddress",
            "acc": 4161,
            "dsc": "()Ljava/net/InetAddress;"
          },
          {
            "nme": "getInetAddress",
            "acc": 4161,
            "dsc": "()Ljava/net/InetAddress;"
          },
          {
            "nme": "close",
            "acc": 4161,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "bind",
            "acc": 4161,
            "dsc": "(Ljava/net/SocketAddress;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509Certificate.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLX509Certificate",
        "super": "java/security/cert/X509Certificate",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JLjava/util/Date;Ljava/util/Date;)V"
          },
          {
            "nme": "toDate",
            "acc": 10,
            "dsc": "(J)Ljava/util/Date;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509DerInputStream",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509Der",
            "acc": 9,
            "dsc": "([B)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "fromPkcs7DerInputStream",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<Lorg/conscrypt/OpenSSLX509Certificate;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromX509PemInputStream",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromPkcs7PemInputStream",
            "acc": 9,
            "dsc": "(Ljava/io/InputStream;)Ljava/util/List;",
            "sig": "(Ljava/io/InputStream;)Ljava/util/List<Lorg/conscrypt/OpenSSLX509Certificate;>;",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "fromCertificate",
            "acc": 9,
            "dsc": "(Ljava/security/cert/Certificate;)Lorg/conscrypt/OpenSSLX509Certificate;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "getExtensionValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)[B"
          },
          {
            "nme": "getNonCriticalExtensionOIDs",
            "acc": 1,
            "dsc": "()Ljava/util/Set;",
            "sig": "()Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "nme": "hasUnsupportedCriticalExtension",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "checkValidity",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/cert/CertificateExpiredException",
              "java/security/cert/CertificateNotYetValidException"
            ]
          },
          {
            "nme": "checkValidity",
            "acc": 1,
            "dsc": "(Ljava/util/Date;)V",
            "exs": [
              "java/security/cert/CertificateExpiredException",
              "java/security/cert/CertificateNotYetValidException"
            ]
          },
          {
            "nme": "getVersion",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getSerialNumber",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getIssuerDN",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getSubjectDN",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getNotBefore",
            "acc": 1,
            "dsc": "()Ljava/util/Date;"
          },
          {
            "nme": "getNotAfter",
            "acc": 1,
            "dsc": "()Ljava/util/Date;"
          },
          {
            "nme": "getTBSCertificate",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getSignature",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSigAlgName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSigAlgOID",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getSigAlgParams",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getIssuerUniqueID",
            "acc": 1,
            "dsc": "()[Z"
          },
          {
            "nme": "getSubjectUniqueID",
            "acc": 1,
            "dsc": "()[Z"
          },
          {
            "nme": "getKeyUsage",
            "acc": 1,
            "dsc": "()[Z"
          },
          {
            "nme": "getBasicConstraints",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "verifyOpenSSL",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verifyInternal",
            "acc": 2,
            "dsc": "(Ljava/security/PublicKey;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/NoSuchProviderException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "(Ljava/security/PublicKey;Ljava/security/Provider;)V",
            "exs": [
              "java/security/cert/CertificateException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPublicKey",
            "acc": 1,
            "dsc": "()Ljava/security/PublicKey;"
          },
          {
            "nme": "getIssuerX500Principal",
            "acc": 1,
            "dsc": "()Ljavax/security/auth/x500/X500Principal;"
          },
          {
            "nme": "getSubjectX500Principal",
            "acc": 1,
            "dsc": "()Ljavax/security/auth/x500/X500Principal;"
          },
          {
            "nme": "getExtendedKeyUsage",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<Ljava/lang/String;>;",
            "exs": [
              "java/security/cert/CertificateParsingException"
            ]
          },
          {
            "nme": "alternativeNameArrayToList",
            "acc": 10,
            "dsc": "([[Ljava/lang/Object;)Ljava/util/Collection;",
            "sig": "([[Ljava/lang/Object;)Ljava/util/Collection<Ljava/util/List<*>;>;"
          },
          {
            "nme": "getSubjectAlternativeNames",
            "acc": 1,
            "dsc": "()Ljava/util/Collection;",
            "sig": "()Ljava/util/Collection<Ljava/util/List<*>;>;",
            "exs": [
              "java/security/cert/CertificateParsingException"
            ]
          },
          {
            "nme": "getIssuerAlternativeNames",
            "acc": 1,
            "dsc": "()Ljava/util/Collection;",
            "sig": "()Ljava/util/Collection<Ljava/util/List<*>;>;",
            "exs": [
              "java/security/cert/CertificateParsingException"
            ]
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getContext",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "withDeletedExtension",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLX509Certificate;"
          },
          {
            "nme": "finalize",
            "acc": 4,
            "dsc": "()V",
            "exs": [
              "java/lang/Throwable"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 1992239142393372128
          },
          {
            "acc": 146,
            "nme": "mContext",
            "dsc": "J"
          },
          {
            "acc": 130,
            "nme": "mHashCode",
            "dsc": "Ljava/lang/Integer;"
          },
          {
            "acc": 18,
            "nme": "notBefore",
            "dsc": "Ljava/util/Date;"
          },
          {
            "acc": 18,
            "nme": "notAfter",
            "dsc": "Ljava/util/Date;"
          }
        ]
      },
      "org/conscrypt/OidData.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OidData",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "oidToAlgorithmName",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "OID_TO_NAME_MAP",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA224.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA224",
        "super": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$RSAPSSPadding.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(JLjava/lang/String;I)V"
          },
          {
            "nme": "configureEVP_PKEY_CTX",
            "acc": 20,
            "dsc": "(J)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineSetParameter",
            "acc": 20,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineGetParameters",
            "acc": 20,
            "dsc": "()Ljava/security/AlgorithmParameters;"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "TRAILER_FIELD_BC_ID",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 18,
            "nme": "contentDigestAlgorithm",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "mgf1DigestAlgorithm",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "mgf1EvpMdRef",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "saltSizeBytes",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$HmacMD5.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacMD5",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeLibraryUtil.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeLibraryUtil",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "loadLibrary",
            "acc": 9,
            "dsc": "(Ljava/lang/String;Z)V"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_256$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/Java8EngineWrapper$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Java8EngineWrapper$1",
        "super": "org/conscrypt/ApplicationProtocolSelector",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/util/function/BiFunction;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$selector",
            "dsc": "Ljava/util/function/BiFunction;"
          }
        ]
      },
      "org/conscrypt/SSLParametersImpl.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/SSLParametersImpl",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;Lorg/conscrypt/ClientSessionContext;Lorg/conscrypt/ServerSessionContext;[Ljava/lang/String;)V",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/ClientSessionContext;Lorg/conscrypt/ServerSessionContext;Ljavax/net/ssl/X509KeyManager;Lorg/conscrypt/PSKKeyManager;Ljavax/net/ssl/X509TrustManager;Lorg/conscrypt/SSLParametersImpl;)V"
          },
          {
            "nme": "getDefault",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/SSLParametersImpl;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "getSessionContext",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/AbstractSessionContext;"
          },
          {
            "nme": "getClientSessionContext",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/ClientSessionContext;"
          },
          {
            "nme": "getX509KeyManager",
            "acc": 0,
            "dsc": "()Ljavax/net/ssl/X509KeyManager;"
          },
          {
            "nme": "getPSKKeyManager",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/PSKKeyManager;"
          },
          {
            "nme": "getX509TrustManager",
            "acc": 0,
            "dsc": "()Ljavax/net/ssl/X509TrustManager;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 0,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 0,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 0,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelectorAdapter;)V"
          },
          {
            "nme": "getApplicationProtocolSelector",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/ApplicationProtocolSelectorAdapter;"
          },
          {
            "nme": "setUseClientMode",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getUseClientMode",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseSni",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getUseSni",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "setCTVerificationEnabled",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "setSCTExtension",
            "acc": 0,
            "dsc": "([B)V"
          },
          {
            "nme": "setOCSPResponse",
            "acc": 0,
            "dsc": "([B)V"
          },
          {
            "nme": "getOCSPResponse",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "filterFromProtocols",
            "acc": 10,
            "dsc": "([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;"
          },
          {
            "nme": "filterFromCipherSuites",
            "acc": 10,
            "dsc": "([Ljava/lang/String;Ljava/util/Set;)[Ljava/lang/String;",
            "sig": "([Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;)[Ljava/lang/String;"
          },
          {
            "nme": "isSniEnabledByDefault",
            "acc": 2,
            "dsc": "()Z"
          },
          {
            "nme": "clone",
            "acc": 4,
            "dsc": "()Ljava/lang/Object;"
          },
          {
            "nme": "cloneWithTrustManager",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/X509TrustManager;)Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "nme": "getDefaultX509KeyManager",
            "acc": 10,
            "dsc": "()Ljavax/net/ssl/X509KeyManager;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "createDefaultX509KeyManager",
            "acc": 10,
            "dsc": "()Ljavax/net/ssl/X509KeyManager;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "findFirstX509KeyManager",
            "acc": 10,
            "dsc": "([Ljavax/net/ssl/KeyManager;)Ljavax/net/ssl/X509KeyManager;"
          },
          {
            "nme": "findFirstPSKKeyManager",
            "acc": 10,
            "dsc": "([Ljavax/net/ssl/KeyManager;)Lorg/conscrypt/PSKKeyManager;"
          },
          {
            "nme": "getDefaultX509TrustManager",
            "acc": 8,
            "dsc": "()Ljavax/net/ssl/X509TrustManager;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "createDefaultX509TrustManager",
            "acc": 10,
            "dsc": "()Ljavax/net/ssl/X509TrustManager;",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "findFirstX509TrustManager",
            "acc": 10,
            "dsc": "([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/X509TrustManager;"
          },
          {
            "nme": "getEndpointIdentificationAlgorithm",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setEndpointIdentificationAlgorithm",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getUseCipherSuitesOrder",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "getSNIMatchers",
            "acc": 0,
            "dsc": "()Ljava/util/Collection;",
            "sig": "()Ljava/util/Collection<Ljavax/net/ssl/SNIMatcher;>;"
          },
          {
            "nme": "setSNIMatchers",
            "acc": 0,
            "dsc": "(Ljava/util/Collection;)V",
            "sig": "(Ljava/util/Collection<Ljavax/net/ssl/SNIMatcher;>;)V"
          },
          {
            "nme": "getAlgorithmConstraints",
            "acc": 0,
            "dsc": "()Ljava/security/AlgorithmConstraints;"
          },
          {
            "nme": "setAlgorithmConstraints",
            "acc": 0,
            "dsc": "(Ljava/security/AlgorithmConstraints;)V"
          },
          {
            "nme": "setUseCipherSuitesOrder",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getDefaultCipherSuites",
            "acc": 10,
            "dsc": "(ZZ)[Ljava/lang/String;"
          },
          {
            "nme": "isCTVerificationEnabled",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)Z"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 74,
            "nme": "defaultX509KeyManager",
            "dsc": "Ljavax/net/ssl/X509KeyManager;"
          },
          {
            "acc": 74,
            "nme": "defaultX509TrustManager",
            "dsc": "Ljavax/net/ssl/X509TrustManager;"
          },
          {
            "acc": 74,
            "nme": "defaultParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          },
          {
            "acc": 18,
            "nme": "clientSessionContext",
            "dsc": "Lorg/conscrypt/ClientSessionContext;"
          },
          {
            "acc": 18,
            "nme": "serverSessionContext",
            "dsc": "Lorg/conscrypt/ServerSessionContext;"
          },
          {
            "acc": 18,
            "nme": "x509KeyManager",
            "dsc": "Ljavax/net/ssl/X509KeyManager;"
          },
          {
            "acc": 18,
            "nme": "pskKeyManager",
            "dsc": "Lorg/conscrypt/PSKKeyManager;"
          },
          {
            "acc": 18,
            "nme": "x509TrustManager",
            "dsc": "Ljavax/net/ssl/X509TrustManager;"
          },
          {
            "acc": 0,
            "nme": "enabledProtocols",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 0,
            "nme": "isEnabledProtocolsFiltered",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "enabledCipherSuites",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "client_mode",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "need_client_auth",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "want_client_auth",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "enable_session_creation",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "endpointIdentificationAlgorithm",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "useCipherSuitesOrder",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "sniMatchers",
            "dsc": "Ljava/util/Collection;",
            "sig": "Ljava/util/Collection<Ljavax/net/ssl/SNIMatcher;>;"
          },
          {
            "acc": 2,
            "nme": "algorithmConstraints",
            "dsc": "Ljava/security/AlgorithmConstraints;"
          },
          {
            "acc": 2,
            "nme": "ctVerificationEnabled",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "sctExtension",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "ocspResponse",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "applicationProtocols",
            "dsc": "[B"
          },
          {
            "acc": 0,
            "nme": "applicationProtocolSelector",
            "dsc": "Lorg/conscrypt/ApplicationProtocolSelectorAdapter;"
          },
          {
            "acc": 0,
            "nme": "useSessionTickets",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "useSni",
            "dsc": "Ljava/lang/Boolean;"
          },
          {
            "acc": 0,
            "nme": "channelIdEnabled",
            "dsc": "Z"
          },
          {
            "acc": 26,
            "nme": "EMPTY_STRING_ARRAY",
            "dsc": "[Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/ConscryptFileDescriptorSocket$SSLOutputStream.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptFileDescriptorSocket$SSLOutputStream",
        "super": "java/io/OutputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)V"
          },
          {
            "nme": "write",
            "acc": 1,
            "dsc": "(I)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "write",
            "acc": 1,
            "dsc": "([BII)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "awaitPendingOps",
            "acc": 0,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "writeLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA256RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA256RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/Java9PlatformUtil.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Java9PlatformUtil",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "setSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getSSLParameters",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLParameters;Lorg/conscrypt/SSLParametersImpl;Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)[Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 10,
            "dsc": "(Ljavax/net/ssl/SSLParameters;[Ljava/lang/String;)V"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "SSL_PARAMETERS_GET_APPLICATION_PROTOCOLS_METHOD",
            "dsc": "Ljava/lang/reflect/Method;"
          },
          {
            "acc": 26,
            "nme": "SSL_PARAMETERS_SET_APPLICATION_PROTOCOLS_METHOD",
            "dsc": "Ljava/lang/reflect/Method;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "configureEVP_PKEY_CTX",
            "acc": 20,
            "dsc": "(J)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ArrayUtils.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ArrayUtils",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "checkOffsetAndCount",
            "acc": 8,
            "dsc": "(III)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA384.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA384",
        "super": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/Conscrypt$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Conscrypt$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/HostnameVerifier;)V"
          },
          {
            "nme": "verify",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$verifier",
            "dsc": "Ljavax/net/ssl/HostnameVerifier;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$CBC",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/AllocatedBuffer.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/AllocatedBuffer",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "nioBuffer",
            "acc": 1025,
            "dsc": "()Ljava/nio/ByteBuffer;"
          },
          {
            "nme": "retain",
            "acc": 131073,
            "dsc": "()Lorg/conscrypt/AllocatedBuffer;",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "release",
            "acc": 1025,
            "dsc": "()Lorg/conscrypt/AllocatedBuffer;"
          },
          {
            "nme": "wrap",
            "acc": 9,
            "dsc": "(Ljava/nio/ByteBuffer;)Lorg/conscrypt/AllocatedBuffer;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$SHA1RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA1RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/HostProperties$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/HostProperties$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$SHA384RSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA384RSA",
        "super": "org/conscrypt/OpenSSLSignature$RSAPKCS1Padding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLECPrivateKey.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLECPrivateKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLECGroupContext;Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/security/spec/ECPrivateKeySpec;)V",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "wrapPlatformKey",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/ECPrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapJCAPrivateKeyForTLSStackOnly",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapJCAPrivateKeyForTLSStackOnly",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/spec/ECParameterSpec;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapPlatformKey",
            "acc": 10,
            "dsc": "(Ljava/security/interfaces/ECPrivateKey;Lorg/conscrypt/OpenSSLECGroupContext;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/ECPrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getAlgorithm",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getFormat",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getParams",
            "acc": 1,
            "dsc": "()Ljava/security/spec/ECParameterSpec;"
          },
          {
            "nme": "getS",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPrivateKey",
            "acc": 2,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getOpenSSLKey",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "readObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectInputStream;)V",
            "exs": [
              "java/io/IOException",
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "writeObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": -4036633595001083922
          },
          {
            "acc": 26,
            "nme": "ALGORITHM",
            "dsc": "Ljava/lang/String;",
            "val": "EC"
          },
          {
            "acc": 132,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 132,
            "nme": "group",
            "dsc": "Lorg/conscrypt/OpenSSLECGroupContext;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CTR.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$CTR",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeConstants.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeConstants",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "EXFLAG_CA",
            "dsc": "I",
            "val": 16
          },
          {
            "acc": 24,
            "nme": "EXFLAG_CRITICAL",
            "dsc": "I",
            "val": 512
          },
          {
            "acc": 24,
            "nme": "EVP_PKEY_RSA",
            "dsc": "I",
            "val": 6
          },
          {
            "acc": 24,
            "nme": "EVP_PKEY_EC",
            "dsc": "I",
            "val": 408
          },
          {
            "acc": 24,
            "nme": "RSA_PKCS1_PADDING",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "RSA_NO_PADDING",
            "dsc": "I",
            "val": 3
          },
          {
            "acc": 24,
            "nme": "RSA_PKCS1_OAEP_PADDING",
            "dsc": "I",
            "val": 4
          },
          {
            "acc": 24,
            "nme": "RSA_PKCS1_PSS_PADDING",
            "dsc": "I",
            "val": 6
          },
          {
            "acc": 24,
            "nme": "SSL_MODE_SEND_FALLBACK_SCSV",
            "dsc": "I",
            "val": 1024
          },
          {
            "acc": 24,
            "nme": "SSL_MODE_CBC_RECORD_SPLITTING",
            "dsc": "I",
            "val": 256
          },
          {
            "acc": 24,
            "nme": "SSL_MODE_ENABLE_FALSE_START",
            "dsc": "I",
            "val": 128
          },
          {
            "acc": 24,
            "nme": "SSL_OP_CIPHER_SERVER_PREFERENCE",
            "dsc": "I",
            "val": 4194304
          },
          {
            "acc": 24,
            "nme": "SSL_OP_NO_TICKET",
            "dsc": "I",
            "val": 16384
          },
          {
            "acc": 24,
            "nme": "SSL_ERROR_NONE",
            "dsc": "I",
            "val": 0
          },
          {
            "acc": 24,
            "nme": "SSL_ERROR_WANT_READ",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "SSL_ERROR_WANT_WRITE",
            "dsc": "I",
            "val": 3
          },
          {
            "acc": 24,
            "nme": "SSL_ERROR_ZERO_RETURN",
            "dsc": "I",
            "val": 6
          },
          {
            "acc": 24,
            "nme": "TLS1_VERSION",
            "dsc": "I",
            "val": 769
          },
          {
            "acc": 24,
            "nme": "TLS1_1_VERSION",
            "dsc": "I",
            "val": 770
          },
          {
            "acc": 24,
            "nme": "TLS1_2_VERSION",
            "dsc": "I",
            "val": 771
          },
          {
            "acc": 24,
            "nme": "TLS1_3_VERSION",
            "dsc": "I",
            "val": 772
          },
          {
            "acc": 24,
            "nme": "SSL_TLSEXT_ERR_NOACK",
            "dsc": "I",
            "val": 3
          },
          {
            "acc": 24,
            "nme": "SSL_SENT_SHUTDOWN",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "SSL_RECEIVED_SHUTDOWN",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "TLS_CT_RSA_SIGN",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "TLS_CT_ECDSA_SIGN",
            "dsc": "I",
            "val": 64
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PKCS1_SHA1",
            "dsc": "I",
            "val": 513
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PKCS1_SHA256",
            "dsc": "I",
            "val": 1025
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PKCS1_SHA384",
            "dsc": "I",
            "val": 1281
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PKCS1_SHA512",
            "dsc": "I",
            "val": 1537
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_ECDSA_SHA1",
            "dsc": "I",
            "val": 515
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_ECDSA_SECP256R1_SHA256",
            "dsc": "I",
            "val": 1027
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_ECDSA_SECP384R1_SHA384",
            "dsc": "I",
            "val": 1283
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_ECDSA_SECP521R1_SHA512",
            "dsc": "I",
            "val": 1539
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PSS_RSAE_SHA256",
            "dsc": "I",
            "val": 2052
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PSS_RSAE_SHA384",
            "dsc": "I",
            "val": 2053
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_RSA_PSS_RSAE_SHA512",
            "dsc": "I",
            "val": 2054
          },
          {
            "acc": 24,
            "nme": "SSL_SIGN_ED25519",
            "dsc": "I",
            "val": 2055
          },
          {
            "acc": 24,
            "nme": "SSL_VERIFY_NONE",
            "dsc": "I",
            "val": 0
          },
          {
            "acc": 24,
            "nme": "SSL_VERIFY_PEER",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "SSL_VERIFY_FAIL_IF_NO_PEER_CERT",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "SSL_CB_HANDSHAKE_START",
            "dsc": "I",
            "val": 16
          },
          {
            "acc": 24,
            "nme": "SSL_CB_HANDSHAKE_DONE",
            "dsc": "I",
            "val": 32
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_MAX_PLAIN_LENGTH",
            "dsc": "I",
            "val": 16384
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_MAX_PACKET_SIZE",
            "dsc": "I",
            "val": 16709
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_CHANGE_CIPHER_SPEC",
            "dsc": "I",
            "val": 20
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_ALERT",
            "dsc": "I",
            "val": 21
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_HANDSHAKE",
            "dsc": "I",
            "val": 22
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_APPLICATION_DATA",
            "dsc": "I",
            "val": 23
          },
          {
            "acc": 24,
            "nme": "SSL3_RT_HEADER_LENGTH",
            "dsc": "I",
            "val": 5
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA1ECDSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA1ECDSA",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/KeyGeneratorImpl$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/KeyGeneratorImpl$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/OpenSSLMac$HmacMD5.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMac$HmacMD5",
        "super": "org/conscrypt/OpenSSLMac",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/HostProperties$Architecture.class": {
        "ver": 51,
        "acc": 16416,
        "nme": "org/conscrypt/HostProperties$Architecture",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I)V",
            "sig": "()V"
          },
          {
            "nme": "getFileComponent",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Ljava/lang/String;ILorg/conscrypt/HostProperties$1;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "X86_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "X86_32",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "ITANIUM_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "SPARC_32",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "SPARC_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "ARM_32",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "AARCH_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "PPC_32",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "PPC_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "PPCLE_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "S390_32",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "S390_64",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 16409,
            "nme": "UNKNOWN",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/HostProperties$Architecture;"
          }
        ]
      },
      "org/conscrypt/OpenSSLContextImpl.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLContextImpl",
        "super": "javax/net/ssl/SSLContextSpi",
        "mthds": [
          {
            "nme": "getPreferred",
            "acc": 8,
            "dsc": "()Lorg/conscrypt/OpenSSLContextImpl;"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "([Ljava/lang/String;Z)V",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 1,
            "dsc": "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/KeyManagementException"
            ]
          },
          {
            "nme": "engineGetSocketFactory",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSocketFactory;"
          },
          {
            "nme": "engineGetServerSocketFactory",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLServerSocketFactory;"
          },
          {
            "nme": "engineCreateSSLEngine",
            "acc": 1,
            "dsc": "(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "engineCreateSSLEngine",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "engineGetServerSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "engineGetClientSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          }
        ],
        "flds": [
          {
            "acc": 10,
            "nme": "defaultSslContextImpl",
            "dsc": "Lorg/conscrypt/DefaultSSLContextImpl;"
          },
          {
            "acc": 18,
            "nme": "protocols",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "clientSessionContext",
            "dsc": "Lorg/conscrypt/ClientSessionContext;"
          },
          {
            "acc": 18,
            "nme": "serverSessionContext",
            "dsc": "Lorg/conscrypt/ServerSessionContext;"
          },
          {
            "acc": 0,
            "nme": "sslParameters",
            "dsc": "Lorg/conscrypt/SSLParametersImpl;"
          }
        ]
      },
      "org/conscrypt/OpenSSLSignature$SHA384RSAPSS.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA384RSAPSS",
        "super": "org/conscrypt/OpenSSLSignature$RSAPSSPadding",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/KeyGeneratorImpl$HmacSHA224.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$HmacSHA224",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeCrypto.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/NativeCrypto",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "clinit",
            "acc": 266,
            "dsc": "()V"
          },
          {
            "nme": "checkAvailability",
            "acc": 8,
            "dsc": "()V"
          },
          {
            "nme": "EVP_PKEY_new_RSA",
            "acc": 264,
            "dsc": "([B[B[B[B[B[B[B[B)J"
          },
          {
            "nme": "EVP_PKEY_type",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "EVP_PKEY_print_public",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)Ljava/lang/String;"
          },
          {
            "nme": "EVP_PKEY_print_params",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)Ljava/lang/String;"
          },
          {
            "nme": "EVP_PKEY_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EVP_PKEY_cmp",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;Lorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "EVP_marshal_private_key",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)[B"
          },
          {
            "nme": "EVP_parse_private_key",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "EVP_marshal_public_key",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)[B"
          },
          {
            "nme": "EVP_parse_public_key",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "PEM_read_bio_PUBKEY",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "PEM_read_bio_PrivateKey",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "getRSAPrivateKeyWrapper",
            "acc": 264,
            "dsc": "(Ljava/security/PrivateKey;[B)J"
          },
          {
            "nme": "getECPrivateKeyWrapper",
            "acc": 264,
            "dsc": "(Ljava/security/PrivateKey;Lorg/conscrypt/NativeRef$EC_GROUP;)J"
          },
          {
            "nme": "RSA_generate_key_ex",
            "acc": 264,
            "dsc": "(I[B)J"
          },
          {
            "nme": "RSA_size",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "RSA_private_encrypt",
            "acc": 264,
            "dsc": "(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I"
          },
          {
            "nme": "RSA_public_decrypt",
            "acc": 264,
            "dsc": "(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "RSA_public_encrypt",
            "acc": 264,
            "dsc": "(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I"
          },
          {
            "nme": "RSA_private_decrypt",
            "acc": 264,
            "dsc": "(I[B[BLorg/conscrypt/NativeRef$EVP_PKEY;I)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "get_RSA_public_params",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)[[B"
          },
          {
            "nme": "get_RSA_private_params",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)[[B"
          },
          {
            "nme": "chacha20_encrypt_decrypt",
            "acc": 264,
            "dsc": "([BI[BII[B[BI)V"
          },
          {
            "nme": "EVP_PKEY_new_EC_KEY",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;Lorg/conscrypt/NativeRef$EC_POINT;[B)J"
          },
          {
            "nme": "EC_GROUP_new_by_curve_name",
            "acc": 264,
            "dsc": "(Ljava/lang/String;)J"
          },
          {
            "nme": "EC_GROUP_new_arbitrary",
            "acc": 264,
            "dsc": "([B[B[B[B[B[BI)J"
          },
          {
            "nme": "EC_GROUP_get_curve_name",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)Ljava/lang/String;"
          },
          {
            "nme": "EC_GROUP_get_curve",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)[[B"
          },
          {
            "nme": "EC_GROUP_clear_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EC_GROUP_get_generator",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)J"
          },
          {
            "nme": "EC_GROUP_get_order",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)[B"
          },
          {
            "nme": "EC_GROUP_get_degree",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)I"
          },
          {
            "nme": "EC_GROUP_get_cofactor",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)[B"
          },
          {
            "nme": "EC_POINT_new",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)J"
          },
          {
            "nme": "EC_POINT_clear_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EC_POINT_get_affine_coordinates",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;Lorg/conscrypt/NativeRef$EC_POINT;)[[B"
          },
          {
            "nme": "EC_POINT_set_affine_coordinates",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;Lorg/conscrypt/NativeRef$EC_POINT;[B[B)V"
          },
          {
            "nme": "EC_KEY_generate_key",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)J"
          },
          {
            "nme": "EC_KEY_get1_group",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)J"
          },
          {
            "nme": "EC_KEY_get_private_key",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)[B"
          },
          {
            "nme": "EC_KEY_get_public_key",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)J"
          },
          {
            "nme": "EC_KEY_marshal_curve_name",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EC_GROUP;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "EC_KEY_parse_curve_name",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ECDH_compute_key",
            "acc": 264,
            "dsc": "([BILorg/conscrypt/NativeRef$EVP_PKEY;Lorg/conscrypt/NativeRef$EVP_PKEY;)I",
            "exs": [
              "java/security/InvalidKeyException",
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "ECDSA_size",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "ECDSA_sign",
            "acc": 264,
            "dsc": "([B[BLorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "ECDSA_verify",
            "acc": 264,
            "dsc": "([B[BLorg/conscrypt/NativeRef$EVP_PKEY;)I"
          },
          {
            "nme": "EVP_get_digestbyname",
            "acc": 264,
            "dsc": "(Ljava/lang/String;)J"
          },
          {
            "nme": "EVP_MD_size",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "EVP_MD_CTX_create",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_MD_CTX_cleanup",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;)V"
          },
          {
            "nme": "EVP_MD_CTX_destroy",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EVP_MD_CTX_copy_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;Lorg/conscrypt/NativeRef$EVP_MD_CTX;)I"
          },
          {
            "nme": "EVP_DigestInit_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;J)I"
          },
          {
            "nme": "EVP_DigestUpdate",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;[BII)V"
          },
          {
            "nme": "EVP_DigestUpdateDirect",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;JI)V"
          },
          {
            "nme": "EVP_DigestFinal_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;[BI)I"
          },
          {
            "nme": "EVP_DigestSignInit",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;JLorg/conscrypt/NativeRef$EVP_PKEY;)J"
          },
          {
            "nme": "EVP_DigestVerifyInit",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;JLorg/conscrypt/NativeRef$EVP_PKEY;)J"
          },
          {
            "nme": "EVP_DigestSignUpdate",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;[BII)V"
          },
          {
            "nme": "EVP_DigestSignUpdateDirect",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;JI)V"
          },
          {
            "nme": "EVP_DigestVerifyUpdate",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;[BII)V"
          },
          {
            "nme": "EVP_DigestVerifyUpdateDirect",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;JI)V"
          },
          {
            "nme": "EVP_DigestSignFinal",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;)[B"
          },
          {
            "nme": "EVP_DigestVerifyFinal",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_MD_CTX;[BII)Z",
            "exs": [
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "EVP_PKEY_encrypt_init",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "EVP_PKEY_encrypt",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY_CTX;[BI[BII)I",
            "exs": [
              "java/lang/IndexOutOfBoundsException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "EVP_PKEY_decrypt_init",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY;)J",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "EVP_PKEY_decrypt",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_PKEY_CTX;[BI[BII)I",
            "exs": [
              "java/lang/IndexOutOfBoundsException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "EVP_PKEY_CTX_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EVP_PKEY_CTX_set_rsa_padding",
            "acc": 264,
            "dsc": "(JI)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "EVP_PKEY_CTX_set_rsa_pss_saltlen",
            "acc": 264,
            "dsc": "(JI)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "EVP_PKEY_CTX_set_rsa_mgf1_md",
            "acc": 264,
            "dsc": "(JJ)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "EVP_PKEY_CTX_set_rsa_oaep_md",
            "acc": 264,
            "dsc": "(JJ)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "EVP_PKEY_CTX_set_rsa_oaep_label",
            "acc": 264,
            "dsc": "(J[B)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "EVP_get_cipherbyname",
            "acc": 264,
            "dsc": "(Ljava/lang/String;)J"
          },
          {
            "nme": "EVP_CipherInit_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;J[B[BZ)V"
          },
          {
            "nme": "EVP_CipherUpdate",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;[BI[BII)I",
            "exs": [
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "EVP_CipherFinal_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;[BI)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "javax/crypto/IllegalBlockSizeException"
            ]
          },
          {
            "nme": "EVP_CIPHER_iv_length",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "EVP_CIPHER_CTX_new",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_CIPHER_CTX_block_size",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;)I"
          },
          {
            "nme": "get_EVP_CIPHER_CTX_buf_len",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;)I"
          },
          {
            "nme": "get_EVP_CIPHER_CTX_final_used",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;)Z"
          },
          {
            "nme": "EVP_CIPHER_CTX_set_padding",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;Z)V"
          },
          {
            "nme": "EVP_CIPHER_CTX_set_key_length",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$EVP_CIPHER_CTX;I)V"
          },
          {
            "nme": "EVP_CIPHER_CTX_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "EVP_aead_aes_128_gcm",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_aead_aes_256_gcm",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_aead_chacha20_poly1305",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_aead_aes_128_gcm_siv",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_aead_aes_256_gcm_siv",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "EVP_AEAD_max_overhead",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "EVP_AEAD_nonce_length",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "EVP_AEAD_CTX_seal",
            "acc": 264,
            "dsc": "(J[BI[BI[B[BII[B)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "EVP_AEAD_CTX_seal_buf",
            "acc": 264,
            "dsc": "(J[BILjava/nio/ByteBuffer;[BLjava/nio/ByteBuffer;[B)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "EVP_AEAD_CTX_open",
            "acc": 264,
            "dsc": "(J[BI[BI[B[BII[B)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "EVP_AEAD_CTX_open_buf",
            "acc": 264,
            "dsc": "(J[BILjava/nio/ByteBuffer;[BLjava/nio/ByteBuffer;[B)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "HMAC_CTX_new",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "HMAC_CTX_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "HMAC_Init_ex",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$HMAC_CTX;[BJ)V"
          },
          {
            "nme": "HMAC_Update",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$HMAC_CTX;[BII)V"
          },
          {
            "nme": "HMAC_UpdateDirect",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$HMAC_CTX;JI)V"
          },
          {
            "nme": "HMAC_Final",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/NativeRef$HMAC_CTX;)[B"
          },
          {
            "nme": "RAND_bytes",
            "acc": 264,
            "dsc": "([B)V"
          },
          {
            "nme": "X509_NAME_hash",
            "acc": 8,
            "dsc": "(Ljavax/security/auth/x500/X500Principal;)I"
          },
          {
            "nme": "X509_NAME_hash_old",
            "acc": 9,
            "dsc": "(Ljavax/security/auth/x500/X500Principal;)I"
          },
          {
            "nme": "X509_NAME_hash",
            "acc": 10,
            "dsc": "(Ljavax/security/auth/x500/X500Principal;Ljava/lang/String;)I"
          },
          {
            "nme": "d2i_X509_bio",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "d2i_X509",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "PEM_read_bio_X509",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "i2d_X509",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "i2d_X509_PUBKEY",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "ASN1_seq_pack_X509",
            "acc": 264,
            "dsc": "([J)[B"
          },
          {
            "nme": "ASN1_seq_unpack_X509_bio",
            "acc": 264,
            "dsc": "(J)[J",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "X509_free",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)V"
          },
          {
            "nme": "X509_dup",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)J"
          },
          {
            "nme": "X509_cmp",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;JLorg/conscrypt/OpenSSLX509Certificate;)I"
          },
          {
            "nme": "X509_print_ex",
            "acc": 264,
            "dsc": "(JJLorg/conscrypt/OpenSSLX509Certificate;JJ)V"
          },
          {
            "nme": "X509_get_issuer_name",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "X509_get_subject_name",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "get_X509_sig_alg_oid",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)Ljava/lang/String;"
          },
          {
            "nme": "get_X509_sig_alg_parameter",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "get_X509_issuerUID",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[Z"
          },
          {
            "nme": "get_X509_subjectUID",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[Z"
          },
          {
            "nme": "X509_get_pubkey",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)J",
            "exs": [
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "get_X509_pubkey_oid",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)Ljava/lang/String;"
          },
          {
            "nme": "X509_get_ext_oid",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;Ljava/lang/String;)[B"
          },
          {
            "nme": "get_X509_ext_oids",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;I)[Ljava/lang/String;"
          },
          {
            "nme": "get_X509_GENERAL_NAME_stack",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;I)[[Ljava/lang/Object;",
            "exs": [
              "java/security/cert/CertificateParsingException"
            ]
          },
          {
            "nme": "get_X509_ex_kusage",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[Z"
          },
          {
            "nme": "get_X509_ex_xkusage",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[Ljava/lang/String;"
          },
          {
            "nme": "get_X509_ex_pathlen",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)I"
          },
          {
            "nme": "X509_get_notBefore",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)J"
          },
          {
            "nme": "X509_get_notAfter",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)J"
          },
          {
            "nme": "X509_get_version",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)J"
          },
          {
            "nme": "X509_get_serialNumber",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "X509_verify",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/NativeRef$EVP_PKEY;)V",
            "exs": [
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "get_X509_cert_info_enc",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "get_X509_signature",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "get_X509_ex_flags",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;)I"
          },
          {
            "nme": "X509_check_issued",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;JLorg/conscrypt/OpenSSLX509Certificate;)I"
          },
          {
            "nme": "d2i_PKCS7_bio",
            "acc": 264,
            "dsc": "(JI)[J",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "i2d_PKCS7",
            "acc": 264,
            "dsc": "([J)[B"
          },
          {
            "nme": "PEM_read_bio_PKCS7",
            "acc": 264,
            "dsc": "(JI)[J"
          },
          {
            "nme": "d2i_X509_CRL_bio",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "PEM_read_bio_X509_CRL",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "i2d_X509_CRL",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[B"
          },
          {
            "nme": "X509_CRL_free",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)V"
          },
          {
            "nme": "X509_CRL_print",
            "acc": 264,
            "dsc": "(JJLorg/conscrypt/OpenSSLX509CRL;)V"
          },
          {
            "nme": "get_X509_CRL_sig_alg_oid",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)Ljava/lang/String;"
          },
          {
            "nme": "get_X509_CRL_sig_alg_parameter",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[B"
          },
          {
            "nme": "X509_CRL_get_issuer_name",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[B"
          },
          {
            "nme": "X509_CRL_get0_by_cert",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;JLorg/conscrypt/OpenSSLX509Certificate;)J"
          },
          {
            "nme": "X509_CRL_get0_by_serial",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;[B)J"
          },
          {
            "nme": "X509_CRL_get_REVOKED",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[J"
          },
          {
            "nme": "get_X509_CRL_ext_oids",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;I)[Ljava/lang/String;"
          },
          {
            "nme": "X509_CRL_get_ext_oid",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;Ljava/lang/String;)[B"
          },
          {
            "nme": "X509_delete_ext",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509Certificate;Ljava/lang/String;)V"
          },
          {
            "nme": "X509_CRL_get_version",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)J"
          },
          {
            "nme": "X509_CRL_get_ext",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;Ljava/lang/String;)J"
          },
          {
            "nme": "get_X509_CRL_signature",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[B"
          },
          {
            "nme": "X509_CRL_verify",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;Lorg/conscrypt/NativeRef$EVP_PKEY;)V",
            "exs": [
              "javax/crypto/BadPaddingException",
              "java/security/SignatureException",
              "java/security/NoSuchAlgorithmException",
              "java/security/InvalidKeyException",
              "javax/crypto/IllegalBlockSizeException"
            ]
          },
          {
            "nme": "get_X509_CRL_crl_enc",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)[B"
          },
          {
            "nme": "X509_CRL_get_lastUpdate",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)J"
          },
          {
            "nme": "X509_CRL_get_nextUpdate",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/OpenSSLX509CRL;)J"
          },
          {
            "nme": "X509_REVOKED_dup",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "i2d_X509_REVOKED",
            "acc": 264,
            "dsc": "(J)[B"
          },
          {
            "nme": "get_X509_REVOKED_ext_oids",
            "acc": 264,
            "dsc": "(JI)[Ljava/lang/String;"
          },
          {
            "nme": "X509_REVOKED_get_ext_oid",
            "acc": 264,
            "dsc": "(JLjava/lang/String;)[B"
          },
          {
            "nme": "X509_REVOKED_get_serialNumber",
            "acc": 264,
            "dsc": "(J)[B"
          },
          {
            "nme": "X509_REVOKED_get_ext",
            "acc": 264,
            "dsc": "(JLjava/lang/String;)J"
          },
          {
            "nme": "get_X509_REVOKED_revocationDate",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "X509_REVOKED_print",
            "acc": 264,
            "dsc": "(JJ)V"
          },
          {
            "nme": "X509_supported_extension",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "ASN1_TIME_to_Calendar",
            "acc": 264,
            "dsc": "(JLjava/util/Calendar;)V",
            "exs": [
              "org/conscrypt/OpenSSLX509CertificateFactory$ParsingException"
            ]
          },
          {
            "nme": "asn1_read_init",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_sequence",
            "acc": 264,
            "dsc": "(J)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_next_tag_is",
            "acc": 264,
            "dsc": "(JI)Z",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_tagged",
            "acc": 264,
            "dsc": "(J)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_octetstring",
            "acc": 264,
            "dsc": "(J)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_uint64",
            "acc": 264,
            "dsc": "(J)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_null",
            "acc": 264,
            "dsc": "(J)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_oid",
            "acc": 264,
            "dsc": "(J)Ljava/lang/String;",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_read_is_empty",
            "acc": 264,
            "dsc": "(J)Z"
          },
          {
            "nme": "asn1_read_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "asn1_write_init",
            "acc": 264,
            "dsc": "()J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_sequence",
            "acc": 264,
            "dsc": "(J)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_tag",
            "acc": 264,
            "dsc": "(JI)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_octetstring",
            "acc": 264,
            "dsc": "(J[B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_uint64",
            "acc": 264,
            "dsc": "(JJ)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_null",
            "acc": 264,
            "dsc": "(J)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_oid",
            "acc": 264,
            "dsc": "(JLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_flush",
            "acc": 264,
            "dsc": "(J)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_finish",
            "acc": 264,
            "dsc": "(J)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "asn1_write_cleanup",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "asn1_write_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "create_BIO_InputStream",
            "acc": 264,
            "dsc": "(Lorg/conscrypt/OpenSSLBIOInputStream;Z)J"
          },
          {
            "nme": "create_BIO_OutputStream",
            "acc": 264,
            "dsc": "(Ljava/io/OutputStream;)J"
          },
          {
            "nme": "BIO_free_all",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "cipherSuiteToJava",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "cipherSuiteFromJava",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "EVP_has_aes_hardware",
            "acc": 264,
            "dsc": "()I"
          },
          {
            "nme": "SSL_CTX_new",
            "acc": 264,
            "dsc": "()J"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 8,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "SSL_CTX_free",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/AbstractSessionContext;)V"
          },
          {
            "nme": "SSL_CTX_set_session_id_context",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/AbstractSessionContext;[B)V"
          },
          {
            "nme": "SSL_CTX_set_timeout",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/AbstractSessionContext;J)J"
          },
          {
            "nme": "SSL_new",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/AbstractSessionContext;)J",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_enable_tls_channel_id",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_get_tls_channel_id",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_set1_tls_channel_id",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Lorg/conscrypt/NativeRef$EVP_PKEY;)V"
          },
          {
            "nme": "setLocalCertsAndPrivateKey",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[[BLorg/conscrypt/NativeRef$EVP_PKEY;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_set_client_CA_list",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[[B)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_set_mode",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)J"
          },
          {
            "nme": "SSL_set_options",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)J"
          },
          {
            "nme": "SSL_clear_options",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)J"
          },
          {
            "nme": "SSL_set_protocol_versions",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;II)I"
          },
          {
            "nme": "SSL_enable_signed_cert_timestamps",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_get_signed_cert_timestamp_list",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B"
          },
          {
            "nme": "SSL_set_signed_cert_timestamp_list",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[B)V"
          },
          {
            "nme": "SSL_enable_ocsp_stapling",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_get_ocsp_response",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B"
          },
          {
            "nme": "SSL_set_ocsp_response",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[B)V"
          },
          {
            "nme": "SSL_get_tls_unique",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B"
          },
          {
            "nme": "SSL_export_keying_material",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[B[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_use_psk_identity_hint",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/lang/String;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "set_SSL_psk_client_callback_enabled",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Z)V"
          },
          {
            "nme": "set_SSL_psk_server_callback_enabled",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Z)V"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 8,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getProtocolRange",
            "acc": 10,
            "dsc": "([Ljava/lang/String;)Lorg/conscrypt/NativeCrypto$Range;"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 8,
            "dsc": "(JLorg/conscrypt/NativeSsl;[Ljava/lang/String;)V"
          },
          {
            "nme": "getProtocolConstant",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)I"
          },
          {
            "nme": "checkEnabledProtocols",
            "acc": 8,
            "dsc": "([Ljava/lang/String;)[Ljava/lang/String;"
          },
          {
            "nme": "SSL_set_cipher_lists",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;[Ljava/lang/String;)V"
          },
          {
            "nme": "SSL_get_ciphers",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[J"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 8,
            "dsc": "(JLorg/conscrypt/NativeSsl;[Ljava/lang/String;[Ljava/lang/String;)V"
          },
          {
            "nme": "checkEnabledCipherSuites",
            "acc": 8,
            "dsc": "([Ljava/lang/String;)[Ljava/lang/String;"
          },
          {
            "nme": "SSL_set_accept_state",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_set_connect_state",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_set_verify",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;I)V"
          },
          {
            "nme": "SSL_set_session",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_set_session_creation_enabled",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Z)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_session_reused",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)Z"
          },
          {
            "nme": "SSL_accept_renegotiations",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_set_tlsext_host_name",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/lang/String;)V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_get_servername",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)Ljava/lang/String;"
          },
          {
            "nme": "SSL_do_handshake",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/io/FileDescriptor;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;I)V",
            "exs": [
              "javax/net/ssl/SSLException",
              "java/net/SocketTimeoutException",
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "SSL_get_current_cipher",
            "acc": 265,
            "dsc": "(JLorg/conscrypt/NativeSsl;)Ljava/lang/String;"
          },
          {
            "nme": "SSL_get_version",
            "acc": 265,
            "dsc": "(JLorg/conscrypt/NativeSsl;)Ljava/lang/String;"
          },
          {
            "nme": "SSL_get0_peer_certificates",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[[B"
          },
          {
            "nme": "SSL_read",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/io/FileDescriptor;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;[BIII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "SSL_write",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/io/FileDescriptor;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;[BIII)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "SSL_interrupt",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_shutdown",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Ljava/io/FileDescriptor;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "SSL_get_shutdown",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)I"
          },
          {
            "nme": "SSL_free",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)V"
          },
          {
            "nme": "SSL_get_time",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "SSL_set_timeout",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)J"
          },
          {
            "nme": "SSL_get_timeout",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "SSL_get_signature_algorithm_key_type",
            "acc": 264,
            "dsc": "(I)I"
          },
          {
            "nme": "SSL_session_id",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B"
          },
          {
            "nme": "SSL_SESSION_session_id",
            "acc": 264,
            "dsc": "(J)[B"
          },
          {
            "nme": "SSL_SESSION_get_time",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "SSL_SESSION_get_timeout",
            "acc": 264,
            "dsc": "(J)J"
          },
          {
            "nme": "SSL_SESSION_get_version",
            "acc": 264,
            "dsc": "(J)Ljava/lang/String;"
          },
          {
            "nme": "SSL_SESSION_cipher",
            "acc": 264,
            "dsc": "(J)Ljava/lang/String;"
          },
          {
            "nme": "SSL_SESSION_should_be_single_use",
            "acc": 264,
            "dsc": "(J)Z"
          },
          {
            "nme": "SSL_SESSION_up_ref",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "SSL_SESSION_free",
            "acc": 264,
            "dsc": "(J)V"
          },
          {
            "nme": "i2d_SSL_SESSION",
            "acc": 264,
            "dsc": "(J)[B"
          },
          {
            "nme": "d2i_SSL_SESSION",
            "acc": 264,
            "dsc": "([B)J",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "SSL_CIPHER_get_kx_name",
            "acc": 264,
            "dsc": "(J)Ljava/lang/String;"
          },
          {
            "nme": "get_cipher_names",
            "acc": 264,
            "dsc": "(Ljava/lang/String;)[Ljava/lang/String;"
          },
          {
            "nme": "get_ocsp_single_extension",
            "acc": 265,
            "dsc": "([BLjava/lang/String;JLorg/conscrypt/OpenSSLX509Certificate;JLorg/conscrypt/OpenSSLX509Certificate;)[B"
          },
          {
            "nme": "getDirectBufferAddress",
            "acc": 264,
            "dsc": "(Ljava/nio/Buffer;)J"
          },
          {
            "nme": "SSL_BIO_new",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "SSL_get_error",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;I)I"
          },
          {
            "nme": "SSL_clear_error",
            "acc": 264,
            "dsc": "()V"
          },
          {
            "nme": "SSL_pending_readable_bytes",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)I"
          },
          {
            "nme": "SSL_pending_written_bytes_in_BIO",
            "acc": 264,
            "dsc": "(J)I"
          },
          {
            "nme": "SSL_max_seal_overhead",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)I"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Z[B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "setHasApplicationProtocolSelector",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Z)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)[B"
          },
          {
            "nme": "ENGINE_SSL_do_handshake",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ENGINE_SSL_read_direct",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;JILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException",
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "ENGINE_SSL_write_direct",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;JILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ENGINE_SSL_write_BIO_direct",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;JJILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ENGINE_SSL_write_BIO_heap",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J[BIILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException",
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "ENGINE_SSL_read_BIO_direct",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;JJILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ENGINE_SSL_read_BIO_heap",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J[BIILorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)I",
            "exs": [
              "java/io/IOException",
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "ENGINE_SSL_force_read",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "ENGINE_SSL_shutdown",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;Lorg/conscrypt/NativeCrypto$SSLHandshakeCallbacks;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "BIO_read",
            "acc": 264,
            "dsc": "(J[B)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "BIO_write",
            "acc": 264,
            "dsc": "(J[BII)V",
            "exs": [
              "java/io/IOException",
              "java/lang/IndexOutOfBoundsException"
            ]
          },
          {
            "nme": "SSL_clear_mode",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;J)J"
          },
          {
            "nme": "SSL_get_mode",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "SSL_get_options",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "SSL_get1_session",
            "acc": 264,
            "dsc": "(JLorg/conscrypt/NativeSsl;)J"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "loadError",
            "dsc": "Ljava/lang/UnsatisfiedLinkError;"
          },
          {
            "acc": 24,
            "nme": "GN_STACK_SUBJECT_ALT_NAME",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "GN_STACK_ISSUER_ALT_NAME",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "EXTENSION_TYPE_NON_CRITICAL",
            "dsc": "I",
            "val": 0
          },
          {
            "acc": 24,
            "nme": "EXTENSION_TYPE_CRITICAL",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "PKCS7_CERTS",
            "dsc": "I",
            "val": 1
          },
          {
            "acc": 24,
            "nme": "PKCS7_CRLS",
            "dsc": "I",
            "val": 2
          },
          {
            "acc": 24,
            "nme": "OBSOLETE_PROTOCOL_SSLV3",
            "dsc": "Ljava/lang/String;",
            "val": "SSLv3"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_PROTOCOL_TLSV1",
            "dsc": "Ljava/lang/String;",
            "val": "TLSv1"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_PROTOCOL_TLSV1_1",
            "dsc": "Ljava/lang/String;",
            "val": "TLSv1.1"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_PROTOCOL_TLSV1_2",
            "dsc": "Ljava/lang/String;",
            "val": "TLSv1.2"
          },
          {
            "acc": 24,
            "nme": "SUPPORTED_PROTOCOL_TLSV1_3",
            "dsc": "Ljava/lang/String;",
            "val": "TLSv1.3"
          },
          {
            "acc": 24,
            "nme": "SUPPORTED_TLS_1_3_CIPHER_SUITES",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "SUPPORTED_TLS_1_2_CIPHER_SUITES_SET",
            "dsc": "Ljava/util/Set;",
            "sig": "Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_LEGACY_CIPHER_SUITES_SET",
            "dsc": "Ljava/util/Set;",
            "sig": "Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "acc": 24,
            "nme": "SUPPORTED_TLS_1_3_CIPHER_SUITES_SET",
            "dsc": "Ljava/util/Set;",
            "sig": "Ljava/util/Set<Ljava/lang/String;>;"
          },
          {
            "acc": 24,
            "nme": "TLS_EMPTY_RENEGOTIATION_INFO_SCSV",
            "dsc": "Ljava/lang/String;",
            "val": "TLS_EMPTY_RENEGOTIATION_INFO_SCSV"
          },
          {
            "acc": 26,
            "nme": "TLS_FALLBACK_SCSV",
            "dsc": "Ljava/lang/String;",
            "val": "TLS_FALLBACK_SCSV"
          },
          {
            "acc": 26,
            "nme": "HAS_AES_HARDWARE",
            "dsc": "Z"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_TLS_1_2_CIPHER_SUITES",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "DEFAULT_X509_CIPHER_SUITES",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "DEFAULT_PSK_CIPHER_SUITES",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "TLSV13_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "TLSV12_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "TLSV11_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "TLSV1_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 24,
            "nme": "DEFAULT_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          },
          {
            "acc": 26,
            "nme": "SUPPORTED_PROTOCOLS",
            "dsc": "[Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/ConscryptEngine$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptEngine$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "provideSession",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/ConscryptSession;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptEngine;"
          }
        ]
      },
      "org/conscrypt/ActiveSession.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ActiveSession",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSsl;Lorg/conscrypt/AbstractSessionContext;)V"
          },
          {
            "nme": "getId",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getCreationTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "setLastAccessedTime",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "getStatusResponses",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "invalidate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "isValid",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "putValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "getValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "removeValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getValueNames",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 1,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getCipherSuite",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "onPeerCertificatesReceived",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I[Ljava/security/cert/X509Certificate;)V"
          },
          {
            "nme": "configurePeer",
            "acc": 2,
            "dsc": "(Ljava/lang/String;I[Ljava/security/cert/X509Certificate;)V"
          },
          {
            "nme": "onPeerCertificateAvailable",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkPeerCertificatesPresent",
            "acc": 2,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerCertificates",
            "acc": 4161,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "ssl",
            "dsc": "Lorg/conscrypt/NativeSsl;"
          },
          {
            "acc": 2,
            "nme": "sessionContext",
            "dsc": "Lorg/conscrypt/AbstractSessionContext;"
          },
          {
            "acc": 2,
            "nme": "id",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "creationTime",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "protocol",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "applicationProtocol",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "peerHost",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "peerPort",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "lastAccessedTime",
            "dsc": "J"
          },
          {
            "acc": 66,
            "nme": "peerCertificateChain",
            "dsc": "[Ljavax/security/cert/X509Certificate;"
          },
          {
            "acc": 2,
            "nme": "localCertificates",
            "dsc": "[Ljava/security/cert/X509Certificate;"
          },
          {
            "acc": 2,
            "nme": "peerCertificates",
            "dsc": "[Ljava/security/cert/X509Certificate;"
          },
          {
            "acc": 2,
            "nme": "peerCertificateOcspData",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "peerTlsSctData",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/ExternalSession.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ExternalSession",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ExternalSession$Provider;)V"
          },
          {
            "nme": "getRequestedServerName",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getStatusResponses",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<[B>;"
          },
          {
            "nme": "getPeerSignedCertificateTimestamp",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getId",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "getSessionContext",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSessionContext;"
          },
          {
            "nme": "getCreationTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "getLastAccessedTime",
            "acc": 1,
            "dsc": "()J"
          },
          {
            "nme": "invalidate",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "isValid",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalCertificates",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/Certificate;"
          },
          {
            "nme": "getPeerCertificateChain",
            "acc": 1,
            "dsc": "()[Ljavax/security/cert/X509Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getPeerPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          },
          {
            "nme": "getLocalPrincipal",
            "acc": 1,
            "dsc": "()Ljava/security/Principal;"
          },
          {
            "nme": "getCipherSuite",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getPacketBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationBufferSize",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;"
          },
          {
            "nme": "getValueNames",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "putValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "putValue",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/SSLSession;Ljava/lang/String;Ljava/lang/Object;)V"
          },
          {
            "nme": "removeValue",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "removeValue",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/SSLSession;Ljava/lang/String;)V"
          },
          {
            "nme": "getPeerCertificates",
            "acc": 4161,
            "dsc": "()[Ljava/security/cert/Certificate;",
            "exs": [
              "javax/net/ssl/SSLPeerUnverifiedException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "values",
            "dsc": "Ljava/util/HashMap;",
            "sig": "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
          },
          {
            "acc": 18,
            "nme": "provider",
            "dsc": "Lorg/conscrypt/ExternalSession$Provider;"
          }
        ]
      },
      "org/conscrypt/Java8FileDescriptorSocket$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Java8FileDescriptorSocket$1",
        "super": "org/conscrypt/ApplicationProtocolSelector",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/util/function/BiFunction;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$selector",
            "dsc": "Ljava/util/function/BiFunction;"
          }
        ]
      },
      "org/conscrypt/TrustManagerImpl$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/TrustManagerImpl$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/Java8ExtendedSSLSession.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Java8ExtendedSSLSession",
        "super": "org/conscrypt/Java7ExtendedSSLSession",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ExternalSession;)V"
          },
          {
            "nme": "getRequestedServerNames",
            "acc": 17,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<Ljavax/net/ssl/SNIServerName;>;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/KeyManagerImpl.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/KeyManagerImpl",
        "super": "javax/net/ssl/X509ExtendedKeyManager",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/security/KeyStore;[C)V"
          },
          {
            "nme": "chooseClientAlias",
            "acc": 1,
            "dsc": "([Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "chooseServerAlias",
            "acc": 1,
            "dsc": "(Ljava/lang/String;[Ljava/security/Principal;Ljava/net/Socket;)Ljava/lang/String;"
          },
          {
            "nme": "getCertificateChain",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)[Ljava/security/cert/X509Certificate;"
          },
          {
            "nme": "getClientAliases",
            "acc": 1,
            "dsc": "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;"
          },
          {
            "nme": "getServerAliases",
            "acc": 1,
            "dsc": "(Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;"
          },
          {
            "nme": "getPrivateKey",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Ljava/security/PrivateKey;"
          },
          {
            "nme": "chooseEngineClientAlias",
            "acc": 1,
            "dsc": "([Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "chooseEngineServerAlias",
            "acc": 1,
            "dsc": "(Ljava/lang/String;[Ljava/security/Principal;Ljavax/net/ssl/SSLEngine;)Ljava/lang/String;"
          },
          {
            "nme": "chooseAlias",
            "acc": 2,
            "dsc": "([Ljava/lang/String;[Ljava/security/Principal;)[Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "hash",
            "dsc": "Ljava/util/HashMap;",
            "sig": "Ljava/util/HashMap<Ljava/lang/String;Ljava/security/KeyStore$PrivateKeyEntry;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLRSAPublicKey.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLRSAPublicKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLKey;)V"
          },
          {
            "nme": "getOpenSSLKey",
            "acc": 1,
            "dsc": "()Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/security/spec/RSAPublicKeySpec;)V",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "getInstance",
            "acc": 8,
            "dsc": "(Ljava/security/interfaces/RSAPublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getAlgorithm",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getFormat",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "ensureReadParams",
            "acc": 34,
            "dsc": "()V"
          },
          {
            "nme": "getModulus",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "getPublicExponent",
            "acc": 1,
            "dsc": "()Ljava/math/BigInteger;"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "readObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectInputStream;)V",
            "exs": [
              "java/io/IOException",
              "java/lang/ClassNotFoundException"
            ]
          },
          {
            "nme": "writeObject",
            "acc": 2,
            "dsc": "(Ljava/io/ObjectOutputStream;)V",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 123125005824688292
          },
          {
            "acc": 130,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 2,
            "nme": "publicExponent",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 2,
            "nme": "modulus",
            "dsc": "Ljava/math/BigInteger;"
          },
          {
            "acc": 130,
            "nme": "fetchedParams",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/DefaultSSLContextImpl$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/DefaultSSLContextImpl$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/SSLUtils$SessionType.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/SSLUtils$SessionType",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/SSLUtils$SessionType;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/SSLUtils$SessionType;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;II)V",
            "sig": "(I)V"
          },
          {
            "nme": "isSupportedType",
            "acc": 8,
            "dsc": "(I)Z"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "OPEN_SSL",
            "dsc": "Lorg/conscrypt/SSLUtils$SessionType;"
          },
          {
            "acc": 16409,
            "nme": "OPEN_SSL_WITH_OCSP",
            "dsc": "Lorg/conscrypt/SSLUtils$SessionType;"
          },
          {
            "acc": 16409,
            "nme": "OPEN_SSL_WITH_TLS_SCT",
            "dsc": "Lorg/conscrypt/SSLUtils$SessionType;"
          },
          {
            "acc": 16,
            "nme": "value",
            "dsc": "I"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/SSLUtils$SessionType;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP$SHA1",
        "super": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/Java8EngineWrapper.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/Java8EngineWrapper",
        "super": "org/conscrypt/AbstractConscryptEngine",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngine;)V"
          },
          {
            "nme": "getDelegate",
            "acc": 8,
            "dsc": "(Ljavax/net/ssl/SSLEngine;)Ljavax/net/ssl/SSLEngine;"
          },
          {
            "nme": "wrap",
            "acc": 1,
            "dsc": "([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getSSLParameters",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLParameters;"
          },
          {
            "nme": "setSSLParameters",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLParameters;)V"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "maxSealOverhead",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 0,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 0,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "setHandshakeListener",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/HandshakeListener;)V"
          },
          {
            "nme": "setHostname",
            "acc": 0,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "beginHandshake",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "closeInbound",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "closeOutbound",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "getDelegatedTask",
            "acc": 1,
            "dsc": "()Ljava/lang/Runnable;"
          },
          {
            "nme": "getEnabledCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnabledProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getEnableSessionCreation",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getHandshakeStatus",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;"
          },
          {
            "nme": "getNeedClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "handshakeSession",
            "acc": 0,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getSession",
            "acc": 1,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "getSupportedCipherSuites",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getSupportedProtocols",
            "acc": 1,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getUseClientMode",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "getWantClientAuth",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isInboundDone",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "isOutboundDone",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "setEnabledCipherSuites",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setEnabledProtocols",
            "acc": 1,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "setEnableSessionCreation",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setNeedClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setUseClientMode",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "setWantClientAuth",
            "acc": 1,
            "dsc": "(Z)V"
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 0,
            "dsc": "([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 0,
            "dsc": "([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1,
            "dsc": "([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 0,
            "dsc": "(Z)V"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 0,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 0,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 0,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "(Ljava/util/function/BiFunction;)V",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)V"
          },
          {
            "nme": "getHandshakeApplicationProtocolSelector",
            "acc": 1,
            "dsc": "()Ljava/util/function/BiFunction;",
            "sig": "()Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          },
          {
            "nme": "toApplicationProtocolSelector",
            "acc": 10,
            "dsc": "(Ljava/util/function/BiFunction;)Lorg/conscrypt/ApplicationProtocolSelector;",
            "sig": "(Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;)Lorg/conscrypt/ApplicationProtocolSelector;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "delegate",
            "dsc": "Lorg/conscrypt/ConscryptEngine;"
          },
          {
            "acc": 2,
            "nme": "selector",
            "dsc": "Ljava/util/function/BiFunction;",
            "sig": "Ljava/util/function/BiFunction<Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$MD5.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$MD5",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLContextImpl$TLSv12.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLContextImpl$TLSv12",
        "super": "org/conscrypt/OpenSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/TrustManagerImpl$TrustAnchorComparator.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/TrustManagerImpl$TrustAnchorComparator",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "compare",
            "acc": 1,
            "dsc": "(Ljava/security/cert/TrustAnchor;Ljava/security/cert/TrustAnchor;)I"
          },
          {
            "nme": "compare",
            "acc": 4161,
            "dsc": "(Ljava/lang/Object;Ljava/lang/Object;)I"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/TrustManagerImpl$1;)V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "CERT_COMPARATOR",
            "dsc": "Lorg/conscrypt/CertificatePriorityComparator;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK",
        "super": "java/security/MessageDigestSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JI)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(JILorg/conscrypt/NativeRef$EVP_MD_CTX;Z)V"
          },
          {
            "nme": "ensureDigestInitializedInContext",
            "acc": 34,
            "dsc": "()V"
          },
          {
            "nme": "engineReset",
            "acc": 36,
            "dsc": "()V"
          },
          {
            "nme": "engineGetDigestLength",
            "acc": 4,
            "dsc": "()I"
          },
          {
            "nme": "engineUpdate",
            "acc": 36,
            "dsc": "(B)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 36,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 36,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "engineDigest",
            "acc": 36,
            "dsc": "()[B"
          },
          {
            "nme": "clone",
            "acc": 1,
            "dsc": "()Ljava/lang/Object;"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(JILorg/conscrypt/OpenSSLMessageDigestJDK$1;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "ctx",
            "dsc": "Lorg/conscrypt/NativeRef$EVP_MD_CTX;"
          },
          {
            "acc": 18,
            "nme": "evp_md",
            "dsc": "J"
          },
          {
            "acc": 18,
            "nme": "size",
            "dsc": "I"
          },
          {
            "acc": 18,
            "nme": "singleByte",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "digestInitializedInContext",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/KeyManagerFactoryImpl.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/KeyManagerFactoryImpl",
        "super": "javax/net/ssl/KeyManagerFactorySpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/KeyStore;[C)V",
            "exs": [
              "java/security/KeyStoreException",
              "java/security/NoSuchAlgorithmException",
              "java/security/UnrecoverableKeyException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljavax/net/ssl/ManagerFactoryParameters;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineGetKeyManagers",
            "acc": 4,
            "dsc": "()[Ljavax/net/ssl/KeyManager;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "keyStore",
            "dsc": "Ljava/security/KeyStore;"
          },
          {
            "acc": 2,
            "nme": "pwd",
            "dsc": "[C"
          }
        ]
      },
      "org/conscrypt/AbstractSessionContext$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/AbstractSessionContext$2",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;Ljava/util/Iterator;)V"
          },
          {
            "nme": "hasMoreElements",
            "acc": 1,
            "dsc": "()Z"
          },
          {
            "nme": "nextElement",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "nextElement",
            "acc": 4161,
            "dsc": "()Ljava/lang/Object;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "next",
            "dsc": "Lorg/conscrypt/NativeSslSession;"
          },
          {
            "acc": 4112,
            "nme": "val$iter",
            "dsc": "Ljava/util/Iterator;"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/AbstractSessionContext;"
          }
        ]
      },
      "org/conscrypt/DefaultSSLContextImpl$TLSv12.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/DefaultSSLContextImpl$TLSv12",
        "super": "org/conscrypt/DefaultSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLX509CertPath.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLX509CertPath",
        "super": "java/security/cert/CertPath",
        "mthds": [
          {
            "nme": "getEncodingsIterator",
            "acc": 8,
            "dsc": "()Ljava/util/Iterator;",
            "sig": "()Ljava/util/Iterator<Ljava/lang/String;>;"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/util/List;)V",
            "sig": "(Ljava/util/List<+Ljava/security/cert/X509Certificate;>;)V"
          },
          {
            "nme": "getCertificates",
            "acc": 1,
            "dsc": "()Ljava/util/List;",
            "sig": "()Ljava/util/List<+Ljava/security/cert/Certificate;>;"
          },
          {
            "nme": "getEncoded",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLX509CertPath$Encoding;)[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "getEncodings",
            "acc": 1,
            "dsc": "()Ljava/util/Iterator;",
            "sig": "()Ljava/util/Iterator<Ljava/lang/String;>;"
          },
          {
            "nme": "fromPkiPathEncoding",
            "acc": 10,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "fromPkcs7Encoding",
            "acc": 10,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "fromEncoding",
            "acc": 10,
            "dsc": "(Ljava/io/InputStream;Lorg/conscrypt/OpenSSLX509CertPath$Encoding;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "fromEncoding",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "fromEncoding",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Ljava/security/cert/CertPath;",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": -3249106005255170761
          },
          {
            "acc": 26,
            "nme": "PKCS7_MARKER",
            "dsc": "[B"
          },
          {
            "acc": 26,
            "nme": "PUSHBACK_SIZE",
            "dsc": "I",
            "val": 64
          },
          {
            "acc": 26,
            "nme": "ALL_ENCODINGS",
            "dsc": "Ljava/util/List;",
            "sig": "Ljava/util/List<Ljava/lang/String;>;"
          },
          {
            "acc": 26,
            "nme": "DEFAULT_ENCODING",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          },
          {
            "acc": 18,
            "nme": "mCertificates",
            "dsc": "Ljava/util/List;",
            "sig": "Ljava/util/List<+Ljava/security/cert/X509Certificate;>;"
          }
        ]
      },
      "org/conscrypt/OpenSSLAeadCipherAES$GCM$AES_128.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLAeadCipherAES$GCM$AES_128",
        "super": "org/conscrypt/OpenSSLAeadCipherAES$GCM",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/EvpMdRef$SHA1.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef$SHA1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "JCA_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "SHA-1"
          },
          {
            "acc": 24,
            "nme": "OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.3.14.3.2.26"
          },
          {
            "acc": 24,
            "nme": "EVP_MD",
            "dsc": "J"
          },
          {
            "acc": 24,
            "nme": "SIZE_BYTES",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$Raw.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$Raw",
        "super": "org/conscrypt/OpenSSLCipherRSA$DirectRSA",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLKey.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/OpenSSLKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(JZ)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(JZZ)V"
          },
          {
            "nme": "getNativeRef",
            "acc": 0,
            "dsc": "()Lorg/conscrypt/NativeRef$EVP_PKEY;"
          },
          {
            "nme": "isWrapped",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "isHardwareBacked",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "fromPrivateKey",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "fromPrivateKeyPemInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "fromPrivateKeyForTLSStackOnly",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "fromECPrivateKeyForTLSStackOnly",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/spec/ECParameterSpec;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getOpenSSLKey",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;)Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "nme": "fromKeyMaterial",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapJCAPrivateKeyForTLSStackOnly",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;Ljava/security/PublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "wrapPrivateKey",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "fromPublicKey",
            "acc": 8,
            "dsc": "(Ljava/security/PublicKey;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "fromPublicKeyPemInputStream",
            "acc": 8,
            "dsc": "(Ljava/io/InputStream;)Lorg/conscrypt/OpenSSLKey;",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "getPublicKey",
            "acc": 0,
            "dsc": "()Ljava/security/PublicKey;",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getPublicKey",
            "acc": 8,
            "dsc": "(Ljava/security/spec/X509EncodedKeySpec;I)Ljava/security/PublicKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "getPrivateKey",
            "acc": 0,
            "dsc": "()Ljava/security/PrivateKey;",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getPrivateKey",
            "acc": 8,
            "dsc": "(Ljava/security/spec/PKCS8EncodedKeySpec;I)Ljava/security/PrivateKey;",
            "exs": [
              "java/security/spec/InvalidKeySpecException"
            ]
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "ctx",
            "dsc": "Lorg/conscrypt/NativeRef$EVP_PKEY;"
          },
          {
            "acc": 18,
            "nme": "wrapped",
            "dsc": "Z"
          },
          {
            "acc": 18,
            "nme": "hardwareBacked",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/SSLParametersImpl$PSKCallbacks.class": {
        "ver": 51,
        "acc": 1536,
        "nme": "org/conscrypt/SSLParametersImpl$PSKCallbacks",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "chooseServerPSKIdentityHint",
            "acc": 1025,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;)Ljava/lang/String;"
          },
          {
            "nme": "chooseClientPSKIdentity",
            "acc": 1025,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "getPSKKey",
            "acc": 1025,
            "dsc": "(Lorg/conscrypt/PSKKeyManager;Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/SecretKey;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/CryptoUpcalls.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/CryptoUpcalls",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "getExternalProviders",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)Ljava/util/ArrayList;",
            "sig": "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/security/Provider;>;"
          },
          {
            "nme": "ecSignDigestWithPrivateKey",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;[B)[B"
          },
          {
            "nme": "signDigestWithPrivateKey",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;[BLjava/lang/String;)[B"
          },
          {
            "nme": "rsaSignDigestWithPrivateKey",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;I[B)[B"
          },
          {
            "nme": "rsaDecryptWithPrivateKey",
            "acc": 8,
            "dsc": "(Ljava/security/PrivateKey;I[B)[B"
          },
          {
            "nme": "rsaOpWithPrivateKey",
            "acc": 10,
            "dsc": "(Ljava/security/PrivateKey;II[B)[B"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          }
        ]
      },
      "org/conscrypt/OpenSSLKeyHolder.class": {
        "ver": 51,
        "acc": 1537,
        "nme": "org/conscrypt/OpenSSLKeyHolder",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getOpenSSLKey",
            "acc": 1025,
            "dsc": "()Lorg/conscrypt/OpenSSLKey;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLCipherRSA.class": {
        "ver": 51,
        "acc": 1057,
        "nme": "org/conscrypt/OpenSSLCipherRSA",
        "super": "javax/crypto/CipherSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(I)V"
          },
          {
            "nme": "engineSetMode",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "engineSetPadding",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "engineGetBlockSize",
            "acc": 4,
            "dsc": "()I"
          },
          {
            "nme": "engineGetOutputSize",
            "acc": 4,
            "dsc": "(I)I"
          },
          {
            "nme": "paddedBlockSizeBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "keySizeBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "isInitialized",
            "acc": 0,
            "dsc": "()Z"
          },
          {
            "nme": "engineGetIV",
            "acc": 4,
            "dsc": "()[B"
          },
          {
            "nme": "engineGetParameters",
            "acc": 4,
            "dsc": "()Ljava/security/AlgorithmParameters;"
          },
          {
            "nme": "doCryptoInit",
            "acc": 0,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException",
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitInternal",
            "acc": 0,
            "dsc": "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineGetKeySize",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)I",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)[B"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII[BI)I",
            "exs": [
              "javax/crypto/ShortBufferException"
            ]
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "([BII)[B",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "doCryptoOperation",
            "acc": 1024,
            "dsc": "([B[B)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "javax/crypto/IllegalBlockSizeException"
            ]
          },
          {
            "nme": "engineDoFinal",
            "acc": 4,
            "dsc": "([BII[BI)I",
            "exs": [
              "javax/crypto/ShortBufferException",
              "javax/crypto/IllegalBlockSizeException",
              "javax/crypto/BadPaddingException"
            ]
          },
          {
            "nme": "engineWrap",
            "acc": 4,
            "dsc": "(Ljava/security/Key;)[B",
            "exs": [
              "javax/crypto/IllegalBlockSizeException",
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineUnwrap",
            "acc": 4,
            "dsc": "([BLjava/lang/String;I)Ljava/security/Key;",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 0,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 0,
            "nme": "usingPrivateKey",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "encrypting",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "buffer",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "bufferOffset",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "inputTooLarge",
            "dsc": "Z"
          },
          {
            "acc": 0,
            "nme": "padding",
            "dsc": "I"
          }
        ]
      },
      "org/conscrypt/HostProperties.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/HostProperties",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "isWindows",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "isOSX",
            "acc": 8,
            "dsc": "()Z"
          },
          {
            "nme": "getTempDir",
            "acc": 8,
            "dsc": "()Ljava/io/File;"
          },
          {
            "nme": "toDirectory",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)Ljava/io/File;"
          },
          {
            "nme": "normalize",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "getOperatingSystem",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "nme": "getArchitecture",
            "acc": 10,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/HostProperties$Architecture;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "logger",
            "dsc": "Ljava/util/logging/Logger;"
          },
          {
            "acc": 26,
            "nme": "TEMP_DIR_PROPERTY_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "org.conscrypt.tmpdir"
          },
          {
            "acc": 24,
            "nme": "OS",
            "dsc": "Lorg/conscrypt/HostProperties$OperatingSystem;"
          },
          {
            "acc": 24,
            "nme": "ARCH",
            "dsc": "Lorg/conscrypt/HostProperties$Architecture;"
          }
        ]
      },
      "org/conscrypt/ConscryptEngineSocket$2.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptEngineSocket$2",
        "super": "javax/net/ssl/X509ExtendedTrustManager",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/X509ExtendedTrustManager;Lorg/conscrypt/ConscryptEngineSocket;)V"
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljava/net/Socket;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;Ljavax/net/ssl/SSLEngine;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkClientTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkServerTrusted",
            "acc": 1,
            "dsc": "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "getAcceptedIssuers",
            "acc": 1,
            "dsc": "()[Ljava/security/cert/X509Certificate;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$extendedDelegate",
            "dsc": "Ljavax/net/ssl/X509ExtendedTrustManager;"
          },
          {
            "acc": 4112,
            "nme": "val$socket",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLCipherRSA$PKCS1.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLCipherRSA$PKCS1",
        "super": "org/conscrypt/OpenSSLCipherRSA$DirectRSA",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/HostProperties$Architecture$1.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/HostProperties$Architecture$1",
        "super": "org/conscrypt/HostProperties$Architecture",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;I)V"
          },
          {
            "nme": "getFileComponent",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignature$SHA224ECDSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignature$SHA224ECDSA",
        "super": "org/conscrypt/OpenSSLSignature",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLSignatureRawRSA.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLSignatureRawRSA",
        "super": "java/security/SignatureSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "(B)V"
          },
          {
            "nme": "engineUpdate",
            "acc": 4,
            "dsc": "([BII)V"
          },
          {
            "nme": "engineGetParameter",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)Ljava/lang/Object;",
            "exs": [
              "java/security/InvalidParameterException"
            ]
          },
          {
            "nme": "engineInitSign",
            "acc": 4,
            "dsc": "(Ljava/security/PrivateKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineInitVerify",
            "acc": 4,
            "dsc": "(Ljava/security/PublicKey;)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "engineSetParameter",
            "acc": 4,
            "dsc": "(Ljava/lang/String;Ljava/lang/Object;)V",
            "exs": [
              "java/security/InvalidParameterException"
            ]
          },
          {
            "nme": "engineSign",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/security/SignatureException"
            ]
          },
          {
            "nme": "engineVerify",
            "acc": 4,
            "dsc": "([B)Z",
            "exs": [
              "java/security/SignatureException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "key",
            "dsc": "Lorg/conscrypt/OpenSSLKey;"
          },
          {
            "acc": 2,
            "nme": "inputBuffer",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "inputOffset",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "inputIsTooLong",
            "dsc": "Z"
          }
        ]
      },
      "org/conscrypt/Java8EngineSocket$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Java8EngineSocket$1",
        "super": "org/conscrypt/ApplicationProtocolSelector",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/util/function/BiFunction;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLEngine;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 1,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List;)Ljava/lang/String;",
            "sig": "(Ljavax/net/ssl/SSLSocket;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$selector",
            "dsc": "Ljava/util/function/BiFunction;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_256.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_256",
        "super": "org/conscrypt/OpenSSLEvpCipherAES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/Conscrypt$ProviderBuilder.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/Conscrypt$ProviderBuilder",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "setName",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/Conscrypt$ProviderBuilder;"
          },
          {
            "nme": "provideTrustManager",
            "acc": 131073,
            "dsc": "()Lorg/conscrypt/Conscrypt$ProviderBuilder;",
            "vanns": [
              {
                "dsc": "Ljava/lang/Deprecated;"
              }
            ]
          },
          {
            "nme": "provideTrustManager",
            "acc": 1,
            "dsc": "(Z)Lorg/conscrypt/Conscrypt$ProviderBuilder;"
          },
          {
            "nme": "defaultTlsProtocol",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/Conscrypt$ProviderBuilder;"
          },
          {
            "nme": "build",
            "acc": 1,
            "dsc": "()Ljava/security/Provider;"
          },
          {
            "nme": "<init>",
            "acc": 4096,
            "dsc": "(Lorg/conscrypt/Conscrypt$1;)V"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "name",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 2,
            "nme": "provideTrustManager",
            "dsc": "Z"
          },
          {
            "acc": 2,
            "nme": "defaultTlsProtocol",
            "dsc": "Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$ARC4.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$ARC4",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkKeySize",
            "acc": 4,
            "dsc": "(I)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ServerSessionContext.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/ServerSessionContext",
        "super": "org/conscrypt/AbstractSessionContext",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "setPersistentCache",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/SSLServerSessionCache;)V"
          },
          {
            "nme": "getSessionFromPersistentCache",
            "acc": 0,
            "dsc": "([B)Lorg/conscrypt/NativeSslSession;"
          },
          {
            "nme": "onBeforeAddSession",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          },
          {
            "nme": "onBeforeRemoveSession",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/NativeSslSession;)V"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "persistentCache",
            "dsc": "Lorg/conscrypt/SSLServerSessionCache;"
          }
        ]
      },
      "org/conscrypt/NativeCryptoJni.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeCryptoJni",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "init",
            "acc": 8,
            "dsc": "()V",
            "exs": [
              "java/lang/UnsatisfiedLinkError"
            ]
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          },
          {
            "nme": "logResults",
            "acc": 10,
            "dsc": "(Ljava/util/List;)V",
            "sig": "(Ljava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;)V"
          },
          {
            "nme": "throwBestError",
            "acc": 10,
            "dsc": "(Ljava/util/List;)V",
            "sig": "(Ljava/util/List<Lorg/conscrypt/NativeLibraryLoader$LoadResult;>;)V"
          },
          {
            "nme": "classLoader",
            "acc": 10,
            "dsc": "()Ljava/lang/ClassLoader;"
          },
          {
            "nme": "platformLibName",
            "acc": 10,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "osName",
            "acc": 10,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "archName",
            "acc": 10,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "STATIC_LIB_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "conscrypt"
          },
          {
            "acc": 26,
            "nme": "DYNAMIC_LIB_NAME_PREFIX",
            "dsc": "Ljava/lang/String;",
            "val": "conscrypt_openjdk_jni"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$SHA224.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$SHA224",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/Platform$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/Platform$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "run",
            "acc": 1,
            "dsc": "()Ljava/lang/ClassLoader;"
          },
          {
            "nme": "run",
            "acc": 4161,
            "dsc": "()Ljava/lang/Object;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB$NoPadding.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB$NoPadding",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES_128$ECB",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/AbstractConscryptEngine.class": {
        "ver": 51,
        "acc": 1056,
        "nme": "org/conscrypt/AbstractConscryptEngine",
        "super": "javax/net/ssl/SSLEngine",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "setBufferAllocator",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/BufferAllocator;)V"
          },
          {
            "nme": "maxSealOverhead",
            "acc": 1024,
            "dsc": "()I"
          },
          {
            "nme": "setChannelIdEnabled",
            "acc": 1024,
            "dsc": "(Z)V"
          },
          {
            "nme": "getChannelId",
            "acc": 1024,
            "dsc": "()[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setChannelIdPrivateKey",
            "acc": 1024,
            "dsc": "(Ljava/security/PrivateKey;)V"
          },
          {
            "nme": "setHandshakeListener",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/HandshakeListener;)V"
          },
          {
            "nme": "setHostname",
            "acc": 1024,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "getHostname",
            "acc": 1024,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerHost",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPeerPort",
            "acc": 1025,
            "dsc": "()I"
          },
          {
            "nme": "getHandshakeSession",
            "acc": 17,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "handshakeSession",
            "acc": 1024,
            "dsc": "()Ljavax/net/ssl/SSLSession;"
          },
          {
            "nme": "unwrap",
            "acc": 1025,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1025,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1025,
            "dsc": "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1024,
            "dsc": "([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "unwrap",
            "acc": 1024,
            "dsc": "([Ljava/nio/ByteBuffer;II[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1025,
            "dsc": "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "wrap",
            "acc": 1025,
            "dsc": "([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          },
          {
            "nme": "setUseSessionTickets",
            "acc": 1024,
            "dsc": "(Z)V"
          },
          {
            "nme": "setApplicationProtocols",
            "acc": 1024,
            "dsc": "([Ljava/lang/String;)V"
          },
          {
            "nme": "getApplicationProtocols",
            "acc": 1024,
            "dsc": "()[Ljava/lang/String;"
          },
          {
            "nme": "getApplicationProtocol",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHandshakeApplicationProtocol",
            "acc": 1025,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "setApplicationProtocolSelector",
            "acc": 1024,
            "dsc": "(Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "getTlsUnique",
            "acc": 1024,
            "dsc": "()[B"
          },
          {
            "nme": "exportKeyingMaterial",
            "acc": 1024,
            "dsc": "(Ljava/lang/String;[BI)[B",
            "exs": [
              "javax/net/ssl/SSLException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/DefaultSSLContextImpl$TLSv13.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/DefaultSSLContextImpl$TLSv13",
        "super": "org/conscrypt/DefaultSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/GeneralSecurityException",
              "java/io/IOException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/ChainStrengthAnalyzer.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/ChainStrengthAnalyzer",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "check",
            "acc": 25,
            "dsc": "([Ljava/security/cert/X509Certificate;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "check",
            "acc": 25,
            "dsc": "(Ljava/util/List;)V",
            "sig": "(Ljava/util/List<Ljava/security/cert/X509Certificate;>;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkCert",
            "acc": 25,
            "dsc": "(Ljava/security/cert/X509Certificate;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkKeyLength",
            "acc": 10,
            "dsc": "(Ljava/security/cert/X509Certificate;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "checkSignatureAlgorithm",
            "acc": 10,
            "dsc": "(Ljava/security/cert/X509Certificate;)V",
            "exs": [
              "java/security/cert/CertificateException"
            ]
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "MIN_RSA_MODULUS_LEN_BITS",
            "dsc": "I",
            "val": 1024
          },
          {
            "acc": 26,
            "nme": "MIN_EC_FIELD_SIZE_BITS",
            "dsc": "I",
            "val": 160
          },
          {
            "acc": 26,
            "nme": "MIN_DSA_P_LEN_BITS",
            "dsc": "I",
            "val": 1024
          },
          {
            "acc": 26,
            "nme": "MIN_DSA_Q_LEN_BITS",
            "dsc": "I",
            "val": 160
          },
          {
            "acc": 26,
            "nme": "SIGNATURE_ALGORITHM_OID_BLACKLIST",
            "dsc": "[Ljava/lang/String;"
          }
        ]
      },
      "org/conscrypt/ConscryptFileDescriptorSocket$SSLInputStream.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptFileDescriptorSocket$SSLInputStream",
        "super": "java/io/InputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptFileDescriptorSocket;)V"
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "available",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "awaitPendingOps",
            "acc": 0,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "readLock",
            "dsc": "Ljava/lang/Object;"
          },
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/ConscryptFileDescriptorSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLMessageDigestJDK$SHA384.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLMessageDigestJDK$SHA384",
        "super": "org/conscrypt/OpenSSLMessageDigestJDK",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLCipherRSA$OAEP.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLCipherRSA$OAEP",
        "super": "org/conscrypt/OpenSSLCipherRSA",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(JI)V"
          },
          {
            "nme": "engineGetParameters",
            "acc": 4,
            "dsc": "()Ljava/security/AlgorithmParameters;"
          },
          {
            "nme": "engineSetPadding",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)V",
            "exs": [
              "javax/crypto/NoSuchPaddingException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "engineInitInternal",
            "acc": 0,
            "dsc": "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidKeyException",
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "doCryptoInit",
            "acc": 0,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException",
              "java/security/InvalidKeyException"
            ]
          },
          {
            "nme": "paddedBlockSizeBytes",
            "acc": 0,
            "dsc": "()I"
          },
          {
            "nme": "readOAEPParameters",
            "acc": 2,
            "dsc": "(Ljavax/crypto/spec/OAEPParameterSpec;)V",
            "exs": [
              "java/security/InvalidAlgorithmParameterException"
            ]
          },
          {
            "nme": "doCryptoOperation",
            "acc": 0,
            "dsc": "([B[B)I",
            "exs": [
              "javax/crypto/BadPaddingException",
              "javax/crypto/IllegalBlockSizeException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "oaepMd",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "oaepMdSizeBytes",
            "dsc": "I"
          },
          {
            "acc": 2,
            "nme": "mgf1Md",
            "dsc": "J"
          },
          {
            "acc": 2,
            "nme": "label",
            "dsc": "[B"
          },
          {
            "acc": 2,
            "nme": "pkeyCtx",
            "dsc": "Lorg/conscrypt/NativeRef$EVP_PKEY_CTX;"
          }
        ]
      },
      "org/conscrypt/ct/SerializationException.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/SerializationException",
        "super": "java/lang/Exception",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/String;Ljava/lang/Throwable;)V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/Throwable;)V"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": -5317873136664833411
          }
        ]
      },
      "org/conscrypt/AbstractConscryptSocket$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/AbstractConscryptSocket$1",
        "super": "org/conscrypt/PeerInfoProvider",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/AbstractConscryptSocket;)V"
          },
          {
            "nme": "getHostname",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getHostnameOrIP",
            "acc": 0,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getPort",
            "acc": 0,
            "dsc": "()I"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/AbstractConscryptSocket;"
          }
        ]
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES",
        "super": "org/conscrypt/OpenSSLEvpCipherAES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/OpenSSLCipher$Mode;Lorg/conscrypt/OpenSSLCipher$Padding;)V"
          },
          {
            "nme": "checkSupportedKeySize",
            "acc": 0,
            "dsc": "(I)V",
            "exs": [
              "java/security/InvalidKeyException"
            ]
          }
        ],
        "flds": []
      },
      "org/conscrypt/EvpMdRef.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/EvpMdRef",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "getJcaDigestAlgorithmStandardName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Ljava/lang/String;"
          },
          {
            "nme": "getEVP_MDByJcaDigestAlgorithmStandardName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)J",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getDigestSizeBytesByJcaDigestAlgorithmStandardName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)I",
            "exs": [
              "java/security/NoSuchAlgorithmException"
            ]
          },
          {
            "nme": "getJcaDigestAlgorithmStandardNameFromEVP_MD",
            "acc": 8,
            "dsc": "(J)Ljava/lang/String;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 24,
            "nme": "MGF1_ALGORITHM_NAME",
            "dsc": "Ljava/lang/String;",
            "val": "MGF1"
          },
          {
            "acc": 24,
            "nme": "MGF1_OID",
            "dsc": "Ljava/lang/String;",
            "val": "1.2.840.113549.1.1.8"
          }
        ]
      },
      "org/conscrypt/ApplicationProtocolSelectorAdapter.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ApplicationProtocolSelectorAdapter",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/SSLEngine;Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljavax/net/ssl/SSLSocket;Lorg/conscrypt/ApplicationProtocolSelector;)V"
          },
          {
            "nme": "selectApplicationProtocol",
            "acc": 0,
            "dsc": "([B)I"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "NO_PROTOCOL_SELECTED",
            "dsc": "I",
            "val": -1
          },
          {
            "acc": 18,
            "nme": "engine",
            "dsc": "Ljavax/net/ssl/SSLEngine;"
          },
          {
            "acc": 18,
            "nme": "socket",
            "dsc": "Ljavax/net/ssl/SSLSocket;"
          },
          {
            "acc": 18,
            "nme": "selector",
            "dsc": "Lorg/conscrypt/ApplicationProtocolSelector;"
          }
        ]
      },
      "org/conscrypt/ConscryptEngineSocket$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/ConscryptEngineSocket$1",
        "super": "org/conscrypt/HandshakeListener",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/ConscryptEngineSocket;)V"
          },
          {
            "nme": "onHandshakeFinished",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "val$socket",
            "dsc": "Lorg/conscrypt/ConscryptEngineSocket;"
          }
        ]
      },
      "org/conscrypt/NativeRef$EC_POINT.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EC_POINT",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeRef$EVP_PKEY.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$EVP_PKEY",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/BufferAllocator$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/BufferAllocator$1",
        "super": "org/conscrypt/BufferAllocator",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "()V"
          },
          {
            "nme": "allocateDirectBuffer",
            "acc": 1,
            "dsc": "(I)Lorg/conscrypt/AllocatedBuffer;"
          }
        ],
        "flds": []
      },
      "org/conscrypt/AbstractSessionContext$1.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/AbstractSessionContext$1",
        "super": "java/util/LinkedHashMap",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Lorg/conscrypt/AbstractSessionContext;)V"
          },
          {
            "nme": "removeEldestEntry",
            "acc": 4,
            "dsc": "(Ljava/util/Map$Entry;)Z",
            "sig": "(Ljava/util/Map$Entry<Lorg/conscrypt/ByteArray;Lorg/conscrypt/NativeSslSession;>;)Z"
          }
        ],
        "flds": [
          {
            "acc": 4112,
            "nme": "this$0",
            "dsc": "Lorg/conscrypt/AbstractSessionContext;"
          }
        ]
      },
      "org/conscrypt/ShortBufferWithoutStackTraceException.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/ShortBufferWithoutStackTraceException",
        "super": "javax/crypto/ShortBufferException",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/lang/String;)V"
          },
          {
            "nme": "fillInStackTrace",
            "acc": 33,
            "dsc": "()Ljava/lang/Throwable;"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": 676150236007842683
          }
        ]
      },
      "org/conscrypt/KeyGeneratorImpl$DESEDE.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/KeyGeneratorImpl$DESEDE",
        "super": "org/conscrypt/KeyGeneratorImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "checkKeySize",
            "acc": 4,
            "dsc": "(I)V"
          },
          {
            "nme": "doKeyGeneration",
            "acc": 4,
            "dsc": "(I)[B"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeRef$SSL_SESSION.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/NativeRef$SSL_SESSION",
        "super": "org/conscrypt/NativeRef",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(J)V"
          },
          {
            "nme": "doFree",
            "acc": 0,
            "dsc": "(J)V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/OpenSSLEvpCipherAES$AES$CTR.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/OpenSSLEvpCipherAES$AES$CTR",
        "super": "org/conscrypt/OpenSSLEvpCipherAES$AES",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/ECParameters.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ECParameters",
        "super": "java/security/AlgorithmParametersSpi",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "(Ljava/security/spec/AlgorithmParameterSpec;)V",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([B)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineInit",
            "acc": 4,
            "dsc": "([BLjava/lang/String;)V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetParameterSpec",
            "acc": 4,
            "dsc": "(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;",
            "sig": "<T::Ljava/security/spec/AlgorithmParameterSpec;>(Ljava/lang/Class<TT;>;)TT;",
            "exs": [
              "java/security/spec/InvalidParameterSpecException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "()[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineGetEncoded",
            "acc": 4,
            "dsc": "(Ljava/lang/String;)[B",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "engineToString",
            "acc": 4,
            "dsc": "()Ljava/lang/String;"
          }
        ],
        "flds": [
          {
            "acc": 2,
            "nme": "curve",
            "dsc": "Lorg/conscrypt/OpenSSLECGroupContext;"
          }
        ]
      },
      "org/conscrypt/OpenSSLX509CertPath$Encoding.class": {
        "ver": 51,
        "acc": 16432,
        "nme": "org/conscrypt/OpenSSLX509CertPath$Encoding",
        "super": "java/lang/Enum",
        "mthds": [
          {
            "nme": "values",
            "acc": 9,
            "dsc": "()[Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          },
          {
            "nme": "valueOf",
            "acc": 9,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          },
          {
            "nme": "<init>",
            "acc": 2,
            "dsc": "(Ljava/lang/String;ILjava/lang/String;)V",
            "sig": "(Ljava/lang/String;)V"
          },
          {
            "nme": "findByApiName",
            "acc": 8,
            "dsc": "(Ljava/lang/String;)Lorg/conscrypt/OpenSSLX509CertPath$Encoding;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "access$000",
            "acc": 4104,
            "dsc": "(Lorg/conscrypt/OpenSSLX509CertPath$Encoding;)Ljava/lang/String;"
          },
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 16409,
            "nme": "PKI_PATH",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          },
          {
            "acc": 16409,
            "nme": "PKCS7",
            "dsc": "Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          },
          {
            "acc": 18,
            "nme": "apiName",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 4122,
            "nme": "$VALUES",
            "dsc": "[Lorg/conscrypt/OpenSSLX509CertPath$Encoding;"
          }
        ]
      },
      "org/conscrypt/OpenSSLBIOSource$ByteBufferInputStream.class": {
        "ver": 51,
        "acc": 32,
        "nme": "org/conscrypt/OpenSSLBIOSource$ByteBufferInputStream",
        "super": "java/io/InputStream",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/nio/ByteBuffer;)V"
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "available",
            "acc": 1,
            "dsc": "()I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([B)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "read",
            "acc": 1,
            "dsc": "([BII)I",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "reset",
            "acc": 1,
            "dsc": "()V",
            "exs": [
              "java/io/IOException"
            ]
          },
          {
            "nme": "skip",
            "acc": 1,
            "dsc": "(J)J",
            "exs": [
              "java/io/IOException"
            ]
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "source",
            "dsc": "Ljava/nio/ByteBuffer;"
          }
        ]
      },
      "org/conscrypt/OpenSSLX509CertPath$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/OpenSSLX509CertPath$1",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<clinit>",
            "acc": 8,
            "dsc": "()V"
          }
        ],
        "flds": [
          {
            "acc": 4120,
            "nme": "$SwitchMap$org$conscrypt$OpenSSLX509CertPath$Encoding",
            "dsc": "[I"
          }
        ]
      },
      "org/conscrypt/X509PublicKey.class": {
        "ver": 51,
        "acc": 48,
        "nme": "org/conscrypt/X509PublicKey",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 0,
            "dsc": "(Ljava/lang/String;[B)V"
          },
          {
            "nme": "getAlgorithm",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getFormat",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "getEncoded",
            "acc": 1,
            "dsc": "()[B"
          },
          {
            "nme": "toString",
            "acc": 1,
            "dsc": "()Ljava/lang/String;"
          },
          {
            "nme": "hashCode",
            "acc": 1,
            "dsc": "()I"
          },
          {
            "nme": "equals",
            "acc": 1,
            "dsc": "(Ljava/lang/Object;)Z"
          }
        ],
        "flds": [
          {
            "acc": 26,
            "nme": "serialVersionUID",
            "dsc": "J",
            "val": -8610156854731664298
          },
          {
            "acc": 18,
            "nme": "algorithm",
            "dsc": "Ljava/lang/String;"
          },
          {
            "acc": 18,
            "nme": "encoded",
            "dsc": "[B"
          }
        ]
      },
      "org/conscrypt/ct/CTVerifier.class": {
        "ver": 51,
        "acc": 33,
        "nme": "org/conscrypt/ct/CTVerifier",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Lorg/conscrypt/ct/CTLogStore;)V"
          },
          {
            "nme": "verifySignedCertificateTimestamps",
            "acc": 1,
            "dsc": "(Ljava/util/List;[B[B)Lorg/conscrypt/ct/CTVerificationResult;",
            "sig": "(Ljava/util/List<Ljava/security/cert/X509Certificate;>;[B[B)Lorg/conscrypt/ct/CTVerificationResult;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "verifySignedCertificateTimestamps",
            "acc": 1,
            "dsc": "([Lorg/conscrypt/OpenSSLX509Certificate;[B[B)Lorg/conscrypt/ct/CTVerificationResult;",
            "exs": [
              "java/security/cert/CertificateEncodingException"
            ]
          },
          {
            "nme": "verifyEmbeddedSCTs",
            "acc": 2,
            "dsc": "(Ljava/util/List;[Lorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/ct/CTVerificationResult;)V",
            "sig": "(Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;[Lorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/ct/CTVerificationResult;)V"
          },
          {
            "nme": "verifyExternalSCTs",
            "acc": 2,
            "dsc": "(Ljava/util/List;Lorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/ct/CTVerificationResult;)V",
            "sig": "(Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;Lorg/conscrypt/OpenSSLX509Certificate;Lorg/conscrypt/ct/CTVerificationResult;)V"
          },
          {
            "nme": "verifySingleSCT",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/ct/SignedCertificateTimestamp;Lorg/conscrypt/ct/CertificateEntry;)Lorg/conscrypt/ct/VerifiedSCT$Status;"
          },
          {
            "nme": "markSCTsAsInvalid",
            "acc": 2,
            "dsc": "(Ljava/util/List;Lorg/conscrypt/ct/CTVerificationResult;)V",
            "sig": "(Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;Lorg/conscrypt/ct/CTVerificationResult;)V"
          },
          {
            "nme": "getSCTsFromSCTList",
            "acc": 10,
            "dsc": "([BLorg/conscrypt/ct/SignedCertificateTimestamp$Origin;)Ljava/util/List;",
            "sig": "([BLorg/conscrypt/ct/SignedCertificateTimestamp$Origin;)Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;"
          },
          {
            "nme": "getSCTsFromTLSExtension",
            "acc": 2,
            "dsc": "([B)Ljava/util/List;",
            "sig": "([B)Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;"
          },
          {
            "nme": "getSCTsFromOCSPResponse",
            "acc": 2,
            "dsc": "([B[Lorg/conscrypt/OpenSSLX509Certificate;)Ljava/util/List;",
            "sig": "([B[Lorg/conscrypt/OpenSSLX509Certificate;)Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;"
          },
          {
            "nme": "getSCTsFromX509Extension",
            "acc": 2,
            "dsc": "(Lorg/conscrypt/OpenSSLX509Certificate;)Ljava/util/List;",
            "sig": "(Lorg/conscrypt/OpenSSLX509Certificate;)Ljava/util/List<Lorg/conscrypt/ct/SignedCertificateTimestamp;>;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "store",
            "dsc": "Lorg/conscrypt/ct/CTLogStore;"
          }
        ]
      },
      "org/conscrypt/OpenSSLContextImpl$TLSv11.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/OpenSSLContextImpl$TLSv11",
        "super": "org/conscrypt/OpenSSLContextImpl",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          }
        ],
        "flds": []
      },
      "org/conscrypt/NativeSslSession$1.class": {
        "ver": 51,
        "acc": 4128,
        "nme": "org/conscrypt/NativeSslSession$1",
        "super": "java/lang/Object",
        "mthds": [],
        "flds": []
      },
      "org/conscrypt/TrustedCertificateIndex.class": {
        "ver": 51,
        "acc": 49,
        "nme": "org/conscrypt/TrustedCertificateIndex",
        "super": "java/lang/Object",
        "mthds": [
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "<init>",
            "acc": 1,
            "dsc": "(Ljava/util/Set;)V",
            "sig": "(Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;)V"
          },
          {
            "nme": "index",
            "acc": 2,
            "dsc": "(Ljava/util/Set;)V",
            "sig": "(Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;)V"
          },
          {
            "nme": "index",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/TrustAnchor;"
          },
          {
            "nme": "index",
            "acc": 1,
            "dsc": "(Ljava/security/cert/TrustAnchor;)V"
          },
          {
            "nme": "reset",
            "acc": 1,
            "dsc": "()V"
          },
          {
            "nme": "reset",
            "acc": 1,
            "dsc": "(Ljava/util/Set;)V",
            "sig": "(Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;)V"
          },
          {
            "nme": "findByIssuerAndSignature",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/TrustAnchor;"
          },
          {
            "nme": "findBySubjectAndPublicKey",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/security/cert/TrustAnchor;"
          },
          {
            "nme": "findBySubjectAndPublicKey",
            "acc": 10,
            "dsc": "(Ljava/security/cert/X509Certificate;Ljava/util/Collection;)Ljava/security/cert/TrustAnchor;",
            "sig": "(Ljava/security/cert/X509Certificate;Ljava/util/Collection<Ljava/security/cert/TrustAnchor;>;)Ljava/security/cert/TrustAnchor;"
          },
          {
            "nme": "findAllByIssuerAndSignature",
            "acc": 1,
            "dsc": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set;",
            "sig": "(Ljava/security/cert/X509Certificate;)Ljava/util/Set<Ljava/security/cert/TrustAnchor;>;"
          }
        ],
        "flds": [
          {
            "acc": 18,
            "nme": "subjectToTrustAnchors",
            "dsc": "Ljava/util/Map;",
            "sig": "Ljava/util/Map<Ljavax/security/auth/x500/X500Principal;Ljava/util/List<Ljava/security/cert/TrustAnchor;>;>;"
          }
        ]
      }
    }
  }
}